!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
$	bin/spike.out	/^/;"	v
$	bin/surrogate.out	/^˝ˇˇ®/;"	v
$	figures/dt/full/mi_00625.png	/^/;"	v
$	figures/gauss/linear_05_06_50.png	/^V¬√√SΩõıÌ∂ÛÁœßπÔü˛)gggıÍ’K√áW≠Zµ¥|˘r}ˆŸgJHH–_|ëmu#˜iﬁºπíííå./;"	v
$	figures/mi_fig_spikeToLFP/10min/full/10.png	/^}◊ëò/;"	v
$	figures/one-way/direct/significance/mi_baseline_ifnet.png	/^$/;"	v
$	obj/network.o	/^ELF/;"	v
$	tags	/^test	doc\/research-log.md	\/^    - calculate the clustering coefficient and the mean path of the neuorns in their own network as well as across networks; **The basic found is that in the current simulation test, neurons contribute to the local field potential have no self clustered effect, which means that each neuron locate in its own neuron cluster in post network**$\/;"	v$/;"	v
$$D	figures/gauss/mi_gauss_0.5_1_10_1k.png	/^S◊Æ]uŸeói¸¯Ò^«˜ÏŸSü|Úâ˛˛˜øÎÕ7ﬂTNNéZ∑n≠∏∏8›}˜›ä>·Nd5…]nÏÿ±j◊Æù8¿ÂW6E/;"	v
$X	reports/Mar16/report.synctex.gz	/^^˚Õ;L>Kó’)°$XåÌ¿, 	àÉﬁ¨-¿…c¬CpçM1‚£\/Ç5É±¶#w≤áıp†≠Ä˛I”ê5áa!ßhÁ6‡©ÿ√wXK<ÚÄ÷èÙ]i§h])Qt∆F⁄n;ÿ¶i	È‰‹â∞™¯‡X'G(oßùNˆKqØO7Ç≥8ªJóé3∏ñLGÿYì!Xÿï†Á$/;"	v
$x	figures/gauss/200.png	/^Q)! r,X/;"	v
A	figures/gauss/mi_gauss_0.5_0.01.png	/^/;"	v
A	figures/mi_fig_spikeToLFP/direct/10bins/5s.png	/^Ëÿë∫bUV>;>¨›0·X€iJ®Hã6ºŒ„—⁄éñé¨Ñ°LÄ0A),\/D∏<”{Lz¨ª]w¥ê∂`ÖË"Áﬁ=ZK¿à‘ÂÄU¶¶4Î⁄5‡˚Ôü∑íZ¡œÕè•a512$/;"	v
A	figures/neuronal_dimension_analysis/Current_trace.png	/^/;"	v
A	figures/neuronal_dimension_analysis/Voltage_trace.png	/^/;"	v
A	figures/nn0050/n1i.png	/^/;"	v
A	figures/one-way/direct/indirected/mi_direct_01_nodelay.png	/^BPÒj±XÙ'-K‹Í∂°h≠R%¥)E©¯ ƒ" ™ÇQ´T¬"$òdÜêe~åàŸ…Ã9s&Ô◊uÂ:r÷Ô.·ìÔ}ü€Êt:ù/;"	v
A	reports/Jul20/rl0.png	/^˛¸Á?w€y&œ£†o\/≈≤ ÜVúkj◊îe/;"	v
A	reports/Jul20/rl3.png	/^˝\\R;H%„u›	Y*S /;"	v
AB	figures/nn0145/n1sb.png	/^	^kãà0ê"À3˘≥”I´ÙïπÊ««ñ@rGå˛Ω,Z÷Z/;"	v
Abbott	doc/thesis-proposal.md	/^2. Dayan, P., & Abbott, L. F. (2001). Theoretical neuroscience (Vol. 806). Cambridge, MA: MIT Press.$/;"	v
Abbott	tags	/^Abbott	doc\/thesis-proposal.md	\/^2. Dayan, P., & Abbott, L. F. (2001). Theoretical neuroscience (Vol. 806). Cambridge, MA: MIT Press.$\/;"	v$/;"	v
Albano	doc/thesis-proposal.md	/^7. Cellucci, C. J., Albano, A. M., & Rapp, P. E. (2005). Statistical validation of mutual information calculations: Comparison of alternative numerical algorithms. Physical Review E, 71(6), 066208.$/;"	v
Albano	tags	/^Rapp	doc\/thesis-proposal.md	\/^7. Cellucci, C. J., Albano, A. M., & Rapp, P. E. (2005). Statistical validation of mutual information calculations: Comparison of alternative numerical algorithms. Physical Review E, 71(6), 066208.$\/;"	v$/;"	v
Alpha	include/neuron.h	/^	double Alpha(int option);$/;"	p	class:Neuron	access:private	signature:(int option)
Alpha	src/neuron.cpp	/^double Neuron::Alpha(int option) {$/;"	f	class:Neuron	signature:(int option)
AnalyseLine	src/get-config.cpp	/^bool AnalyseLine(const string & line, string & key, string & value) {$/;"	f	signature:(const string & line, string & key, string & value)
Anastassiou	doc/thesis-proposal.md	/^11. Buzs√°ki, G., Anastassiou, C. A., & Koch, C. (2012). The origin of extracellular fields and currents‚ÄîEEG, ECoG, LFP and spikes. Nature reviews neuroscience, 13(6), 407-420.$/;"	v
Anastassiou	tags	/^Koch	doc\/thesis-proposal.md	\/^11. Buzs√°ki, G., Anastassiou, C. A., & Koch, C. (2012). The origin of extracellular fields and currents‚ÄîEEG, ECoG, LFP and spikes. Nature reviews neuroscience, 13(6), 407-420.$\/;"	v$/;"	v
AutoCov	include/stationary.h	/^void AutoCov(vector<double>& data, vector<double>& ac, size_t num_lag);$/;"	p	signature:(vector<double>& data, vector<double>& ac, size_t num_lag)
AutoCov	include/stationary.h	/^void AutoCov(vector<vector<double> >& data, vector<double>& ac, size_t indx, size_t len);$/;"	p	signature:(vector<vector<double> >& data, vector<double>& ac, size_t indx, size_t len)
AutoCov	src/stationary.cpp	/^void AutoCov(vector<double>& data, vector<double>& ac, size_t num_lag){$/;"	f	signature:(vector<double>& data, vector<double>& ac, size_t num_lag)
AutoCov	src/stationary.cpp	/^void AutoCov(vector<vector<double> >& data, vector<double>& ac, size_t indx, size_t len){$/;"	f	signature:(vector<vector<double> >& data, vector<double>& ac, size_t indx, size_t len)
B	figures/mi_fig_spikeToLFP/direct/50bins/25s.png	/^/;"	v
B	figures/one-way/direct/indirected/sta_sv_00.png	/^		—≈ãØêêï,Y“Ï¿´—Ç/;"	v
B	reports/Jul20/ll0.png	/^Tˆ⁄⁄⁄à¸ÂåıÎ◊cÈ“• Îa√Ü!;;ã\//;"	v
Berger	doc/thesis-proposal.md	/^10. Taghva, A., Song, D., Hampson, R. E., Deadwyler, S. A., & Berger, T. W. (2012). Determination of Relevant Neuron‚ÄìNeuron Connections for Neural Prosthetics Using Time-Delayed Mutual Information: Tutorial and Preliminary Results. World neurosurgery, 78(6), 618-630.$/;"	v
Berger	tags	/^Berger	doc\/thesis-proposal.md	\/^10. Taghva, A., Song, D., Hampson, R. E., Deadwyler, S. A., & Berger, T. W. (2012). Determination of Relevant Neuron‚ÄìNeuron Connections for Neural Prosthetics Using Time-Delayed Mutual Information: Tutorial and Preliminary Results. World neurosurgery, 78(6), 618-630.$\/;"	v$/;"	v
Berger	tags	/^Hampson	doc\/thesis-proposal.md	\/^10. Taghva, A., Song, D., Hampson, R. E., Deadwyler, S. A., & Berger, T. W. (2012). Determination of Relevant Neuron‚ÄìNeuron Connections for Neural Prosthetics Using Time-Delayed Mutual Information: Tutorial and Preliminary Results. World neurosurgery, 78(6), 618-630.$\/;"	v$/;"	v
Beta	include/neuron.h	/^	double Beta(int option);$/;"	p	class:Neuron	access:private	signature:(int option)
Beta	src/neuron.cpp	/^double Neuron::Beta(int option) {$/;"	f	class:Neuron	signature:(int option)
BtA	reports/Jul20/fig5.png	/^◊ö‡m∏g7F˜u‡|F!iπ%≠–3!Dg A!∫†!é&ÀÀ˜$4€æ˚ø¥â…ˇ∑ãA\/on÷`è¢c1d ¥ûëﬁ›Ë›ÕÜ?O•êWRŒ“?bHœkÿçë¢(Ï?ó…◊˚∏y∞;∑qÁ∑c)‰…T∑BtYı©)c°6cÕ„7Ò—ú/;"	v
C	bin/mi_dd.out	/^ELF/;"	v
C	figures/gauss/20.png	/^W||º∂lŸr…q«éSZZön∫È&µk◊NáC[∑nΩ‰∏SßN©Kó.r8z˘Âó=Ò/;"	v
C	figures/two-way/partial/mi_01.png	/^!›Ñ•ÒÙTåx¸˙´b*ôá‡‡/;"	v
COMMENT_CHAR	include/get-config.h	11;"	d
Cai	doc/thesis-proposal.md	/^5. Rangan, A. V., & Cai, D. (2007). Fast numerical methods for simulating large-scale integrate-and-fire neuronal networks. Journal of Computational Neuroscience, 22(1), 81-100.$/;"	v
CalculateClusteringCoefficient	include/connectivity_matrix.h	/^	void CalculateClusteringCoefficient();$/;"	p	class:ConnectivityMatrix	access:public	signature:()
CalculateClusteringCoefficient	src/connectivity_matrix.cpp	/^void ConnectivityMatrix::CalculateClusteringCoefficient() {$/;"	f	class:ConnectivityMatrix	signature:()
CheckFire	include/neuron.h	/^	void CheckFire(double voltage, double t, double dt);$/;"	p	class:Neuron	access:private	signature:(double voltage, double t, double dt)
CheckFire	src/neuron.cpp	/^void Neuron::CheckFire(double voltage, double t, double dt) {$/;"	f	class:Neuron	signature:(double voltage, double t, double dt)
Compare	src/network.cpp	/^bool Compare(const SpikeElement &x, const SpikeElement &y) {$/;"	f	signature:(const SpikeElement &x, const SpikeElement &y)
ConnectivityMatrix	include/connectivity_matrix.h	/^class ConnectivityMatrix {$/;"	c
ConnectivityMatrix::CalculateClusteringCoefficient	include/connectivity_matrix.h	/^	void CalculateClusteringCoefficient();$/;"	p	class:ConnectivityMatrix	access:public	signature:()
ConnectivityMatrix::CalculateClusteringCoefficient	src/connectivity_matrix.cpp	/^void ConnectivityMatrix::CalculateClusteringCoefficient() {$/;"	f	class:ConnectivityMatrix	signature:()
ConnectivityMatrix::FindLeastPath	include/connectivity_matrix.h	/^	void FindLeastPath();$/;"	p	class:ConnectivityMatrix	access:public	signature:()
ConnectivityMatrix::FindLeastPath	src/connectivity_matrix.cpp	/^void ConnectivityMatrix::FindLeastPath() {$/;"	f	class:ConnectivityMatrix	signature:()
ConnectivityMatrix::GetMeanClusteringCoefficient	include/connectivity_matrix.h	/^	double GetMeanClusteringCoefficient();$/;"	p	class:ConnectivityMatrix	access:public	signature:()
ConnectivityMatrix::GetMeanClusteringCoefficient	src/connectivity_matrix.cpp	/^double ConnectivityMatrix::GetMeanClusteringCoefficient() {$/;"	f	class:ConnectivityMatrix	signature:()
ConnectivityMatrix::GetMeanPath	include/connectivity_matrix.h	/^	double GetMeanPath();$/;"	p	class:ConnectivityMatrix	access:public	signature:()
ConnectivityMatrix::GetMeanPath	src/connectivity_matrix.cpp	/^double ConnectivityMatrix::GetMeanPath() {$/;"	f	class:ConnectivityMatrix	signature:()
ConnectivityMatrix::IsConnect	include/connectivity_matrix.h	/^	bool IsConnect();$/;"	p	class:ConnectivityMatrix	access:public	signature:()
ConnectivityMatrix::IsConnect	src/connectivity_matrix.cpp	/^bool ConnectivityMatrix::IsConnect(){$/;"	f	class:ConnectivityMatrix	signature:()
ConnectivityMatrix::LoadMatrix	include/connectivity_matrix.h	/^	void LoadMatrix(vector<vector<int> > &matrix);$/;"	p	class:ConnectivityMatrix	access:public	signature:(vector<vector<int> > &matrix)
ConnectivityMatrix::LoadMatrix	src/connectivity_matrix.cpp	/^void ConnectivityMatrix::LoadMatrix(vector<vector<int> >& matrix) {$/;"	f	class:ConnectivityMatrix	signature:(vector<vector<int> >& matrix)
ConnectivityMatrix::OutMatrix	include/connectivity_matrix.h	/^	void OutMatrix(string path);$/;"	p	class:ConnectivityMatrix	access:public	signature:(string path)
ConnectivityMatrix::OutMatrix	src/connectivity_matrix.cpp	/^void ConnectivityMatrix::OutMatrix(string path) {$/;"	f	class:ConnectivityMatrix	signature:(string path)
ConnectivityMatrix::OutPathMatrix	include/connectivity_matrix.h	/^	void OutPathMatrix(string path);$/;"	p	class:ConnectivityMatrix	access:public	signature:(string path)
ConnectivityMatrix::OutPathMatrix	src/connectivity_matrix.cpp	/^void ConnectivityMatrix::OutPathMatrix(string path){$/;"	f	class:ConnectivityMatrix	signature:(string path)
ConnectivityMatrix::ReadMatrix	include/connectivity_matrix.h	/^	int ReadMatrix(int i, int j);$/;"	p	class:ConnectivityMatrix	access:public	signature:(int i, int j)
ConnectivityMatrix::ReadMatrix	src/connectivity_matrix.cpp	/^int ConnectivityMatrix::ReadMatrix(int i, int j) {$/;"	f	class:ConnectivityMatrix	signature:(int i, int j)
ConnectivityMatrix::Rewire	include/connectivity_matrix.h	/^	void Rewire(double p, int seed, bool OutputOption);$/;"	p	class:ConnectivityMatrix	access:public	signature:(double p, int seed, bool OutputOption)
ConnectivityMatrix::Rewire	src/connectivity_matrix.cpp	/^void ConnectivityMatrix::Rewire(double p, int seed, bool OutputOption) {$/;"	f	class:ConnectivityMatrix	signature:(double p, int seed, bool OutputOption)
ConnectivityMatrix::Scan	include/connectivity_matrix.h	/^	void Scan(int target_value, int row_index_, vector<int> &output_indices);$/;"	p	class:ConnectivityMatrix	access:private	signature:(int target_value, int row_index_, vector<int> &output_indices)
ConnectivityMatrix::Scan	src/connectivity_matrix.cpp	/^void ConnectivityMatrix::Scan(int target_value, int row_index, vector<int> &output_indices) {$/;"	f	class:ConnectivityMatrix	signature:(int target_value, int row_index, vector<int> &output_indices)
ConnectivityMatrix::SetConnectingDensity	include/connectivity_matrix.h	/^	void SetConnectingDensity(int connecting_density);$/;"	p	class:ConnectivityMatrix	access:public	signature:(int connecting_density)
ConnectivityMatrix::SetConnectingDensity	src/connectivity_matrix.cpp	/^void ConnectivityMatrix::SetConnectingDensity(int connecting_density) {$/;"	f	class:ConnectivityMatrix	signature:(int connecting_density)
ConnectivityMatrix::SetNeuronNumber	include/connectivity_matrix.h	/^	void SetNeuronNumber(int neuron_number);$/;"	p	class:ConnectivityMatrix	access:public	signature:(int neuron_number)
ConnectivityMatrix::SetNeuronNumber	src/connectivity_matrix.cpp	/^void ConnectivityMatrix::SetNeuronNumber(int neuron_number) {$/;"	f	class:ConnectivityMatrix	signature:(int neuron_number)
ConnectivityMatrix::clustering_coefficient_	include/connectivity_matrix.h	/^	vector<double> clustering_coefficient_; \/\/ clustering coefficient of each neuron;$/;"	m	class:ConnectivityMatrix	access:private
ConnectivityMatrix::connecting_density_	include/connectivity_matrix.h	/^	int connecting_density_; \/\/ number of connection on one side of each neuron;$/;"	m	class:ConnectivityMatrix	access:private
ConnectivityMatrix::matrix_	include/connectivity_matrix.h	/^	vector<vector<int> > matrix_; \/\/ binary connectivity matrix; posible value is 1 or 0;$/;"	m	class:ConnectivityMatrix	access:private
ConnectivityMatrix::mediate_mode_matrix_	include/connectivity_matrix.h	/^	vector<vector<int> > mediate_mode_matrix_; \/\/ indices of mediate neurons between the pole of neuron pairs;$/;"	m	class:ConnectivityMatrix	access:private
ConnectivityMatrix::neuron_number_	include/connectivity_matrix.h	/^	int neuron_number_;$/;"	m	class:ConnectivityMatrix	access:private
ConnectivityMatrix::path_matrix_	include/connectivity_matrix.h	/^	vector<vector<int> > path_matrix_; \/\/ least path between each neuronal pair;$/;"	m	class:ConnectivityMatrix	access:private
Corr	include/stationary.h	/^template <class T> double Corr(vector<T>& x, vector<T>& y) {$/;"	f	signature:(vector<T>& x, vector<T>& y)
Cov	include/stationary.h	/^template <class T> double Cov(vector<T>& x, vector<T>& y) {$/;"	f	signature:(vector<T>& x, vector<T>& y)
D	figures/mi_fig_spikeToLFP/direct/4bins/20s.png	/^⁄3/;"	v
D	figures/one-way/partial/mi_partial_01_16m_spikeshift.png	/^/;"	v
D	linear_50_length.png	/^ÖÕ#cπ\\ﬁc?D=Ÿ69?éÍ«uDÃ„C¨◊}7¡g>∫ªª#::yyy÷c&ì	yyyxÙ—G€˝‹ä+∞tÈR‰‰‰ÿÑ∫ÛˆˆÜZ≠FII	>å)S¶¥:«œœ˝˙ı√gü}Ü  JLû<˘˛.äààà»Å	~/;"	v
DDDDD	figures/nn0145/n1sb.png	/^¢ı)Ä9JGätD∫Pé&ÇáJÄ–RwÁ˚#ôI6[ìù∂õ˚w]\\¿ÏÏÃª≥ª≥ÛÃ˚<Ô+à¢(ÇàààààH&Ω@DDDDD•"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“"""""“'Ó‹πÉ˜ﬁ{›ªwG’™Ua2ô„ˆÛo‹∏ÅQ£F°Fç®X±"∫tÈÇ„«è´ÿb"""""cc/;"	v
Deadwyler	doc/thesis-proposal.md	/^10. Taghva, A., Song, D., Hampson, R. E., Deadwyler, S. A., & Berger, T. W. (2012). Determination of Relevant Neuron‚ÄìNeuron Connections for Neural Prosthetics Using Time-Delayed Mutual Information: Tutorial and Preliminary Results. World neurosurgery, 78(6), 618-630.$/;"	v
Deadwyler	tags	/^Berger	doc\/thesis-proposal.md	\/^10. Taghva, A., Song, D., Hampson, R. E., Deadwyler, S. A., & Berger, T. W. (2012). Determination of Relevant Neuron‚ÄìNeuron Connections for Neural Prosthetics Using Time-Delayed Mutual Information: Tutorial and Preliminary Results. World neurosurgery, 78(6), 618-630.$\/;"	v$/;"	v
Deadwyler	tags	/^Hampson	doc\/thesis-proposal.md	\/^10. Taghva, A., Song, D., Hampson, R. E., Deadwyler, S. A., & Berger, T. W. (2012). Determination of Relevant Neuron‚ÄìNeuron Connections for Neural Prosthetics Using Time-Delayed Mutual Information: Tutorial and Preliminary Results. World neurosurgery, 78(6), 618-630.$\/;"	v$/;"	v
Douglas	doc/research-log.md	/^* Review about what discussion with Douglas;$/;"	v
E	bin/lcc.out	/^èˇˇHâEòÚEòHÉƒh[]√UHâÂSHÅÏò/;"	v
E	figures/triple/mi_10.png	/^ú:•ÙHîÂm^Á«E;¨V+ÊÃôÉúúËızå1ü|ÚâOœ˝‰ìO0fÃdff¬`0`–†Ax˛˘ÁaÁö¢™„k/;"	v
E	obj/lfp.o	/^/;"	v
E	reports/oct31/report.tex	/^		When $n >> 1$, we can substitute E(XY), $\\mu_x$, $\\mu_y$, $\\sigma_x$ and $\\sigma_y$ into $\\rho$. For $\\alpha = \\beta$,$/;"	p	file:	signature:(XY)
ECoG	doc/thesis-proposal.md	/^11. Buzs√°ki, G., Anastassiou, C. A., & Koch, C. (2012). The origin of extracellular fields and currents‚ÄîEEG, ECoG, LFP and spikes. Nature reviews neuroscience, 13(6), 407-420.$/;"	v
ECoG	doc/thesis-proposal.md	/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$/;"	v
ECoG	tags	/^ECoG	doc\/thesis-proposal.md	\/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$\/;"	v$/;"	v
ECoG	tags	/^Koch	doc\/thesis-proposal.md	\/^11. Buzs√°ki, G., Anastassiou, C. A., & Koch, C. (2012). The origin of extracellular fields and currents‚ÄîEEG, ECoG, LFP and spikes. Nature reviews neuroscience, 13(6), 407-420.$\/;"	v$/;"	v
ECoG	tags	/^activities	doc\/thesis-proposal.md	\/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$\/;"	v$/;"	v
ECoG	tags	/^magnetoencephalography	doc\/thesis-proposal.md	\/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$\/;"	p	file:	signature:(MEG)$/;"	v
ECoG	tags	/^techniques	doc\/thesis-proposal.md	\/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$\/;"	v$/;"	v
EEG	doc/thesis-proposal.md	/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$/;"	v
EEG	tags	/^ECoG	doc\/thesis-proposal.md	\/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$\/;"	v$/;"	v
EEG	tags	/^activities	doc\/thesis-proposal.md	\/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$\/;"	v$/;"	v
EEG	tags	/^magnetoencephalography	doc\/thesis-proposal.md	\/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$\/;"	p	file:	signature:(MEG)$/;"	v
EEG	tags	/^techniques	doc\/thesis-proposal.md	\/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$\/;"	v$/;"	v
F	figures/dt/partial/10bins/mi_00625.png	/^/;"	v
F	figures/gauss/linear_001_001_50.png	/^ªˇ>ÁŒù£Q£Fœ=$_“¨ÁEì&M∏uÎÅÅÅ\/>/;"	v
F	figures/gauss/mi_gauss_baseline.png	/^/;"	v
F	figures/mi_fig_spikeToLFP/direct/10bins/30s.png	/^x=/;"	v
F	figures/one-way/partial/mi_partial_10_16m_currentshift.png	/^ÈÕ7•?ˇŸΩ=CNá/;"	v
F	linear_max_dx_1e6.png	/^/;"	v
F	reports/May29/Review slides.odp	/^›÷´G∑ˇm\/@DüêU´Ï_/;"	v
FindEdges	include/mi_adaptive.h	/^void FindEdges(vector<double>& data, vector<double>& edges, int occupancy);$/;"	p	signature:(vector<double>& data, vector<double>& edges, int occupancy)
FindEdges	src/mi_adaptive.cpp	/^void FindEdges(vector<double>& data, vector<double>& edges, int occupancy) {$/;"	f	signature:(vector<double>& data, vector<double>& edges, int occupancy)
FindLeastPath	include/connectivity_matrix.h	/^	void FindLeastPath();$/;"	p	class:ConnectivityMatrix	access:public	signature:()
FindLeastPath	src/connectivity_matrix.cpp	/^void ConnectivityMatrix::FindLeastPath() {$/;"	f	class:ConnectivityMatrix	signature:()
Fire	include/neuron.h	/^	void Fire(double t, double dt);$/;"	p	class:Neuron	access:public	signature:(double t, double dt)
Fire	src/neuron.cpp	/^void Neuron::Fire(double t, double dt) {$/;"	f	class:Neuron	signature:(double t, double dt)
G	figures/one-way/direct/indirected/sta_si_00.png	/^2/;"	v
G	figures/two-way/full/mi_01.png	/^Ú⁄Î/;"	v
G	mi_01_2bins.png	/^îññf ı/;"	v
GZ	figures/voltage_1.5kHz.png	/^‚û{ÓÅ+ØºvÏÿ1Ì˚´V≠ÇØ˝ÎpﬁyÁÒ4Ã2Í¿≤µK®øüÓ˛/;"	v
GaussKernel	test/mi_test.cpp	/^double GaussKernel() {$/;"	f	signature:()
GenerateExternalPoissonSequence	include/neuron.h	/^void GenerateExternalPoissonSequence(double rate, double tmax, int seed, vector<double> & list);$/;"	p	signature:(double rate, double tmax, int seed, vector<double> & list)
GenerateExternalPoissonSequence	src/neuron.cpp	/^void GenerateExternalPoissonSequence(double rate, double tmax, int seed, vector<double> & list) {$/;"	f	signature:(double rate, double tmax, int seed, vector<double> & list)
GenerateInternalPoisson	include/neuron.h	/^	void GenerateInternalPoisson(bool function, double tmax, bool outSet);$/;"	p	class:Neuron	access:private	signature:(bool function, double tmax, bool outSet)
GenerateInternalPoisson	src/neuron.cpp	/^void Neuron::GenerateInternalPoisson(bool function, double tmax, bool outSet) {$/;"	f	class:Neuron	signature:(bool function, double tmax, bool outSet)
Generator	doc/research-log.md	/^Current test shows that there is no problem in external Poisson Generator;$/;"	v
GetConductance	include/network.h	/^	void GetConductance(int i, bool function);$/;"	p	class:NeuronalNetwork	access:public	signature:(int i, bool function)
GetConductance	include/neuron.h	/^	double GetConductance(bool x);$/;"	p	class:Neuron	access:public	signature:(bool x)
GetConductance	src/network.cpp	/^void NeuronalNetwork::GetConductance(int i, bool function) {$/;"	f	class:NeuronalNetwork	signature:(int i, bool function)
GetConductance	src/neuron.cpp	/^double Neuron::GetConductance(bool x) {$/;"	f	class:Neuron	signature:(bool x)
GetLastSpike	include/neuron.h	/^	double GetLastSpike();$/;"	p	class:Neuron	access:public	signature:()
GetLastSpike	src/neuron.cpp	/^double Neuron::GetLastSpike() {$/;"	f	class:Neuron	signature:()
GetMeanClusteringCoefficient	include/connectivity_matrix.h	/^	double GetMeanClusteringCoefficient();$/;"	p	class:ConnectivityMatrix	access:public	signature:()
GetMeanClusteringCoefficient	src/connectivity_matrix.cpp	/^double ConnectivityMatrix::GetMeanClusteringCoefficient() {$/;"	f	class:ConnectivityMatrix	signature:()
GetMeanPath	include/connectivity_matrix.h	/^	double GetMeanPath();$/;"	p	class:ConnectivityMatrix	access:public	signature:()
GetMeanPath	src/connectivity_matrix.cpp	/^double ConnectivityMatrix::GetMeanPath() {$/;"	f	class:ConnectivityMatrix	signature:()
GetNeuronIndex	include/neuron.h	/^	int GetNeuronIndex();$/;"	p	class:Neuron	access:public	signature:()
GetNeuronIndex	src/neuron.cpp	/^int Neuron::GetNeuronIndex() {$/;"	f	class:Neuron	signature:()
GetNeuronNumber	include/network.h	/^	int GetNeuronNumber();$/;"	p	class:NeuronalNetwork	access:public	signature:()
GetNeuronNumber	src/network.cpp	/^int NeuronalNetwork::GetNeuronNumber() {$/;"	f	class:NeuronalNetwork	signature:()
GetNeuronType	include/network.h	/^	void GetNeuronType(vector<bool> & x);$/;"	p	class:NeuronalNetwork	access:public	signature:(vector<bool> & x)
GetNeuronType	src/network.cpp	/^void NeuronalNetwork::GetNeuronType(vector<bool>& types) {$/;"	f	class:NeuronalNetwork	signature:(vector<bool>& types)
GetNeuronalType	include/neuron.h	/^	bool GetNeuronalType();$/;"	p	class:Neuron	access:public	signature:()
GetNeuronalType	src/neuron.cpp	/^bool Neuron::GetNeuronalType() {$/;"	f	class:Neuron	signature:()
GetNewSpikes	include/network.h	/^	void GetNewSpikes(double t, vector<vector<Spike> >& data);$/;"	p	class:NeuronalNetwork	access:public	signature:(double t, vector<vector<Spike> >& data)
GetNewSpikes	include/neuron.h	/^	void GetNewSpikes(double t, vector<Spike> &x);$/;"	p	class:Neuron	access:public	signature:(double t, vector<Spike> &x)
GetNewSpikes	src/network.cpp	/^void NeuronalNetwork::GetNewSpikes(double t, vector<vector<Spike> >& data) {$/;"	f	class:NeuronalNetwork	signature:(double t, vector<vector<Spike> >& data)
GetNewSpikes	src/neuron.cpp	/^void Neuron::GetNewSpikes(double t, vector<Spike>& x) {$/;"	f	class:Neuron	signature:(double t, vector<Spike>& x)
GetPotential	include/neuron.h	/^	double GetPotential();$/;"	p	class:Neuron	access:public	signature:()
GetPotential	src/neuron.cpp	/^double Neuron::GetPotential() {$/;"	f	class:Neuron	signature:()
H	bin/lcc.out	/^èˇˇHâEòÚEòHÉƒh[]√UHâÂSHÅÏò/;"	v
H	bin/mi_dd.out	/^./;"	v
H	bin/spike2.out	/^˛ˇˇf.¬`/;"	v
H	bin/vecmanip_test.out	/^HâE¯HçU¯HçEHâ÷Hâ«Ë∆/;"	v
H	figures/gauss/mi_gauss_0.5_0.01.png	/^˙‡É‘πsÁf=g¯·Ú˘|µ.ÂÎ˜˚ı∆o®gœûj◊Æ]KK/;"	v
H	figures/mi_fig_spikeToLFP/direct/10bins/60s.png	/^÷ëXä/;"	v
H	figures/triple/mi_10.png	/^ ⁄∞§èâ(z9ÍúÚ˝˜ﬂ+="Ø¯s*‚„„ëôô	/;"	v
H	obj/main_mi_bb.o	/^/;"	v
H	obj/mi_uniform.o	/^ELF/;"	v
H	reports/oct31/report.tex	/^		where $\\sigma_x$ is the standard deviation of X. The entropy of Y, H(Y), can be expressed in the same way. Define the correlation coefficient between X and Y is $\\rho$, the joint entropy of X and Y can be expressed as:$/;"	p	file:	signature:(Y)
H	test/entropy_binary.cpp	/^double H(vector<int>& x) {$/;"	f	signature:(vector<int>& x)
HDDDD	figures/nn0145/n2sb.png	/^/;"	v
Hampson	doc/thesis-proposal.md	/^10. Taghva, A., Song, D., Hampson, R. E., Deadwyler, S. A., & Berger, T. W. (2012). Determination of Relevant Neuron‚ÄìNeuron Connections for Neural Prosthetics Using Time-Delayed Mutual Information: Tutorial and Preliminary Results. World neurosurgery, 78(6), 618-630.$/;"	v
Hampson	tags	/^Berger	doc\/thesis-proposal.md	\/^10. Taghva, A., Song, D., Hampson, R. E., Deadwyler, S. A., & Berger, T. W. (2012). Determination of Relevant Neuron‚ÄìNeuron Connections for Neural Prosthetics Using Time-Delayed Mutual Information: Tutorial and Preliminary Results. World neurosurgery, 78(6), 618-630.$\/;"	v$/;"	v
Hampson	tags	/^Hampson	doc\/thesis-proposal.md	\/^10. Taghva, A., Song, D., Hampson, R. E., Deadwyler, S. A., & Berger, T. W. (2012). Determination of Relevant Neuron‚ÄìNeuron Connections for Neural Prosthetics Using Time-Delayed Mutual Information: Tutorial and Preliminary Results. World neurosurgery, 78(6), 618-630.$\/;"	v$/;"	v
Here	reports/oct31/report.tex	/^		Here, I give the neuronal network setting applied in my simulation.$/;"	v
HistBool	include/mi_adaptive.h	/^double HistBool(vector<bool> & data);$/;"	p	signature:(vector<bool> & data)
HistBool	src/mi_adaptive.cpp	/^double HistBool(vector<bool>& data) {$/;"	f	signature:(vector<bool>& data)
HxD	figures/gauss/200.png	/^H,‹x#‹s¿o~C˛>”p:Ñ…b¶Õ’Æ°ﬁÙÉ√/;"	v
Hz	reports/Apr25/report.tex	/^	% In the simulating system, \\#20 neuron is excitatory and \\#47 neuron is inhibitory. Under the driving of feedforward inputs with same average rate, which is 1500 Hz, their average firing rate from 1s to 10s is 14 Hz and 12 Hz respectively. However, comparing the TDMI signal which they interact with their directly connected neuron clusters, TDMI in excitatory cases do indicate the neuronal interactions and the direction of information flow, while in inhibitory cases it fails.$/;"	v
Hz	reports/Mar16/report.tex	/^	In the simulating system, \\#20 neuron is excitatory and \\#47 neuron is inhibitory. Under the driving of feedforward inputs with same average rate, which is 1500 Hz, their average firing rate from 1s to 10s is 14 Hz and 12 Hz respectively. However, comparing the TDMI signal which they interact with their directly connected neuron clusters, TDMI in excitatory cases do indicate the neuronal interactions and the direction of information flow, while in inhibitory cases it fails.$/;"	v
I	figures/mi_fig_spikeToLFP/direct/100bins/60s.png	/^/;"	v
I	figures/one-way/direct/significance/mi_01_40_1k.png	/^˙;ÄK]Î÷≠%I,ê1∆œ—/;"	v
I	figures/one-way/partial/mi_partial_10_16m_spikeshift.png	/^/;"	v
I	figures/two-way/partial/mi_01.png	/^,--•é()___DEEaÊÃôh’™BCCq·¬ƒ∆∆Úπ˘e1b‚„„1r‰H8::"--/;"	v
I	linear_max_dx_1e6.png	/^1ßÅdùòï&ﬂ5aÌôµ<{yóyπò¶·=p‡/;"	v
I	reports/Mar16/report.synctex.gz	/^ã/;"	v
I8	figures/gauss/20.png	/^©Á;aË◊ﬂ’JJJ[ZZ⁄‚±>¯†>¯‡m⁄¥IáÌ∫ÄMq	/;"	v
Il	figures/one-way/direct/mi_direct_10.png	/^X/;"	v
InNewSpikes	include/network.h	/^	void InNewSpikes(vector<vector<Spike> > &data);$/;"	p	class:NeuronalNetwork	access:public	signature:(vector<vector<Spike> > &data)
InNewSpikes	src/network.cpp	/^void NeuronalNetwork::InNewSpikes(vector<vector<Spike> > & data) {$/;"	f	class:NeuronalNetwork	signature:(vector<vector<Spike> > & data)
InSpike	include/neuron.h	/^	void InSpike(Spike x);$/;"	p	class:Neuron	access:public	signature:(Spike x)
InSpike	src/neuron.cpp	/^void Neuron::InSpike(Spike x) {$/;"	f	class:Neuron	signature:(Spike x)
InitializeBinFile	src/main_net.cpp	/^void InitializeBinFile(string filename, size_t* shape) {$/;"	f	signature:(string filename, size_t* shape)
InitializeBinFile	src/main_nets.cpp	/^void InitializeBinFile(string filename, size_t* shape) {$/;"	f	signature:(string filename, size_t* shape)
InitializeExternalPoissonProcess	include/network.h	/^	void InitializeExternalPoissonProcess(vector<vector<double> >& rates, double tmax, int seed);$/;"	p	class:NeuronalNetwork	access:public	signature:(vector<vector<double> >& rates, double tmax, int seed)
InitializeExternalPoissonProcess	src/network.cpp	/^void NeuronalNetwork::InitializeExternalPoissonProcess(vector<vector<double> >& rates, double tmax, int seed) {$/;"	f	class:NeuronalNetwork	signature:(vector<vector<double> >& rates, double tmax, int seed)
InitializeInternalPoissonRate	include/network.h	/^	void InitializeInternalPoissonRate(vector<vector<double> >& rates);$/;"	p	class:NeuronalNetwork	access:public	signature:(vector<vector<double> >& rates)
InitializeInternalPoissonRate	src/network.cpp	/^void NeuronalNetwork::InitializeInternalPoissonRate(vector<vector<double> >& rates) {$/;"	f	class:NeuronalNetwork	signature:(vector<vector<double> >& rates)
InitializeNeuronalType	include/network.h	/^	void InitializeNeuronalType(double p, int seed);$/;"	p	class:NeuronalNetwork	access:public	signature:(double p, int seed)
InitializeNeuronalType	src/network.cpp	/^void NeuronalNetwork::InitializeNeuronalType(double p, int seed) {$/;"	f	class:NeuronalNetwork	signature:(double p, int seed)
InputExternalPoisson	include/neuron.h	/^	void InputExternalPoisson(bool function, double tmax, vector<double> & x);$/;"	p	class:Neuron	access:private	signature:(bool function, double tmax, vector<double> & x)
InputExternalPoisson	src/neuron.cpp	/^void Neuron::InputExternalPoisson(bool function, double tmax, vector<double>& x) {$/;"	f	class:Neuron	signature:(bool function, double tmax, vector<double>& x)
IsCommentChar	src/get-config.cpp	/^bool IsCommentChar(char c) {$/;"	f	signature:(char c)
IsConnect	include/connectivity_matrix.h	/^	bool IsConnect();$/;"	p	class:ConnectivityMatrix	access:public	signature:()
IsConnect	src/connectivity_matrix.cpp	/^bool ConnectivityMatrix::IsConnect(){$/;"	f	class:ConnectivityMatrix	signature:()
IsSpace	src/get-config.cpp	/^bool IsSpace(char c) {$/;"	f	signature:(char c)
J	figures/i0005/partial/fig.png	/^à ≤Ø≤å„¬68 â¡¸9¢≈8:º®É(∏@Pﬁ¡ò7IYî FAHHÇaYD f©ﬂºÙ$ö–I˙°©ÔÁú>á™ÆÓ˚ÓNU®+Uıîe€∂-/;"	v
J	reports/Jul20/report0731_KC.pdf	/^Û√!999Ï9ÒC%iD*±H#äÑÖïåK∞sÁŒªÔæ…Ÿ≥gAúÏ›ªW|<^√Ü/;"	v
J	reports/Mar07/Reports.pptx	/^t`£ÖN¬ï1Í!:]A≈u$€ìÀ∫‚∆6Î%Q<˝Õó@ÿtzER)31Mép1ˇ9_ó&¯ºµá;%ña±◊LïÑE’ƒ7«…`T˘`ƒv“Ù«‘PÍGA\\©≤Hπ±˝d#≤GkôÏ◊Ÿ»vå^Jø±éÃ–Ùü`˜√ûÄ∫» ∏Âµ˘Œ+;ä(eà™A€∏vlÙt¶TôÁE$/;"	v
JDV	reports/Jul20/ll1.png	/^Ä∂’¿Qw"í4Œq'"+wí¨Œˆq∑∫.&/;"	v
JointPDF	include/mi_adaptive.h	/^void JointPDF(vector<bool>& binary_spikes, vector<double>& lfp, vector<double>& lfp_edges, vector<vector<double> >& jointpdf);$/;"	p	signature:(vector<bool>& binary_spikes, vector<double>& lfp, vector<double>& lfp_edges, vector<vector<double> >& jointpdf)
JointPDF	include/mi_adaptive.h	/^void JointPDF(vector<double>& x, vector<double>& y, vector<double>& x_edges, vector<double>& y_edges, vector<vector<double> >& jointpdf);$/;"	p	signature:(vector<double>& x, vector<double>& y, vector<double>& x_edges, vector<double>& y_edges, vector<vector<double> >& jointpdf)
JointPDF	include/mi_uniform.h	/^void JointPDF(vector<bool>& binary_spikes, vector<double>& lfp, vector<vector<double> >& jointpdf, double binsize);$/;"	p	signature:(vector<bool>& binary_spikes, vector<double>& lfp, vector<vector<double> >& jointpdf, double binsize)
JointPDF	include/mi_uniform.h	/^void JointPDF(vector<bool>& x, vector<bool>& y, vector<vector<double> >& jointpdf);$/;"	p	signature:(vector<bool>& x, vector<bool>& y, vector<vector<double> >& jointpdf)
JointPDF	include/mi_uniform.h	/^void JointPDF(vector<double>& x, vector<double>& y, vector<vector<double> >& jointpdf, double x_binsize, double y_binsize);$/;"	p	signature:(vector<double>& x, vector<double>& y, vector<vector<double> >& jointpdf, double x_binsize, double y_binsize)
JointPDF	src/mi_adaptive.cpp	/^void JointPDF(vector<bool>& binary_spikes, vector<double>& lfp, vector<double>& lfp_edges, vector<vector<double> >& jointpdf) {$/;"	f	signature:(vector<bool>& binary_spikes, vector<double>& lfp, vector<double>& lfp_edges, vector<vector<double> >& jointpdf)
JointPDF	src/mi_adaptive.cpp	/^void JointPDF(vector<double>& x, vector<double>& y, vector<double>& x_edges, vector<double>& y_edges, vector<vector<double> >& jointpdf) {$/;"	f	signature:(vector<double>& x, vector<double>& y, vector<double>& x_edges, vector<double>& y_edges, vector<vector<double> >& jointpdf)
JointPDF	src/mi_uniform.cpp	/^void JointPDF(vector<bool>& binary_spikes, vector<double>& lfp, vector<vector<double> >& jointpdf, double binsize) {$/;"	f	signature:(vector<bool>& binary_spikes, vector<double>& lfp, vector<vector<double> >& jointpdf, double binsize)
JointPDF	src/mi_uniform.cpp	/^void JointPDF(vector<bool>& x, vector<bool>& y, vector<vector<double> >& jointpdf) {$/;"	f	signature:(vector<bool>& x, vector<bool>& y, vector<vector<double> >& jointpdf)
JointPDF	src/mi_uniform.cpp	/^void JointPDF(vector<double>& x, vector<double>& y, vector<vector<double> >& jointpdf, double x_binsize, double y_binsize) {$/;"	f	signature:(vector<double>& x, vector<double>& y, vector<vector<double> >& jointpdf, double x_binsize, double y_binsize)
JointPDF2bins	include/mi_uniform.h	/^void JointPDF2bins(vector<bool>& binary_spikes, vector<double>& lfp, vector<vector<double> >& jointpdf, double threshold);$/;"	p	signature:(vector<bool>& binary_spikes, vector<double>& lfp, vector<vector<double> >& jointpdf, double threshold)
JointPDF2bins	src/mi_uniform.cpp	/^void JointPDF2bins(vector<bool>& binary_spikes, vector<double>& lfp, vector<vector<double> >& jointpdf, double threshold) {$/;"	f	signature:(vector<bool>& binary_spikes, vector<double>& lfp, vector<vector<double> >& jointpdf, double threshold)
K	figures/dt/full/mi_05.png	/^–®Q£<\\%/;"	v
K	figures/robust/full/mi_0005.png	/^–®Q£<\\%/;"	v
K	reports/Jul20/rl3.png	/^0).Æaë¬a)À˙%K¨©™ùÍ†ª>YI*#ØóNôXª˚j”Ó¯XxƒπsRô¢≠™¢´®Jez9ú»œ>≥?\\ﬂ&kŸ÷CZ&ÿ0<÷=÷≤ó>nqÆ2€}ç3ê¨Îƒ ©ÒÎ∫¿∏N7_ö5±Kø=V·∏n—Îo>;s<◊g"œ	=r‚€Û+v‚Ù}ÛﬁﬂŸÊúµ]ñÂÓU©L˘êƒ@$9Ufßπà‰ÌMÃÂ†∫åøÕÚJe:Ú∂–ü´w¿KÜ,Ê*ìäa‹IF"ÿ`Jo 4ÉÄ∞!Fìûu•Üqóéoﬁ≥Ò˚õ?ú{AW.∏ ∏¬Û0Ópë∑›ƒïS9j“V|&apÁ˝O°6ﬂ®4çª?KÏøõÖÔæ<∆=~F(	Y•cÂ≥˛3•´¨K˚5†gåƒˆÕÆï4£@á⁄[I¿™Å{\/Gg¡4à™LÄDŒ˜ø,ﬂzHªΩîØY”°T‹ûÇÏæPlΩJÅüÛ8∆ù™Âuµ=?ªÓtÙ´—OW‚‹âC/;"	v
KE	mi_10_2bins.png	/^/;"	v
KeySelect	include/lfp.h	/^int KeySelect(string & key, vector<neuron_type> & type, vector<int> & indices);$/;"	p	signature:(string & key, vector<neuron_type> & type, vector<int> & indices)
KeySelect	src/lfp.cpp	/^int KeySelect(string & key, vector<neuron_type> & types, vector<int> & indices) {$/;"	f	signature:(string & key, vector<neuron_type> & types, vector<int> & indices)
Koch	doc/thesis-proposal.md	/^11. Buzs√°ki, G., Anastassiou, C. A., & Koch, C. (2012). The origin of extracellular fields and currents‚ÄîEEG, ECoG, LFP and spikes. Nature reviews neuroscience, 13(6), 407-420.$/;"	v
Koch	tags	/^Koch	doc\/thesis-proposal.md	\/^11. Buzs√°ki, G., Anastassiou, C. A., & Koch, C. (2012). The origin of extracellular fields and currents‚ÄîEEG, ECoG, LFP and spikes. Nature reviews neuroscience, 13(6), 407-420.$\/;"	v$/;"	v
L	figures/gauss/150.png	/^/;"	v
L	figures/mi_fig_spikeToLFP/10min/full/100.png	/^ /;"	v
L	figures/one-way/direct/indirected/sta_si_00.png	/^2/;"	v
L	figures/one-way/partial/mi_partial_10_16m_currentshift.png	/^/;"	v
L	figures/robust/direct/mi_0075.png	/^Ze7–F)mïV°6‚É,JQZTp©¢Ï*∆Öá/;"	v
L	mi_01_10e-6.png	/^/;"	v
LFP	doc/research-log.md	/^6. For inbibitory neuron, in loop 1, TDMI cannot indicate the relationship between spikes and LFP;$/;"	v
LFP	include/lfp.h	/^void LFP(string current_path, vector<double>& lfp, vector<int>& neuron_list, double* t_range);$/;"	p	signature:(string current_path, vector<double>& lfp, vector<int>& neuron_list, double* t_range)
LFP	reports/Apr25/report.tex	/^		Choose \\#0 neuron in loop-1 as the target neurons for spike train. It randomly connects with 9 neurons in loop-2. Now, we regard the membrane current of each neuron as LFP, and apply TDMI analysis among them. Results are shown below.$/;"	v
LFP	reports/May05/report.tex	/^    \\item Seperate the excitatory current term and inhibitory term in LFP, and analysis the causality of interactions between different types of neurons across networks.$/;"	v
LFP	src/lfp.cpp	/^void LFP(string current_path, vector<double>& lfp, vector<int>& neuron_list, double* t_range) {$/;"	f	signature:(string current_path, vector<double>& lfp, vector<int>& neuron_list, double* t_range)
LFP	tags	/^loop	doc\/research-log.md	\/^6. For inbibitory neuron, in loop 1, TDMI cannot indicate the relationship between spikes and LFP;$\/;"	v$/;"	v
LoadConnectivityMat	include/network.h	/^	void LoadConnectivityMat(string conMatFile);$/;"	p	class:NeuronalNetwork	access:public	signature:(string conMatFile)
LoadConnectivityMat	src/network.cpp	/^void NeuronalNetwork::LoadConnectivityMat(string connecting_matrix_file) {$/;"	f	class:NeuronalNetwork	signature:(string connecting_matrix_file)
LoadMatrix	include/connectivity_matrix.h	/^	void LoadMatrix(vector<vector<int> > &matrix);$/;"	p	class:ConnectivityMatrix	access:public	signature:(vector<vector<int> > &matrix)
LoadMatrix	src/connectivity_matrix.cpp	/^void ConnectivityMatrix::LoadMatrix(vector<vector<int> >& matrix) {$/;"	f	class:ConnectivityMatrix	signature:(vector<vector<int> >& matrix)
LoadNeuronalState	include/network.h	/^	void LoadNeuronalState(string neuronFile);$/;"	p	class:NeuronalNetwork	access:public	signature:(string neuronFile)
LoadNeuronalState	include/neuron.h	/^	void LoadNeuronalState(NeuronalState & data);$/;"	p	class:Neuron	access:public	signature:(NeuronalState & data)
LoadNeuronalState	src/network.cpp	/^void NeuronalNetwork::LoadNeuronalState(string neuron_file) {$/;"	f	class:NeuronalNetwork	signature:(string neuron_file)
LoadNeuronalState	src/neuron.cpp	/^void Neuron::LoadNeuronalState(NeuronalState & data) {$/;"	f	class:Neuron	signature:(NeuronalState & data)
M	figures/one-way/direct/indirected/mi_direct_10.png	/^QßÕù™'˝ÂêÀd‰lî⁄—H"ìêÕ\\™∂¥5_◊úzÌËE?¯ô˛9ıM?=ù$2	πûw’Ëúø¸ï,]-),*LK?Öj¬£√…a•YπYQ@X@∂ù˜f¯M*<∑05\\›êN>9©Û“<ﬂ{æ*M⁄u>ÎL∆3çÈV¯-çŒ˚√Ó®®{—4ﬂ⁄≤‚ﬂ$ëI“,¯∏ı÷VÇt˙ø”:9Ø2nø∫ME‹ãê˝J˚t˛dy25[◊å .(KÔ„ﬁ´uéÕ77ì‘YJ˘fÂ£Jã+i4y◊–•¨m≥„ŒçèïR∂ßnibvKLN§yóÁë•´%q\/B˝}˙ìë≥U^\\ôˆÌœ#9„éå£"ÓE(.)Î.2SNN°Çs$/;"	v
M	figures/one-way/direct/mi_direct_10.png	/^eg√±c*/;"	v
M	figures/triple/mi_21.png	/^ÿùgûyFªwÔ÷∆çıœ˛”£s~¯a˜^6õM7n‘Ü/;"	v
M	mi_01_10e-7.png	/^¢{ÓπG_~˘•Fé©∏∏8≈ƒƒh‡¡˙◊ø˛%I:r‰àÓªÔ>%&&*22Riii ÀÀ´µØÍs@∂lŸb¡Wá/;"	v
M7q	figures/gauss/200.png	/^   êüüèööÏ€∑œ°\/æ∏∏„«è«u◊]áEã°ººøˇ˝Ôq”M7q…∑ ∏ÛŒ;ÒÓªÔb¡ÇìŒ 113gŒ¥}Ãk“ä1ﬂ|Û/;"	v
MI	include/mi_adaptive.h	/^double MI(vector<bool>& bool_series, vector<double>& double_series, int num_bin);$/;"	p	signature:(vector<bool>& bool_series, vector<double>& double_series, int num_bin)
MI	include/mi_adaptive.h	/^double MI(vector<double>& x, vector<double>& y);$/;"	p	signature:(vector<double>& x, vector<double>& y)
MI	include/mi_uniform.h	/^double MI(vector<vector<double> >& jointpdf);$/;"	p	signature:(vector<vector<double> >& jointpdf)
MI	src/mi_adaptive.cpp	/^double MI(vector<bool>& bool_series, vector<double>& double_series, int bin_num) {$/;"	f	signature:(vector<bool>& bool_series, vector<double>& double_series, int bin_num)
MI	src/mi_adaptive.cpp	/^double MI(vector<double>& x, vector<double>& y) {$/;"	f	signature:(vector<double>& x, vector<double>& y)
MI	src/mi_uniform.cpp	/^double MI(vector<vector<double> >& jointpdf) {$/;"	f	signature:(vector<vector<double> >& jointpdf)
MIBB	include/mi_uniform.h	/^double MIBB(vector<bool>& x, vector<bool>& y);$/;"	p	signature:(vector<bool>& x, vector<bool>& y)
MIBB	src/mi_uniform.cpp	/^double MIBB(vector<bool>& x, vector<bool>& y) {$/;"	f	signature:(vector<bool>& x, vector<bool>& y)
MIBD	include/mi_uniform.h	/^double MIBD(vector<bool>& bool_series, vector<double>& double_series, double binsize, bool pdf_output_flag);$/;"	p	signature:(vector<bool>& bool_series, vector<double>& double_series, double binsize, bool pdf_output_flag)
MIBD	src/mi_uniform.cpp	/^double MIBD(vector<bool>& bool_series, vector<double>& double_series, double binsize, bool pdf_output_flag) {$/;"	f	signature:(vector<bool>& bool_series, vector<double>& double_series, double binsize, bool pdf_output_flag)
MIBD2bins	include/mi_uniform.h	/^double MIBD2bins(vector<bool>& bool_series, vector<double>& double_series, double threshold);$/;"	p	signature:(vector<bool>& bool_series, vector<double>& double_series, double threshold)
MIBD2bins	src/mi_uniform.cpp	/^double MIBD2bins(vector<bool>& bool_series, vector<double>& double_series, double threshold) {$/;"	f	signature:(vector<bool>& bool_series, vector<double>& double_series, double threshold)
MIDD	include/mi_uniform.h	/^double MIDD(vector<double>& x, vector<double>& y, double x_binsize, double y_binsize, bool pdf_output_flag);$/;"	p	signature:(vector<double>& x, vector<double>& y, double x_binsize, double y_binsize, bool pdf_output_flag)
MIDD	src/mi_uniform.cpp	/^double MIDD(vector<double>& x, vector<double>& y, double x_binsize, double y_binsize, bool pdf_output_flag) {$/;"	f	signature:(vector<double>& x, vector<double>& y, double x_binsize, double y_binsize, bool pdf_output_flag)
MarginalPDF	include/mi_uniform.h	/^void MarginalPDF(vector<vector<double> >& jointpdf, vector<double>& p1, vector<double>& p2);$/;"	p	signature:(vector<vector<double> >& jointpdf, vector<double>& p1, vector<double>& p2)
MarginalPDF	src/mi_uniform.cpp	/^void MarginalPDF(vector<vector<double> >& jointpdf, vector<double>& p1, vector<double>& p2) {$/;"	f	signature:(vector<vector<double> >& jointpdf, vector<double>& p1, vector<double>& p2)
Mato	doc/thesis-proposal.md	/^4. Hansel, D., Mato, G., Meunier, C., & Neltner, L. (1998). On numerical simulations of integrate-and-fire neural networks. Neural Computation, 10(2), 467-483.$/;"	v
Mato	tags	/^Mato	doc\/thesis-proposal.md	\/^4. Hansel, D., Mato, G., Meunier, C., & Neltner, L. (1998). On numerical simulations of integrate-and-fire neural networks. Neural Computation, 10(2), 467-483.$\/;"	v$/;"	v
Mato	tags	/^Neltner	doc\/thesis-proposal.md	\/^4. Hansel, D., Mato, G., Meunier, C., & Neltner, L. (1998). On numerical simulations of integrate-and-fire neural networks. Neural Computation, 10(2), 467-483.$\/;"	v$/;"	v
Max	src/hist.cpp	/^double Max(vector<double>& data) {$/;"	f	signature:(vector<double>& data)
Max	src/mi_uniform.cpp	/^double Max(vector<double>& data) {$/;"	f	signature:(vector<double>& data)
Max	test/entropy_binary.cpp	/^int Max(vector<int>& data) {$/;"	f	signature:(vector<int>& data)
Mean	include/stationary.h	/^template <class T> double Mean(vector<T>& x){$/;"	f	signature:(vector<T>& x)
Means	include/stationary.h	/^void Means(vector<vector<double> > & data, vector<double>& means);$/;"	p	signature:(vector<vector<double> > & data, vector<double>& means)
Means	src/stationary.cpp	/^void Means(vector<vector<double> > & data, vector<double>& means) {$/;"	f	signature:(vector<vector<double> > & data, vector<double>& means)
Meunier	doc/thesis-proposal.md	/^4. Hansel, D., Mato, G., Meunier, C., & Neltner, L. (1998). On numerical simulations of integrate-and-fire neural networks. Neural Computation, 10(2), 467-483.$/;"	v
Meunier	tags	/^Mato	doc\/thesis-proposal.md	\/^4. Hansel, D., Mato, G., Meunier, C., & Neltner, L. (1998). On numerical simulations of integrate-and-fire neural networks. Neural Computation, 10(2), 467-483.$\/;"	v$/;"	v
Meunier	tags	/^Neltner	doc\/thesis-proposal.md	\/^4. Hansel, D., Mato, G., Meunier, C., & Neltner, L. (1998). On numerical simulations of integrate-and-fire neural networks. Neural Computation, 10(2), 467-483.$\/;"	v$/;"	v
Min	src/hist.cpp	/^double Min(vector<double>& data) {$/;"	f	signature:(vector<double>& data)
Min	src/mi_uniform.cpp	/^double Min(vector<double>& data) {$/;"	f	signature:(vector<double>& data)
N	figures/intensity_potential.png	/^¯„è´‚g˚˜Ô«¸˘Ûı)/;"	v
N	figures/nn0145/n2i_0145.png	/^@JI„∆çÒ◊_A•R©Õr˘Úe8;;£vÌ⁄Z˚`æ–uÎ÷5˙\\99@˚ˆÃ˚Í’Å›ªK‘Ùro⁄¥iX∂lôµõQn—ı-}tçK]ﬂ“G◊∏t—ı-]1119r$wﬂFLGà§§§ ##oΩı§RÊí4ªwÔ∆ﬁΩ{1p‡@/;"	v
N	figures/one-way/direct/significance/Figure_1.png	/^/;"	v
N9	figures/mi_fig_spikeToLFP/10min/partial/20.png	/^/;"	v
NC	figures/mi_fig_spikeToLFP/10min/full/10.png	/^|W/;"	v
ND	reports/Jul20/sp1.png	/^|wºHÏ(Dí≈¬ùàÃBiu=¯Ë0>9òè#zcÁ∑!¿√AÏXD&’‹*”÷vêØ€ÒÙùËÈÑUˇÕÑ^ }?D"b·ND¢;zÓ2ÓyÁ+∏åW¢BÒÊÏ·∞∑Qàã»‰3Ómˆ∏KªÿuµW·°[˚‡bµiÖb«!í$Ó$]“~£´æ¸≠/;"	v
NE	mi_10_2bins.png	/^≈««ó/;"	v
Neltner	doc/thesis-proposal.md	/^4. Hansel, D., Mato, G., Meunier, C., & Neltner, L. (1998). On numerical simulations of integrate-and-fire neural networks. Neural Computation, 10(2), 467-483.$/;"	v
Neltner	tags	/^Mato	doc\/thesis-proposal.md	\/^4. Hansel, D., Mato, G., Meunier, C., & Neltner, L. (1998). On numerical simulations of integrate-and-fire neural networks. Neural Computation, 10(2), 467-483.$\/;"	v$/;"	v
Neltner	tags	/^Neltner	doc\/thesis-proposal.md	\/^4. Hansel, D., Mato, G., Meunier, C., & Neltner, L. (1998). On numerical simulations of integrate-and-fire neural networks. Neural Computation, 10(2), 467-483.$\/;"	v$/;"	v
Neuron	include/neuron.h	/^	Neuron() {$/;"	f	class:Neuron	access:public	signature:()
Neuron	include/neuron.h	/^class Neuron {$/;"	c
Neuron::Alpha	include/neuron.h	/^	double Alpha(int option);$/;"	p	class:Neuron	access:private	signature:(int option)
Neuron::Alpha	src/neuron.cpp	/^double Neuron::Alpha(int option) {$/;"	f	class:Neuron	signature:(int option)
Neuron::Beta	include/neuron.h	/^	double Beta(int option);$/;"	p	class:Neuron	access:private	signature:(int option)
Neuron::Beta	src/neuron.cpp	/^double Neuron::Beta(int option) {$/;"	f	class:Neuron	signature:(int option)
Neuron::CheckFire	include/neuron.h	/^	void CheckFire(double voltage, double t, double dt);$/;"	p	class:Neuron	access:private	signature:(double voltage, double t, double dt)
Neuron::CheckFire	src/neuron.cpp	/^void Neuron::CheckFire(double voltage, double t, double dt) {$/;"	f	class:Neuron	signature:(double voltage, double t, double dt)
Neuron::Fire	include/neuron.h	/^	void Fire(double t, double dt);$/;"	p	class:Neuron	access:public	signature:(double t, double dt)
Neuron::Fire	src/neuron.cpp	/^void Neuron::Fire(double t, double dt) {$/;"	f	class:Neuron	signature:(double t, double dt)
Neuron::GenerateInternalPoisson	include/neuron.h	/^	void GenerateInternalPoisson(bool function, double tmax, bool outSet);$/;"	p	class:Neuron	access:private	signature:(bool function, double tmax, bool outSet)
Neuron::GenerateInternalPoisson	src/neuron.cpp	/^void Neuron::GenerateInternalPoisson(bool function, double tmax, bool outSet) {$/;"	f	class:Neuron	signature:(bool function, double tmax, bool outSet)
Neuron::GetConductance	include/neuron.h	/^	double GetConductance(bool x);$/;"	p	class:Neuron	access:public	signature:(bool x)
Neuron::GetConductance	src/neuron.cpp	/^double Neuron::GetConductance(bool x) {$/;"	f	class:Neuron	signature:(bool x)
Neuron::GetLastSpike	include/neuron.h	/^	double GetLastSpike();$/;"	p	class:Neuron	access:public	signature:()
Neuron::GetLastSpike	src/neuron.cpp	/^double Neuron::GetLastSpike() {$/;"	f	class:Neuron	signature:()
Neuron::GetNeuronIndex	include/neuron.h	/^	int GetNeuronIndex();$/;"	p	class:Neuron	access:public	signature:()
Neuron::GetNeuronIndex	src/neuron.cpp	/^int Neuron::GetNeuronIndex() {$/;"	f	class:Neuron	signature:()
Neuron::GetNeuronalType	include/neuron.h	/^	bool GetNeuronalType();$/;"	p	class:Neuron	access:public	signature:()
Neuron::GetNeuronalType	src/neuron.cpp	/^bool Neuron::GetNeuronalType() {$/;"	f	class:Neuron	signature:()
Neuron::GetNewSpikes	include/neuron.h	/^	void GetNewSpikes(double t, vector<Spike> &x);$/;"	p	class:Neuron	access:public	signature:(double t, vector<Spike> &x)
Neuron::GetNewSpikes	src/neuron.cpp	/^void Neuron::GetNewSpikes(double t, vector<Spike>& x) {$/;"	f	class:Neuron	signature:(double t, vector<Spike>& x)
Neuron::GetPotential	include/neuron.h	/^	double GetPotential();$/;"	p	class:Neuron	access:public	signature:()
Neuron::GetPotential	src/neuron.cpp	/^double Neuron::GetPotential() {$/;"	f	class:Neuron	signature:()
Neuron::InSpike	include/neuron.h	/^	void InSpike(Spike x);$/;"	p	class:Neuron	access:public	signature:(Spike x)
Neuron::InSpike	src/neuron.cpp	/^void Neuron::InSpike(Spike x) {$/;"	f	class:Neuron	signature:(Spike x)
Neuron::InputExternalPoisson	include/neuron.h	/^	void InputExternalPoisson(bool function, double tmax, vector<double> & x);$/;"	p	class:Neuron	access:private	signature:(bool function, double tmax, vector<double> & x)
Neuron::InputExternalPoisson	src/neuron.cpp	/^void Neuron::InputExternalPoisson(bool function, double tmax, vector<double>& x) {$/;"	f	class:Neuron	signature:(bool function, double tmax, vector<double>& x)
Neuron::LoadNeuronalState	include/neuron.h	/^	void LoadNeuronalState(NeuronalState & data);$/;"	p	class:Neuron	access:public	signature:(NeuronalState & data)
Neuron::LoadNeuronalState	src/neuron.cpp	/^void Neuron::LoadNeuronalState(NeuronalState & data) {$/;"	f	class:Neuron	signature:(NeuronalState & data)
Neuron::Neuron	include/neuron.h	/^	Neuron() {$/;"	f	class:Neuron	access:public	signature:()
Neuron::OffRefractoryPeriod	include/neuron.h	/^	double OffRefractoryPeriod(double dt);$/;"	p	class:Neuron	access:private	signature:(double dt)
Neuron::OffRefractoryPeriod	src/neuron.cpp	/^double Neuron::OffRefractoryPeriod(double dt) {$/;"	f	class:Neuron	signature:(double dt)
Neuron::OutLeakyCurrent	include/neuron.h	/^	double OutLeakyCurrent();$/;"	p	class:Neuron	access:public	signature:()
Neuron::OutLeakyCurrent	src/neuron.cpp	/^double Neuron::OutLeakyCurrent() {$/;"	f	class:Neuron	signature:()
Neuron::OutSpikeTrain	include/neuron.h	/^	void OutSpikeTrain(vector<double> & spikes);$/;"	p	class:Neuron	access:public	signature:(vector<double> & spikes)
Neuron::OutSpikeTrain	src/neuron.cpp	/^void Neuron::OutSpikeTrain(vector<double> & spikes) {$/;"	f	class:Neuron	signature:(vector<double> & spikes)
Neuron::OutSynapticCurrent	include/neuron.h	/^	double OutSynapticCurrent(bool type);$/;"	p	class:Neuron	access:public	signature:(bool type)
Neuron::OutSynapticCurrent	src/neuron.cpp	/^double Neuron::OutSynapticCurrent(bool type) {$/;"	f	class:Neuron	signature:(bool type)
Neuron::OutTotalCurrent	include/neuron.h	/^	double OutTotalCurrent();$/;"	p	class:Neuron	access:public	signature:()
Neuron::OutTotalCurrent	src/neuron.cpp	/^double Neuron::OutTotalCurrent() {$/;"	f	class:Neuron	signature:()
Neuron::PrimelyUpdateState	include/neuron.h	/^	double PrimelyUpdateState(bool is_fire, bool mode, bool function, double t, double dt, bool temp_switch);$/;"	p	class:Neuron	access:private	signature:(bool is_fire, bool mode, bool function, double t, double dt, bool temp_switch)
Neuron::PrimelyUpdateState	src/neuron.cpp	/^double Neuron::PrimelyUpdateState(bool is_fire, bool mode, bool function, double t, double dt, bool temp_switch) {$/;"	f	class:Neuron	signature:(bool is_fire, bool mode, bool function, double t, double dt, bool temp_switch)
Neuron::Reset	include/neuron.h	/^	void Reset();$/;"	p	class:Neuron	access:public	signature:()
Neuron::Reset	src/neuron.cpp	/^void Neuron::Reset() {$/;"	f	class:Neuron	signature:()
Neuron::Save	include/neuron.h	/^	void Save(NeuronalState & vals);$/;"	p	class:Neuron	access:public	signature:(NeuronalState & vals)
Neuron::Save	src/neuron.cpp	/^void Neuron::Save(NeuronalState & vals) {$/;"	f	class:Neuron	signature:(NeuronalState & vals)
Neuron::SetDrivingType	include/neuron.h	/^	void SetDrivingType(bool x);$/;"	p	class:Neuron	access:public	signature:(bool x)
Neuron::SetDrivingType	src/neuron.cpp	/^void Neuron::SetDrivingType(bool x) {$/;"	f	class:Neuron	signature:(bool x)
Neuron::SetFeedforwardStrength	include/neuron.h	/^	void SetFeedforwardStrength(bool function, double F);$/;"	p	class:Neuron	access:public	signature:(bool function, double F)
Neuron::SetFeedforwardStrength	src/neuron.cpp	/^void Neuron::SetFeedforwardStrength(bool function, double F) {$/;"	f	class:Neuron	signature:(bool function, double F)
Neuron::SetNeuronIndex	include/neuron.h	/^	void SetNeuronIndex(int x);$/;"	p	class:Neuron	access:public	signature:(int x)
Neuron::SetNeuronIndex	src/neuron.cpp	/^void Neuron::SetNeuronIndex(int x) {$/;"	f	class:Neuron	signature:(int x)
Neuron::SetNeuronType	include/neuron.h	/^	void SetNeuronType(bool x);$/;"	p	class:Neuron	access:public	signature:(bool x)
Neuron::SetNeuronType	src/neuron.cpp	/^void Neuron::SetNeuronType(bool x) {$/;"	f	class:Neuron	signature:(bool x)
Neuron::SetPoissonRate	include/neuron.h	/^	void SetPoissonRate(bool function, double rate);$/;"	p	class:Neuron	access:public	signature:(bool function, double rate)
Neuron::SetPoissonRate	src/neuron.cpp	/^void Neuron::SetPoissonRate(bool function, double rate) {$/;"	f	class:Neuron	signature:(bool function, double rate)
Neuron::SetSynapticStrength	include/neuron.h	/^	void SetSynapticStrength(bool function, double S);$/;"	p	class:Neuron	access:public	signature:(bool function, double S)
Neuron::SetSynapticStrength	src/neuron.cpp	/^void Neuron::SetSynapticStrength(bool function, double S) {$/;"	f	class:Neuron	signature:(bool function, double S)
Neuron::TempCheckFire	include/neuron.h	/^	double TempCheckFire(double voltage, double t, double dt);$/;"	p	class:Neuron	access:private	signature:(double voltage, double t, double dt)
Neuron::TempCheckFire	src/neuron.cpp	/^double Neuron::TempCheckFire(double voltage, double t, double dt) {$/;"	f	class:Neuron	signature:(double voltage, double t, double dt)
Neuron::TemporallyUpdateNeuronalState	include/neuron.h	/^	double TemporallyUpdateNeuronalState(double t, double dt, vector<double> & inPE, vector<double> & inPI);$/;"	p	class:Neuron	access:public	signature:(double t, double dt, vector<double> & inPE, vector<double> & inPI)
Neuron::TemporallyUpdateNeuronalState	src/neuron.cpp	/^double Neuron::TemporallyUpdateNeuronalState(double t, double dt, vector<double> & inPE, vector<double> & inPI) {$/;"	f	class:Neuron	signature:(double t, double dt, vector<double> & inPE, vector<double> & inPI)
Neuron::UpdateConductanceOfFiredNeuron	include/neuron.h	/^	void UpdateConductanceOfFiredNeuron(bool is_fire, bool fireMode, bool fireType, double t, double dt);$/;"	p	class:Neuron	access:private	signature:(bool is_fire, bool fireMode, bool fireType, double t, double dt)
Neuron::UpdateConductanceOfFiredNeuron	src/neuron.cpp	/^void Neuron::UpdateConductanceOfFiredNeuron(bool is_fire, bool mode, bool function, double t, double dt) {$/;"	f	class:Neuron	signature:(bool is_fire, bool mode, bool function, double t, double dt)
Neuron::UpdateExcitatoryConductance	include/neuron.h	/^	void UpdateExcitatoryConductance(bool mode, bool function, double t, double dt);$/;"	p	class:Neuron	access:private	signature:(bool mode, bool function, double t, double dt)
Neuron::UpdateExcitatoryConductance	src/neuron.cpp	/^void Neuron::UpdateExcitatoryConductance(bool mode, bool function, double t, double dt) {$/;"	f	class:Neuron	signature:(bool mode, bool function, double t, double dt)
Neuron::UpdateInhibitoryConductance	include/neuron.h	/^	void UpdateInhibitoryConductance(bool mode, bool function, double t, double dt);$/;"	p	class:Neuron	access:private	signature:(bool mode, bool function, double t, double dt)
Neuron::UpdateInhibitoryConductance	src/neuron.cpp	/^void Neuron::UpdateInhibitoryConductance(bool mode, bool function, double t, double dt) {$/;"	f	class:Neuron	signature:(bool mode, bool function, double t, double dt)
Neuron::UpdateNeuronalState	include/neuron.h	/^	double UpdateNeuronalState(double t, double dt);$/;"	p	class:Neuron	access:public	signature:(double t, double dt)
Neuron::UpdateNeuronalState	include/neuron.h	/^	double UpdateNeuronalState(double t, double dt, vector<double> & inPE, vector<double> & inPI);$/;"	p	class:Neuron	access:public	signature:(double t, double dt, vector<double> & inPE, vector<double> & inPI)
Neuron::UpdateNeuronalState	src/neuron.cpp	/^double Neuron::UpdateNeuronalState(double t, double dt) {$/;"	f	class:Neuron	signature:(double t, double dt)
Neuron::UpdateNeuronalState	src/neuron.cpp	/^double Neuron::UpdateNeuronalState(double t, double dt, vector<double> & inPE, vector<double> & inPI) {$/;"	f	class:Neuron	signature:(double t, double dt, vector<double> & inPE, vector<double> & inPI)
Neuron::UpdatePotential	include/neuron.h	/^	double UpdatePotential(double dt);$/;"	p	class:Neuron	access:private	signature:(double dt)
Neuron::UpdatePotential	src/neuron.cpp	/^double Neuron::UpdatePotential(double dt) {$/;"	f	class:Neuron	signature:(double dt)
Neuron::driven_type_	include/neuron.h	/^	bool driven_type_; \/\/ True for external Poisson driven, false for internal Poisson driven;$/;"	m	class:Neuron	access:private
Neuron::excitatory_conductance_	include/neuron.h	/^	double excitatory_conductance_; \/\/ Stored excitatory conductivity;$/;"	m	class:Neuron	access:private
Neuron::excitatory_conductance_1_	include/neuron.h	/^	double excitatory_conductance_1_; \/\/ temporal storage of excitatory conductance;$/;"	m	class:Neuron	access:private
Neuron::excitatory_conductance_2_	include/neuron.h	/^	double excitatory_conductance_2_;$/;"	m	class:Neuron	access:private
Neuron::excitatory_conductance_3_	include/neuron.h	/^	double excitatory_conductance_3_;$/;"	m	class:Neuron	access:private
Neuron::excitatory_poisson_rate_	include/neuron.h	/^	double excitatory_poisson_rate_;$/;"	m	class:Neuron	access:private
Neuron::excitatory_reversal_potential_	include/neuron.h	/^	double excitatory_reversal_potential_;$/;"	m	class:Neuron	access:private
Neuron::feedforward_excitatory_intensity_	include/neuron.h	/^	double feedforward_excitatory_intensity_;$/;"	m	class:Neuron	access:private
Neuron::feedforward_inhibitory_intensity_	include/neuron.h	/^	double feedforward_inhibitory_intensity_;$/;"	m	class:Neuron	access:private
Neuron::g_m_	include/neuron.h	/^	double g_m_; \/\/ Normalized membrane conductance;$/;"	m	class:Neuron	access:private
Neuron::index_	include/neuron.h	/^	int index_; \/\/ index of neuron in loop lattice;$/;"	m	class:Neuron	access:private
Neuron::inhibitory_conductance_	include/neuron.h	/^	double inhibitory_conductance_; \/\/ Stored inhibitory conductivity;$/;"	m	class:Neuron	access:private
Neuron::inhibitory_conductance_1_	include/neuron.h	/^	double inhibitory_conductance_1_; \/\/ temporal storage of inhibitory conductance;$/;"	m	class:Neuron	access:private
Neuron::inhibitory_conductance_2_	include/neuron.h	/^	double inhibitory_conductance_2_;$/;"	m	class:Neuron	access:private
Neuron::inhibitory_conductance_3_	include/neuron.h	/^	double inhibitory_conductance_3_;$/;"	m	class:Neuron	access:private
Neuron::inhibitory_poisson_rate_	include/neuron.h	/^	double inhibitory_poisson_rate_;$/;"	m	class:Neuron	access:private
Neuron::inhibitory_reversal_potential_	include/neuron.h	/^	double inhibitory_reversal_potential_;$/;"	m	class:Neuron	access:private
Neuron::interneuronal_synaptic_intensity_	include/neuron.h	/^	double interneuronal_synaptic_intensity_;$/;"	m	class:Neuron	access:private
Neuron::latest_excitatory_poisson_time_	include/neuron.h	/^	double latest_excitatory_poisson_time_; \/\/ Used to store the last Poisson time point generated by Poisson generator for excitatory spikes;$/;"	m	class:Neuron	access:private
Neuron::latest_inhibitory_poisson_time_	include/neuron.h	/^	double latest_inhibitory_poisson_time_; \/\/ Used to store the last Poisson time point generated by Poisson generator for inhibitory spikes;$/;"	m	class:Neuron	access:private
Neuron::membrane_potential_	include/neuron.h	/^	double membrane_potential_;$/;"	m	class:Neuron	access:private
Neuron::membrane_potential_temp_	include/neuron.h	/^	double membrane_potential_temp_;$/;"	m	class:Neuron	access:private
Neuron::pyramidal_synaptic_intensity_	include/neuron.h	/^	double pyramidal_synaptic_intensity_;$/;"	m	class:Neuron	access:private
Neuron::remaining_refractory_period_	include/neuron.h	/^	double remaining_refractory_period_; \/\/ if negative, remaining refractory period equals to zero;$/;"	m	class:Neuron	access:private
Neuron::remaining_refractory_period_temp_	include/neuron.h	/^	double remaining_refractory_period_temp_; \/\/ if negative, temporal remaining refractory period equals to zero;$/;"	m	class:Neuron	access:private
Neuron::resting_potential_	include/neuron.h	/^	double resting_potential_;$/;"	m	class:Neuron	access:private
Neuron::spike_train_	include/neuron.h	/^	vector<double> spike_train_; \/\/ Exact time nodes that neuron fires.$/;"	m	class:Neuron	access:private
Neuron::synaptic_driven_	include/neuron.h	/^	vector<Spike> synaptic_driven_;  \/\/ Synaptic input received by neuron, including feedforward and interneuronal spikes;$/;"	m	class:Neuron	access:private
Neuron::tau_	include/neuron.h	/^	double tau_; \/\/ Refractory Period.$/;"	m	class:Neuron	access:private
Neuron::tau_e_	include/neuron.h	/^	double tau_e_; \/\/ Synaptic constant for excitatory synapses;$/;"	m	class:Neuron	access:private
Neuron::tau_i_	include/neuron.h	/^	double tau_i_; \/\/ Synaptic constant for inhibitory synapses;$/;"	m	class:Neuron	access:private
Neuron::threshold_potential_	include/neuron.h	/^	double threshold_potential_;$/;"	m	class:Neuron	access:private
Neuron::type_	include/neuron.h	/^	bool type_; \/\/ neuronal type: true for excitatory, false for inhibitory;$/;"	m	class:Neuron	access:private
NeuronalNetwork	include/network.h	/^	NeuronalNetwork(int neuron_number) {$/;"	f	class:NeuronalNetwork	access:public	signature:(int neuron_number)
NeuronalNetwork	include/network.h	/^class NeuronalNetwork {$/;"	c
NeuronalNetwork::GetConductance	include/network.h	/^	void GetConductance(int i, bool function);$/;"	p	class:NeuronalNetwork	access:public	signature:(int i, bool function)
NeuronalNetwork::GetConductance	src/network.cpp	/^void NeuronalNetwork::GetConductance(int i, bool function) {$/;"	f	class:NeuronalNetwork	signature:(int i, bool function)
NeuronalNetwork::GetNeuronNumber	include/network.h	/^	int GetNeuronNumber();$/;"	p	class:NeuronalNetwork	access:public	signature:()
NeuronalNetwork::GetNeuronNumber	src/network.cpp	/^int NeuronalNetwork::GetNeuronNumber() {$/;"	f	class:NeuronalNetwork	signature:()
NeuronalNetwork::GetNeuronType	include/network.h	/^	void GetNeuronType(vector<bool> & x);$/;"	p	class:NeuronalNetwork	access:public	signature:(vector<bool> & x)
NeuronalNetwork::GetNeuronType	src/network.cpp	/^void NeuronalNetwork::GetNeuronType(vector<bool>& types) {$/;"	f	class:NeuronalNetwork	signature:(vector<bool>& types)
NeuronalNetwork::GetNewSpikes	include/network.h	/^	void GetNewSpikes(double t, vector<vector<Spike> >& data);$/;"	p	class:NeuronalNetwork	access:public	signature:(double t, vector<vector<Spike> >& data)
NeuronalNetwork::GetNewSpikes	src/network.cpp	/^void NeuronalNetwork::GetNewSpikes(double t, vector<vector<Spike> >& data) {$/;"	f	class:NeuronalNetwork	signature:(double t, vector<vector<Spike> >& data)
NeuronalNetwork::InNewSpikes	include/network.h	/^	void InNewSpikes(vector<vector<Spike> > &data);$/;"	p	class:NeuronalNetwork	access:public	signature:(vector<vector<Spike> > &data)
NeuronalNetwork::InNewSpikes	src/network.cpp	/^void NeuronalNetwork::InNewSpikes(vector<vector<Spike> > & data) {$/;"	f	class:NeuronalNetwork	signature:(vector<vector<Spike> > & data)
NeuronalNetwork::InitializeExternalPoissonProcess	include/network.h	/^	void InitializeExternalPoissonProcess(vector<vector<double> >& rates, double tmax, int seed);$/;"	p	class:NeuronalNetwork	access:public	signature:(vector<vector<double> >& rates, double tmax, int seed)
NeuronalNetwork::InitializeExternalPoissonProcess	src/network.cpp	/^void NeuronalNetwork::InitializeExternalPoissonProcess(vector<vector<double> >& rates, double tmax, int seed) {$/;"	f	class:NeuronalNetwork	signature:(vector<vector<double> >& rates, double tmax, int seed)
NeuronalNetwork::InitializeInternalPoissonRate	include/network.h	/^	void InitializeInternalPoissonRate(vector<vector<double> >& rates);$/;"	p	class:NeuronalNetwork	access:public	signature:(vector<vector<double> >& rates)
NeuronalNetwork::InitializeInternalPoissonRate	src/network.cpp	/^void NeuronalNetwork::InitializeInternalPoissonRate(vector<vector<double> >& rates) {$/;"	f	class:NeuronalNetwork	signature:(vector<vector<double> >& rates)
NeuronalNetwork::InitializeNeuronalType	include/network.h	/^	void InitializeNeuronalType(double p, int seed);$/;"	p	class:NeuronalNetwork	access:public	signature:(double p, int seed)
NeuronalNetwork::InitializeNeuronalType	src/network.cpp	/^void NeuronalNetwork::InitializeNeuronalType(double p, int seed) {$/;"	f	class:NeuronalNetwork	signature:(double p, int seed)
NeuronalNetwork::LoadConnectivityMat	include/network.h	/^	void LoadConnectivityMat(string conMatFile);$/;"	p	class:NeuronalNetwork	access:public	signature:(string conMatFile)
NeuronalNetwork::LoadConnectivityMat	src/network.cpp	/^void NeuronalNetwork::LoadConnectivityMat(string connecting_matrix_file) {$/;"	f	class:NeuronalNetwork	signature:(string connecting_matrix_file)
NeuronalNetwork::LoadNeuronalState	include/network.h	/^	void LoadNeuronalState(string neuronFile);$/;"	p	class:NeuronalNetwork	access:public	signature:(string neuronFile)
NeuronalNetwork::LoadNeuronalState	src/network.cpp	/^void NeuronalNetwork::LoadNeuronalState(string neuron_file) {$/;"	f	class:NeuronalNetwork	signature:(string neuron_file)
NeuronalNetwork::NeuronalNetwork	include/network.h	/^	NeuronalNetwork(int neuron_number) {$/;"	f	class:NeuronalNetwork	access:public	signature:(int neuron_number)
NeuronalNetwork::OutConductance	include/network.h	/^  void OutConductance(string path, bool function);$/;"	p	class:NeuronalNetwork	access:public	signature:(string path, bool function)
NeuronalNetwork::OutConductance	src/network.cpp	/^void NeuronalNetwork::OutConductance(string path, bool function) {$/;"	f	class:NeuronalNetwork	signature:(string path, bool function)
NeuronalNetwork::OutCurrent	include/network.h	/^  void OutCurrent(string path);$/;"	p	class:NeuronalNetwork	access:public	signature:(string path)
NeuronalNetwork::OutCurrent	src/network.cpp	/^void NeuronalNetwork::OutCurrent(string path) {$/;"	f	class:NeuronalNetwork	signature:(string path)
NeuronalNetwork::OutPartialCurrent	include/network.h	/^  void OutPartialCurrent(string path, bool type);$/;"	p	class:NeuronalNetwork	access:public	signature:(string path, bool type)
NeuronalNetwork::OutPartialCurrent	src/network.cpp	/^void NeuronalNetwork::OutPartialCurrent(string path, bool type) {$/;"	f	class:NeuronalNetwork	signature:(string path, bool type)
NeuronalNetwork::OutPotential	include/network.h	/^	void OutPotential(string path);$/;"	p	class:NeuronalNetwork	access:public	signature:(string path)
NeuronalNetwork::OutPotential	src/network.cpp	/^void NeuronalNetwork::OutPotential(string path) {$/;"	f	class:NeuronalNetwork	signature:(string path)
NeuronalNetwork::OutSpikeTrains	include/network.h	/^	void OutSpikeTrains(string path);$/;"	p	class:NeuronalNetwork	access:public	signature:(string path)
NeuronalNetwork::OutSpikeTrains	src/network.cpp	/^void NeuronalNetwork::OutSpikeTrains(string path) {$/;"	f	class:NeuronalNetwork	signature:(string path)
NeuronalNetwork::RestoreNeurons	include/network.h	/^	void RestoreNeurons();$/;"	p	class:NeuronalNetwork	access:public	signature:()
NeuronalNetwork::RestoreNeurons	src/network.cpp	/^void NeuronalNetwork::RestoreNeurons() {$/;"	f	class:NeuronalNetwork	signature:()
NeuronalNetwork::Rewire	include/network.h	/^	void Rewire(double p, int seed, bool output_option);$/;"	p	class:NeuronalNetwork	access:public	signature:(double p, int seed, bool output_option)
NeuronalNetwork::Rewire	src/network.cpp	/^void NeuronalNetwork::Rewire(double p, int seed, bool output_option) {$/;"	f	class:NeuronalNetwork	signature:(double p, int seed, bool output_option)
NeuronalNetwork::Save	include/network.h	/^	void Save(string neuron_file, string connecting_matrix_file);$/;"	p	class:NeuronalNetwork	access:public	signature:(string neuron_file, string connecting_matrix_file)
NeuronalNetwork::Save	src/network.cpp	/^void NeuronalNetwork::Save(string neuron_file, string connecting_matrix_file) {$/;"	f	class:NeuronalNetwork	signature:(string neuron_file, string connecting_matrix_file)
NeuronalNetwork::SetConnectingDensity	include/network.h	/^	void SetConnectingDensity(int density);$/;"	p	class:NeuronalNetwork	access:public	signature:(int density)
NeuronalNetwork::SetConnectingDensity	src/network.cpp	/^void NeuronalNetwork::SetConnectingDensity(int density){$/;"	f	class:NeuronalNetwork	signature:(int density)
NeuronalNetwork::SetDelay	include/network.h	/^	void SetDelay(double val);$/;"	p	class:NeuronalNetwork	access:public	signature:(double val)
NeuronalNetwork::SetDelay	src/network.cpp	/^void NeuronalNetwork::SetDelay(double val) {$/;"	f	class:NeuronalNetwork	signature:(double val)
NeuronalNetwork::SetDrivingType	include/network.h	/^	void SetDrivingType(bool driving_type);$/;"	p	class:NeuronalNetwork	access:public	signature:(bool driving_type)
NeuronalNetwork::SetDrivingType	src/network.cpp	/^void NeuronalNetwork::SetDrivingType(bool driving_type) {$/;"	f	class:NeuronalNetwork	signature:(bool driving_type)
NeuronalNetwork::SetF	include/network.h	/^	void SetF(bool function, double val);$/;"	p	class:NeuronalNetwork	access:public	signature:(bool function, double val)
NeuronalNetwork::SetF	src/network.cpp	/^void NeuronalNetwork::SetF(bool function, double val) {$/;"	f	class:NeuronalNetwork	signature:(bool function, double val)
NeuronalNetwork::SetS	include/network.h	/^	void SetS(bool function, double val);$/;"	p	class:NeuronalNetwork	access:public	signature:(bool function, double val)
NeuronalNetwork::SetS	src/network.cpp	/^void NeuronalNetwork::SetS(bool function, double val) {$/;"	f	class:NeuronalNetwork	signature:(bool function, double val)
NeuronalNetwork::SortSpikes	include/network.h	/^	double SortSpikes(double t, double dt, vector<SpikeElement> &T);$/;"	p	class:NeuronalNetwork	access:private	signature:(double t, double dt, vector<SpikeElement> &T)
NeuronalNetwork::SortSpikes	src/network.cpp	/^double NeuronalNetwork::SortSpikes(double t, double dt, vector<SpikeElement>& T) {$/;"	f	class:NeuronalNetwork	signature:(double t, double dt, vector<SpikeElement>& T)
NeuronalNetwork::UpdateNetworkState	include/network.h	/^	void UpdateNetworkState(double t, double dt);$/;"	p	class:NeuronalNetwork	access:public	signature:(double t, double dt)
NeuronalNetwork::UpdateNetworkState	src/network.cpp	/^void NeuronalNetwork::UpdateNetworkState(double t, double dt) {$/;"	f	class:NeuronalNetwork	signature:(double t, double dt)
NeuronalNetwork::connecting_density_	include/network.h	/^	int connecting_density_;$/;"	m	class:NeuronalNetwork	access:private
NeuronalNetwork::connectivity_matrix_	include/network.h	/^	ConnectivityMatrix connectivity_matrix_;$/;"	m	class:NeuronalNetwork	access:private
NeuronalNetwork::external_excitatory_inputs_	include/network.h	/^	vector<vector<double> > external_excitatory_inputs_; \/\/ temp storage of external Poisson input;$/;"	m	class:NeuronalNetwork	access:private
NeuronalNetwork::external_inhibitory_inputs_	include/network.h	/^	vector<vector<double> > external_inhibitory_inputs_;$/;"	m	class:NeuronalNetwork	access:private
NeuronalNetwork::interaction_delay_	include/network.h	/^	double interaction_delay_;$/;"	m	class:NeuronalNetwork	access:private
NeuronalNetwork::neuron_number_	include/network.h	/^	int neuron_number_;	\/\/ number of the neurons in the group;$/;"	m	class:NeuronalNetwork	access:private
NeuronalNetwork::neurons_	include/network.h	/^	Neuron *neurons_;$/;"	m	class:NeuronalNetwork	access:private
NeuronalState	include/neuron.h	/^struct NeuronalState {$/;"	s
NeuronalState::ge	include/neuron.h	/^	double ge; \/\/ excitatory conductance;$/;"	m	struct:NeuronalState	access:public
NeuronalState::gi	include/neuron.h	/^	double gi; \/\/ inhibitory conductance;$/;"	m	struct:NeuronalState	access:public
NeuronalState::index	include/neuron.h	/^	int index; \/\/ index of neuron in loop lattice;$/;"	m	struct:NeuronalState	access:public
NeuronalState::membrane_potential_	include/neuron.h	/^	double membrane_potential_; \/\/ membrane potential;$/;"	m	struct:NeuronalState	access:public
NeuronalState::remaining_refractory_time	include/neuron.h	/^	double remaining_refractory_time;$/;"	m	struct:NeuronalState	access:public
NeuronalState::type	include/neuron.h	/^	bool type; \/\/ neuronal type: true for excitatory, false for inhibitory;$/;"	m	struct:NeuronalState	access:public
O	figures/mi_fig_spikeToLFP/10min/partial/20.png	/^*wlŸ≤e:}˙¥:§Áü^◊^{≠>˝ÙSıË—£˛ü/;"	v
O	figures/neuronal_dimension_analysis/time_constant_synaptic_conductance.png	/^zªO§ö‘º›¡;+ªÄ/;"	v
O	reports/oct31/Recent numerical results related to neuronal network simulation.pdf	/^ú~÷œ˙Y?Îg˝¨ü„Ÿ›œÌ≥˝N?Îg˝¨üı≥~÷œÒËgh|Ù≥~÷œ˙Y?Îg˝œÓ~Óî›Ëg(p˙Y?Îg˝¨üı≥~éß¨I"Ÿ%ª—œP‡Ù≥~÷œ˙Y?Îg˝œÓ~Óû›Ëg(p˙Y?Îg˝¨üı≥~éß¨i"Yû›Ëg»¥fÕöyÛÊmŸ≤%uq◊Æ]ﬂ˘Œw>˜πœ$/;"	v
OffRefractoryPeriod	include/neuron.h	/^	double OffRefractoryPeriod(double dt);$/;"	p	class:Neuron	access:private	signature:(double dt)
OffRefractoryPeriod	src/neuron.cpp	/^double Neuron::OffRefractoryPeriod(double dt) {$/;"	f	class:Neuron	signature:(double dt)
OutConductance	include/network.h	/^  void OutConductance(string path, bool function);$/;"	p	class:NeuronalNetwork	access:public	signature:(string path, bool function)
OutConductance	src/network.cpp	/^void NeuronalNetwork::OutConductance(string path, bool function) {$/;"	f	class:NeuronalNetwork	signature:(string path, bool function)
OutCurrent	include/network.h	/^  void OutCurrent(string path);$/;"	p	class:NeuronalNetwork	access:public	signature:(string path)
OutCurrent	src/network.cpp	/^void NeuronalNetwork::OutCurrent(string path) {$/;"	f	class:NeuronalNetwork	signature:(string path)
OutLeakyCurrent	include/neuron.h	/^	double OutLeakyCurrent();$/;"	p	class:Neuron	access:public	signature:()
OutLeakyCurrent	src/neuron.cpp	/^double Neuron::OutLeakyCurrent() {$/;"	f	class:Neuron	signature:()
OutMatrix	include/connectivity_matrix.h	/^	void OutMatrix(string path);$/;"	p	class:ConnectivityMatrix	access:public	signature:(string path)
OutMatrix	src/connectivity_matrix.cpp	/^void ConnectivityMatrix::OutMatrix(string path) {$/;"	f	class:ConnectivityMatrix	signature:(string path)
OutPartialCurrent	include/network.h	/^  void OutPartialCurrent(string path, bool type);$/;"	p	class:NeuronalNetwork	access:public	signature:(string path, bool type)
OutPartialCurrent	src/network.cpp	/^void NeuronalNetwork::OutPartialCurrent(string path, bool type) {$/;"	f	class:NeuronalNetwork	signature:(string path, bool type)
OutPathMatrix	include/connectivity_matrix.h	/^	void OutPathMatrix(string path);$/;"	p	class:ConnectivityMatrix	access:public	signature:(string path)
OutPathMatrix	src/connectivity_matrix.cpp	/^void ConnectivityMatrix::OutPathMatrix(string path){$/;"	f	class:ConnectivityMatrix	signature:(string path)
OutPotential	include/network.h	/^	void OutPotential(string path);$/;"	p	class:NeuronalNetwork	access:public	signature:(string path)
OutPotential	src/main_potential.cpp	/^void OutPotential(string filename, vector<double>& v, double* t_range) {$/;"	f	signature:(string filename, vector<double>& v, double* t_range)
OutPotential	src/network.cpp	/^void NeuronalNetwork::OutPotential(string path) {$/;"	f	class:NeuronalNetwork	signature:(string path)
OutSpikeTrain	include/neuron.h	/^	void OutSpikeTrain(vector<double> & spikes);$/;"	p	class:Neuron	access:public	signature:(vector<double> & spikes)
OutSpikeTrain	src/neuron.cpp	/^void Neuron::OutSpikeTrain(vector<double> & spikes) {$/;"	f	class:Neuron	signature:(vector<double> & spikes)
OutSpikeTrains	include/network.h	/^	void OutSpikeTrains(string path);$/;"	p	class:NeuronalNetwork	access:public	signature:(string path)
OutSpikeTrains	src/network.cpp	/^void NeuronalNetwork::OutSpikeTrains(string path) {$/;"	f	class:NeuronalNetwork	signature:(string path)
OutSynapticCurrent	include/neuron.h	/^	double OutSynapticCurrent(bool type);$/;"	p	class:Neuron	access:public	signature:(bool type)
OutSynapticCurrent	src/neuron.cpp	/^double Neuron::OutSynapticCurrent(bool type) {$/;"	f	class:Neuron	signature:(bool type)
OutTotalCurrent	include/neuron.h	/^	double OutTotalCurrent();$/;"	p	class:Neuron	access:public	signature:()
OutTotalCurrent	src/neuron.cpp	/^double Neuron::OutTotalCurrent() {$/;"	f	class:Neuron	signature:()
P	figures/gauss/mi_gauss_0.5_0.5.png	/^æ÷`æ÷`&⁄Â[é/;"	v
P	figures/mi_fig_spikeToLFP/10min/full/80.png	/^¸Ñ(®+Ω/;"	v
P	figures/robust/partial/mi_0015.png	/^/;"	v
P	figures/triple/mi_02.png	/^à¥ªª‘Ç≈At*)Ä46≤B 1Ä)P∞¨,%3 ÒÄ⁄ƒ)L–}$[d÷,¿l.Ø9êÅ†∫0˛§Eñ‘~Ô*XJ+l¡¢b¬/;"	v
P	test/entropy_binary.cpp	/^void P(vector<int>& x, vector<int>& px) {$/;"	f	signature:(vector<int>& x, vector<int>& px)
Pi	include/vecmanip.h	/^template <class T> T Pi(vector<T> data);$/;"	p	signature:(vector<T> data)
Pi	include/vecmanip.hpp	/^template <class T> T Pi(vector<T> data) {$/;"	f	signature:(vector<T> data)
PoissonGenerator	test/mi_test.cpp	/^double PoissonGenerator(double rate, double t_last) {$/;"	f	signature:(double rate, double t_last)
Ppc	figures/robust/partial/mi_0075.png	/^/;"	v
PreNetNeuronNumber	doc/research-log.md	/^	PreNetNeuronNumber = 200$/;"	v
PrimelyUpdateState	include/neuron.h	/^	double PrimelyUpdateState(bool is_fire, bool mode, bool function, double t, double dt, bool temp_switch);$/;"	p	class:Neuron	access:private	signature:(bool is_fire, bool mode, bool function, double t, double dt, bool temp_switch)
PrimelyUpdateState	src/neuron.cpp	/^double Neuron::PrimelyUpdateState(bool is_fire, bool mode, bool function, double t, double dt, bool temp_switch) {$/;"	f	class:Neuron	signature:(bool is_fire, bool mode, bool function, double t, double dt, bool temp_switch)
Print1D	include/io.h	/^template <class T> void Print1D(string path, vector<T>& data, string mode, int axis);$/;"	p	signature:(string path, vector<T>& data, string mode, int axis)
Print1D	include/io.hpp	/^template <class T> void Print1D(string path, vector<T>& data, string mode, int axis) {$/;"	f	signature:(string path, vector<T>& data, string mode, int axis)
Print1DBin	include/io.h	/^template <class T> void Print1DBin(string path, vector<T>& data, string mode);$/;"	p	signature:(string path, vector<T>& data, string mode)
Print1DBin	include/io.hpp	/^template <class T> void Print1DBin(string path, vector<T>& data, string mode) {$/;"	f	signature:(string path, vector<T>& data, string mode)
Print2D	include/io.h	/^template <class T> void Print2D(string path, vector<vector<T> >& data, string mode);$/;"	p	signature:(string path, vector<vector<T> >& data, string mode)
Print2D	include/io.hpp	/^template <class T> void Print2D(string path, vector<vector<T> >& data, string mode) {$/;"	f	signature:(string path, vector<vector<T> >& data, string mode)
Print2DBin	include/io.h	/^template <class T> void Print2DBin(string path, vector<vector<T> >& data, string mode);$/;"	p	signature:(string path, vector<vector<T> >& data, string mode)
Print2DBin	include/io.hpp	/^template <class T> void Print2DBin(string path, vector<vector<T> >& data, string mode) {$/;"	f	signature:(string path, vector<vector<T> >& data, string mode)
PrintConfig	include/get-config.h	/^void PrintConfig(const map<string, string> & m);  $/;"	p	signature:(const map<string, string> & m)
PrintConfig	src/get-config.cpp	/^void PrintConfig(const map<string, string> & m) {$/;"	f	signature:(const map<string, string> & m)
Q	figures/one-way/direct/significance/mi_01_20_1k.png	/^/;"	v
Q	figures/two-way/partial/mi_01.png	/^		—O<°3fËÚÀ\/◊Æ]ªU2/;"	v
Q	ks2_80.png	/^`1◊ße%*ïÒÊ¸ïT>∑uìénÑ≥ªçé&"""Q,Ê<‹,å˙}Zòâ[SIÆ~øs√&=NDDƒU©/;"	v
Q	reports/Jul20/fig5_single.png	/^˙Ù”Oı⁄kØi√Ü/;"	v
Qe	figures/gauss/mi_gauss_0.5_1_10_1k.png	/^/;"	v
R	figures/dt/full/mi_05.png	/^–®Q£<\\%/;"	v
R	figures/dt/partial/mi_0125.png	/^áF◊ú>}ëëëHMM≈†A\\|GDDñçˇÆë%—ˆÔ+ˇ^∑ß`µ`¸¯Ò?~|ÉcÛÁœGdd$6lÿ–b/;"	v
R	figures/i0005/direct/fig.png	/^÷ˇ¯G˝ˆ€oó›&Â1∂=zË¿Å9r§,ÀRè=\\œOú8—ÌuûŒõõõ´˚Ôø_/;"	v
R	figures/mi_fig_spikeToLFP/10min/full/10.png	/^È˙ı¿Æ]≤_Ä≠≠ú§^=y˚ÏÚü93È∂?‡·ÑÜ Z±¢(sî» …ÇÚg§∞˚πx:`GA˜ıtÙJu‹°‚KLﬁxCÔ}ˆlﬁcìR)è’?ˇ,õgÍÍ Z‘1cdçÎwﬂ_|!ÁâŸ¥	h”FsØ£"‹Ω+_ßΩΩ<>{lKHêMXïJ˘æ±ñ’V–˘ï-ÚﬂÙ°ªá–g[ºYˇMlÎø≠–Ê¥¨4tÓÄÿ‘XúwV∆Vœ˝_Y ,å˘{|.˚`Eèò‘f/;"	v
R	figures/mi_fig_spikeToLFP/direct/10bins/5s.png	/^ñ$Y,ŒQê¥4iÀ≥´ ˚˙?_ÎÈçOÎ„?6ª¯/;"	v
R	figures/nn0050/n1i.png	/^/;"	v
R	figures/robust/full/mi_0005.png	/^–®Q£<\\%/;"	v
R	linear_50_length.png	/^ºÄíHÚ˛Å	¶\\Ï$˚˘~>~N≥≥≥≤∂g!œÏΩ~kIÃf≥DDDD$R°;@DDDDΩãêàààHd/;"	v
R	reports/Jul20/fig4.png	/^0oﬁ<‘◊◊„©ßû¬ö5k¸c4Q\\\\åúúèx}ÙQ$&&¢ÆÆ'Nú¿ä+F¯ "")1)CDD≤2a¬¸·¿‹πsãÌ€∑„Wø˙,ÙzΩ∏ﬂÙÈ”—ÿÿËs;Q ™™™#.)Î-±[^^éÙÙtDGGC´’"77W‹ß¥¥&ì	/;"	v
Rapp	doc/thesis-proposal.md	/^7. Cellucci, C. J., Albano, A. M., & Rapp, P. E. (2005). Statistical validation of mutual information calculations: Comparison of alternative numerical algorithms. Physical Review E, 71(6), 066208.$/;"	v
Rapp	tags	/^Rapp	doc\/thesis-proposal.md	\/^7. Cellucci, C. J., Albano, A. M., & Rapp, P. E. (2005). Statistical validation of mutual information calculations: Comparison of alternative numerical algorithms. Physical Review E, 71(6), 066208.$\/;"	v$/;"	v
Read1D	include/io.h	/^template <class T> void Read1D(string path, vector<T>& data, int index, int axis);$/;"	p	signature:(string path, vector<T>& data, int index, int axis)
Read1D	include/io.hpp	/^template <class T> void Read1D(string path, vector<T>& data, int index, int axis) {$/;"	f	signature:(string path, vector<T>& data, int index, int axis)
Read1DBin	include/io.h	/^template <class T> void Read1DBin(string path, vector<T>& data, int index, int axis);$/;"	p	signature:(string path, vector<T>& data, int index, int axis)
Read1DBin	include/io.hpp	/^template <class T> void Read1DBin(string path, vector<T>& data, int index, int axis) {$/;"	f	signature:(string path, vector<T>& data, int index, int axis)
Read2D	include/io.h	/^template <class T> void Read2D(string path, vector<vector<T> >& data);$/;"	p	signature:(string path, vector<vector<T> >& data)
Read2D	include/io.hpp	/^template <class T> void Read2D(string path, vector<vector<T> >& data) {$/;"	f	signature:(string path, vector<vector<T> >& data)
Read2DBin	include/io.h	/^template <class T> void Read2DBin(string path, vector<vector<T> >& data);$/;"	p	signature:(string path, vector<vector<T> >& data)
Read2DBin	include/io.hpp	/^template <class T> void Read2DBin(string path, vector<vector<T> >& data) {$/;"	f	signature:(string path, vector<vector<T> >& data)
ReadConfig	src/get-config.cpp	/^bool ReadConfig(const string & filename, map<string, string> & m) {$/;"	f	signature:(const string & filename, map<string, string> & m)
ReadMatrix	include/connectivity_matrix.h	/^	int ReadMatrix(int i, int j);$/;"	p	class:ConnectivityMatrix	access:public	signature:(int i, int j)
ReadMatrix	src/connectivity_matrix.cpp	/^int ConnectivityMatrix::ReadMatrix(int i, int j) {$/;"	f	class:ConnectivityMatrix	signature:(int i, int j)
Reset	include/neuron.h	/^	void Reset();$/;"	p	class:Neuron	access:public	signature:()
Reset	src/neuron.cpp	/^void Neuron::Reset() {$/;"	f	class:Neuron	signature:()
Reshape	include/vecmanip.h	/^template <class T> bool Reshape(vector<T>& data, vector<vector<T> >& newdata, size_t* shape);$/;"	p	signature:(vector<T>& data, vector<vector<T> >& newdata, size_t* shape)
Reshape	include/vecmanip.hpp	/^template <class T> bool Reshape(vector<T>& data, vector<vector<T> >& newdata, size_t* shape) {$/;"	f	signature:(vector<T>& data, vector<vector<T> >& newdata, size_t* shape)
RestoreNeurons	include/network.h	/^	void RestoreNeurons();$/;"	p	class:NeuronalNetwork	access:public	signature:()
RestoreNeurons	src/network.cpp	/^void NeuronalNetwork::RestoreNeurons() {$/;"	f	class:NeuronalNetwork	signature:()
Rewire	include/connectivity_matrix.h	/^	void Rewire(double p, int seed, bool OutputOption);$/;"	p	class:ConnectivityMatrix	access:public	signature:(double p, int seed, bool OutputOption)
Rewire	include/network.h	/^	void Rewire(double p, int seed, bool output_option);$/;"	p	class:NeuronalNetwork	access:public	signature:(double p, int seed, bool output_option)
Rewire	src/connectivity_matrix.cpp	/^void ConnectivityMatrix::Rewire(double p, int seed, bool OutputOption) {$/;"	f	class:ConnectivityMatrix	signature:(double p, int seed, bool OutputOption)
Rewire	src/network.cpp	/^void NeuronalNetwork::Rewire(double p, int seed, bool output_option) {$/;"	f	class:NeuronalNetwork	signature:(double p, int seed, bool output_option)
Rule2	include/stationary.h	/^void Rule2(vector<vector<double> > & data, vector<vector<double> >& covs, size_t maxlag);$/;"	p	signature:(vector<vector<double> > & data, vector<vector<double> >& covs, size_t maxlag)
Rule2	src/stationary.cpp	/^void Rule2(vector<vector<double> > & data, vector<vector<double> >& covs, size_t maxlag) {$/;"	f	signature:(vector<vector<double> > & data, vector<vector<double> >& covs, size_t maxlag)
S	figures/mi_fig_spikeToLFP/10min/partial/20.png	/^≥@/;"	v
S	figures/mi_fig_spikeToLFP/10min/partial/20.png	/^¥k◊.m‹∏Qˇ˙◊ø4zÙhµlŸRÉÆÛµ˝¸¸*Ï§%IŸŸŸuænMπB‹Ò„«=˛^®?⁄V#%%E≈≈≈*..VQQëäääJ˛∑kµ#11±Ã«.!!!JHHPzz∫ÚÛÛµwÔ^¬/;"	v
S	reports/Jul20/report0731_KC.pdf	/^•Í%[$/;"	v
SO	figures/mi_fig_spikeToLFP/direct/4bins/10s.png	/^V|µ)‡Ü/;"	v
SO	figures/spike-spike/spikespike_dt=0.5ms.png	/^™H◊Æ]´˜x<U‰‚ã\/nÙö¸±fœû≠.∏@+WÆî√·®:∂h—"›rÀ-ö9s¶ﬂøóyyy ÀÀ´∂ènJÛ@‰‹sœ’?¸†ù;wVkIz€ñ;v¨˜‹úú/;"	v
STA	src/sta.cpp	/^double STA(vector<bool>& x, vector<double>& y) {$/;"	f	signature:(vector<bool>& x, vector<double>& y)
Sample	include/lfp.h	/^void Sample(vector<int> & origin_vector, vector<int> &sample_vector, int num);$/;"	p	signature:(vector<int> & origin_vector, vector<int> &sample_vector, int num)
Sample	src/lfp.cpp	/^void Sample(vector<int> & origin_vector, vector<int> & sample_vector, int num) {$/;"	f	signature:(vector<int> & origin_vector, vector<int> & sample_vector, int num)
Save	include/network.h	/^	void Save(string neuron_file, string connecting_matrix_file);$/;"	p	class:NeuronalNetwork	access:public	signature:(string neuron_file, string connecting_matrix_file)
Save	include/neuron.h	/^	void Save(NeuronalState & vals);$/;"	p	class:Neuron	access:public	signature:(NeuronalState & vals)
Save	src/network.cpp	/^void NeuronalNetwork::Save(string neuron_file, string connecting_matrix_file) {$/;"	f	class:NeuronalNetwork	signature:(string neuron_file, string connecting_matrix_file)
Save	src/neuron.cpp	/^void Neuron::Save(NeuronalState & vals) {$/;"	f	class:Neuron	signature:(NeuronalState & vals)
Scan	include/connectivity_matrix.h	/^	void Scan(int target_value, int row_index_, vector<int> &output_indices);$/;"	p	class:ConnectivityMatrix	access:private	signature:(int target_value, int row_index_, vector<int> &output_indices)
Scan	src/connectivity_matrix.cpp	/^void ConnectivityMatrix::Scan(int target_value, int row_index, vector<int> &output_indices) {$/;"	f	class:ConnectivityMatrix	signature:(int target_value, int row_index, vector<int> &output_indices)
Sen	reports/Jul20/pp1.png	/^Ø	s‘œYLÇÄ#Y&ÏI3†ok/;"	v
SetConnectingDensity	include/connectivity_matrix.h	/^	void SetConnectingDensity(int connecting_density);$/;"	p	class:ConnectivityMatrix	access:public	signature:(int connecting_density)
SetConnectingDensity	include/network.h	/^	void SetConnectingDensity(int density);$/;"	p	class:NeuronalNetwork	access:public	signature:(int density)
SetConnectingDensity	src/connectivity_matrix.cpp	/^void ConnectivityMatrix::SetConnectingDensity(int connecting_density) {$/;"	f	class:ConnectivityMatrix	signature:(int connecting_density)
SetConnectingDensity	src/network.cpp	/^void NeuronalNetwork::SetConnectingDensity(int density){$/;"	f	class:NeuronalNetwork	signature:(int density)
SetDelay	include/network.h	/^	void SetDelay(double val);$/;"	p	class:NeuronalNetwork	access:public	signature:(double val)
SetDelay	src/network.cpp	/^void NeuronalNetwork::SetDelay(double val) {$/;"	f	class:NeuronalNetwork	signature:(double val)
SetDrivingType	include/network.h	/^	void SetDrivingType(bool driving_type);$/;"	p	class:NeuronalNetwork	access:public	signature:(bool driving_type)
SetDrivingType	include/neuron.h	/^	void SetDrivingType(bool x);$/;"	p	class:Neuron	access:public	signature:(bool x)
SetDrivingType	src/network.cpp	/^void NeuronalNetwork::SetDrivingType(bool driving_type) {$/;"	f	class:NeuronalNetwork	signature:(bool driving_type)
SetDrivingType	src/neuron.cpp	/^void Neuron::SetDrivingType(bool x) {$/;"	f	class:Neuron	signature:(bool x)
SetF	include/network.h	/^	void SetF(bool function, double val);$/;"	p	class:NeuronalNetwork	access:public	signature:(bool function, double val)
SetF	src/network.cpp	/^void NeuronalNetwork::SetF(bool function, double val) {$/;"	f	class:NeuronalNetwork	signature:(bool function, double val)
SetFeedforwardStrength	include/neuron.h	/^	void SetFeedforwardStrength(bool function, double F);$/;"	p	class:Neuron	access:public	signature:(bool function, double F)
SetFeedforwardStrength	src/neuron.cpp	/^void Neuron::SetFeedforwardStrength(bool function, double F) {$/;"	f	class:Neuron	signature:(bool function, double F)
SetNeuronIndex	include/neuron.h	/^	void SetNeuronIndex(int x);$/;"	p	class:Neuron	access:public	signature:(int x)
SetNeuronIndex	src/neuron.cpp	/^void Neuron::SetNeuronIndex(int x) {$/;"	f	class:Neuron	signature:(int x)
SetNeuronNumber	include/connectivity_matrix.h	/^	void SetNeuronNumber(int neuron_number);$/;"	p	class:ConnectivityMatrix	access:public	signature:(int neuron_number)
SetNeuronNumber	src/connectivity_matrix.cpp	/^void ConnectivityMatrix::SetNeuronNumber(int neuron_number) {$/;"	f	class:ConnectivityMatrix	signature:(int neuron_number)
SetNeuronType	include/neuron.h	/^	void SetNeuronType(bool x);$/;"	p	class:Neuron	access:public	signature:(bool x)
SetNeuronType	src/neuron.cpp	/^void Neuron::SetNeuronType(bool x) {$/;"	f	class:Neuron	signature:(bool x)
SetOption	test/mi_test.cpp	/^int SetOption() {$/;"	f	signature:()
SetPoissonRate	include/neuron.h	/^	void SetPoissonRate(bool function, double rate);$/;"	p	class:Neuron	access:public	signature:(bool function, double rate)
SetPoissonRate	src/neuron.cpp	/^void Neuron::SetPoissonRate(bool function, double rate) {$/;"	f	class:Neuron	signature:(bool function, double rate)
SetS	include/network.h	/^	void SetS(bool function, double val);$/;"	p	class:NeuronalNetwork	access:public	signature:(bool function, double val)
SetS	src/network.cpp	/^void NeuronalNetwork::SetS(bool function, double val) {$/;"	f	class:NeuronalNetwork	signature:(bool function, double val)
SetSynapticStrength	include/neuron.h	/^	void SetSynapticStrength(bool function, double S);$/;"	p	class:Neuron	access:public	signature:(bool function, double S)
SetSynapticStrength	src/neuron.cpp	/^void Neuron::SetSynapticStrength(bool function, double S) {$/;"	f	class:Neuron	signature:(bool function, double S)
Shuffle	include/surrogate.h	/^void Shuffle(vector<double>& data);$/;"	p	signature:(vector<double>& data)
Shuffle2D1D	include/surrogate.h	/^void Shuffle2D1D(vector<vector<double> >& data, int axis);$/;"	p	signature:(vector<vector<double> >& data, int axis)
Song	doc/thesis-proposal.md	/^10. Taghva, A., Song, D., Hampson, R. E., Deadwyler, S. A., & Berger, T. W. (2012). Determination of Relevant Neuron‚ÄìNeuron Connections for Neural Prosthetics Using Time-Delayed Mutual Information: Tutorial and Preliminary Results. World neurosurgery, 78(6), 618-630.$/;"	v
Song	tags	/^Berger	doc\/thesis-proposal.md	\/^10. Taghva, A., Song, D., Hampson, R. E., Deadwyler, S. A., & Berger, T. W. (2012). Determination of Relevant Neuron‚ÄìNeuron Connections for Neural Prosthetics Using Time-Delayed Mutual Information: Tutorial and Preliminary Results. World neurosurgery, 78(6), 618-630.$\/;"	v$/;"	v
Song	tags	/^Hampson	doc\/thesis-proposal.md	\/^10. Taghva, A., Song, D., Hampson, R. E., Deadwyler, S. A., & Berger, T. W. (2012). Determination of Relevant Neuron‚ÄìNeuron Connections for Neural Prosthetics Using Time-Delayed Mutual Information: Tutorial and Preliminary Results. World neurosurgery, 78(6), 618-630.$\/;"	v$/;"	v
SortSpikes	include/network.h	/^	double SortSpikes(double t, double dt, vector<SpikeElement> &T);$/;"	p	class:NeuronalNetwork	access:private	signature:(double t, double dt, vector<SpikeElement> &T)
SortSpikes	src/network.cpp	/^double NeuronalNetwork::SortSpikes(double t, double dt, vector<SpikeElement>& T) {$/;"	f	class:NeuronalNetwork	signature:(double t, double dt, vector<SpikeElement>& T)
Spike	include/neuron.h	/^struct Spike {$/;"	s
Spike2Bool	include/spike.h	/^void Spike2Bool(vector<double> & spikes, vector<bool> & binary_spikes, double tmax, double dt);$/;"	p	signature:(vector<double> & spikes, vector<bool> & binary_spikes, double tmax, double dt)
Spike2Bool	src/spike.cpp	/^void Spike2Bool(vector<double>& spikes, vector<bool> & binary_spikes, double tmax, double dt) {$/;"	f	signature:(vector<double>& spikes, vector<bool> & binary_spikes, double tmax, double dt)
Spike::function	include/neuron.h	/^	bool function; \/\/ function of spike: true for excitation, false for inhibition;$/;"	m	struct:Spike	access:public
Spike::mode	include/neuron.h	/^	bool mode; \/\/ mode of spike: true for feedforward spike, false for neuronal input spike;$/;"	m	struct:Spike	access:public
Spike::t	include/neuron.h	/^	double t; \/\/ Exact spiking time;$/;"	m	struct:Spike	access:public
SpikeElement	include/network.h	/^struct SpikeElement {$/;"	s
SpikeElement::index	include/network.h	/^	int index;	\/\/ The sequence order of spikes within single time interval;$/;"	m	struct:SpikeElement	access:public
SpikeElement::t	include/network.h	/^	double t;	\/\/ exact spiking time;$/;"	m	struct:SpikeElement	access:public
SpikeElement::type	include/network.h	/^	bool type;	\/\/ The type of neuron that fired;$/;"	m	struct:SpikeElement	access:public
Std	include/stationary.h	/^template <class T> double Std(vector<T>& x) {$/;"	f	signature:(vector<T>& x)
Stds	include/stationary.h	/^void Stds(vector<vector<double> > & data, vector<double>& stds);$/;"	p	signature:(vector<vector<double> > & data, vector<double>& stds)
Stds	src/stationary.cpp	/^void Stds(vector<vector<double> > & data, vector<double>& stds) {$/;"	f	signature:(vector<vector<double> > & data, vector<double>& stds)
Strogatz	doc/thesis-proposal.md	/^6. Watts, D. J., & Strogatz, S. H. (1998). Collective dynamics of ‚Äòsmall-world‚Äônetworks. nature, 393(6684), 440-442.$/;"	v
Strogatz	tags	/^Strogatz	doc\/thesis-proposal.md	\/^6. Watts, D. J., & Strogatz, S. H. (1998). Collective dynamics of ‚Äòsmall-world‚Äônetworks. nature, 393(6684), 440-442.$\/;"	v$/;"	v
T	figures/dt/partial/10bins/mi_05.png	/^¯ﬁ{Ô©ˇ˛:tËê~¯a=ÛÃ3JHH–Ñ	4i“§’5`¿/;"	v
T	figures/gauss/20.png	/^≥œŒ∆¶;õ‡P¡]<– ¶Ué2´Ø≠∆‰ìì1ª≈l,h≥ œÔI^ñ_Yéæ3∞µ◊VwûÎıÿ‘Xt˝ß+F>ƒëAG–“∫Â'óôöôäiá`√Ωe–J™â„ﬂnB+ªÜ9 dfe">=ÒiÒàOèG\\Z‚”‚°Æ¢éNvùJ$}ı•K¿ÙÈ¿ıÎ@∑n¿≤e@Õö\/ˇ Ú∂˝ª/;"	v
T	figures/mi_fig_spikeToLFP/direct/005.png	/^/;"	v
T	figures/one-way/direct/mi_direct_10.png	/^XÖd@™:V≈•íKπŒÄhö∆Ú‡ÂÛ∆∂Õï–ÈTÄmJì|'Q√©„7éÁV˙-V_çìùìi1Bfv&!	!¥´_˙?∞ª#wp,ˆò FHŒHfÛŸÕ|‘Û#@›\/,¢ﬂlÓ˜•\/«n≠c˙ﬂ”Yºå¥Ã4“≤“HÀL#[ÀŒ˜πÀÜ,c\\€q%öo’`Üy£Gsı˛∞};<ıî >˚–≥,>±òÔü¸{[˚¢\/VFÅó¯¯¿ò1Õ70eäZeJYY®nÏƒ”∂l1Ì∏¢‚í%X¢\\”4Uæq√uG´gOuºcGï˘êeXKQ∞Ù<kñÔJX±úøqûqm∆±z5ÙÌuÍò~ú—≠G≥i‘&v\\‹Aø˛$e$ô~}º˜c:.Ï»ï€WJu‹+∑Øv-:bJuÏÚncÿF“≤“›z4†ñîŸ¥	÷¨ÅyÛ¿≈ûjˆß'üÊ“¥KƒOè'˘Ωd≤>Ã"Ûˇeí43â´Ô\\%ÚçHBßÑ“ •ª"wïhÆIID‹ä†mΩ∂<¸∞ ¸Ù”›««¥√ı¥Îlø∏ΩD„î∂† ıZ/;"	v
T	mi_01_2bins.png	/^îññf ı/;"	v
T	reports/Jul20/sp1.png	/^ôü>'v"…êÙ…©l˜Ò€nªÕDI»î∏·àÙl;RàÁwû@Äª>~x˙ˆt;ëŸπ\\◊/;"	v
TDMI	include/mi_adaptive.h	/^void TDMI(vector<bool>& bool_series, vector<double>& double_series, int negative_time_delay, int positive_time_delay, vector<double> & tdmi, bool random_switch);$/;"	p	signature:(vector<bool>& bool_series, vector<double>& double_series, int negative_time_delay, int positive_time_delay, vector<double> & tdmi, bool random_switch)
TDMI	include/mi_uniform.h	/^void TDMI(vector<bool>& x, vector<bool>& y, vector<double> & tdmi, size_t* range);$/;"	p	signature:(vector<bool>& x, vector<bool>& y, vector<double> & tdmi, size_t* range)
TDMI	include/mi_uniform.h	/^void TDMI(vector<bool>& x, vector<double>& y, vector<double>& tdmi, size_t* range, double binsize);$/;"	p	signature:(vector<bool>& x, vector<double>& y, vector<double>& tdmi, size_t* range, double binsize)
TDMI	include/mi_uniform.h	/^void TDMI(vector<double>& x, vector<double>& y, vector<double>& tdmi, size_t* range, double binsize);$/;"	p	signature:(vector<double>& x, vector<double>& y, vector<double>& tdmi, size_t* range, double binsize)
TDMI	include/mi_uniform.h	/^void TDMI(vector<double>& x, vector<vector<double> >& y, vector<double>& tdmi, double x_binsize, double y_binsize);$/;"	p	signature:(vector<double>& x, vector<vector<double> >& y, vector<double>& tdmi, double x_binsize, double y_binsize)
TDMI	src/mi_adaptive.cpp	/^void TDMI(vector<bool>& bool_series, vector<double>& double_series, int negative_time_delay, int positive_time_delay, vector<double>& tdmi, bool random_switch) {$/;"	f	signature:(vector<bool>& bool_series, vector<double>& double_series, int negative_time_delay, int positive_time_delay, vector<double>& tdmi, bool random_switch)
TDMI	src/mi_uniform.cpp	/^void TDMI(vector<bool>& x, vector<bool>& y, vector<double> & tdmi, size_t* range) {$/;"	f	signature:(vector<bool>& x, vector<bool>& y, vector<double> & tdmi, size_t* range)
TDMI	src/mi_uniform.cpp	/^void TDMI(vector<bool>& x, vector<double>& y, vector<double>& tdmi, size_t* range, double binsize) {$/;"	f	signature:(vector<bool>& x, vector<double>& y, vector<double>& tdmi, size_t* range, double binsize)
TDMI	src/mi_uniform.cpp	/^void TDMI(vector<double>& x, vector<double>& y, vector<double>& tdmi, size_t* range, double binsize) {$/;"	f	signature:(vector<double>& x, vector<double>& y, vector<double>& tdmi, size_t* range, double binsize)
TDMI	src/mi_uniform.cpp	/^void TDMI(vector<double>& x, vector<vector<double> >& y, vector<double> & tdmi, double x_binsize, double y_binsize) {$/;"	f	signature:(vector<double>& x, vector<vector<double> >& y, vector<double> & tdmi, double x_binsize, double y_binsize)
TDMI2bins	include/mi_uniform.h	/^void TDMI2bins(vector<bool>& x, vector<double>& y, vector<double>& tdmi, size_t* range, double threshold);$/;"	p	signature:(vector<bool>& x, vector<double>& y, vector<double>& tdmi, size_t* range, double threshold)
TDMI2bins	src/mi_uniform.cpp	/^void TDMI2bins(vector<bool>& x, vector<double>& y, vector<double>& tdmi, size_t* range, double threshold) {$/;"	f	signature:(vector<bool>& x, vector<double>& y, vector<double>& tdmi, size_t* range, double threshold)
TXhNM	figures/one-way/direct/mi_01.png	/^0	/;"	v
TXhNM	figures/robust/direct/mi_0005.png	/^0	/;"	v
Tao	doc/thesis-proposal.md	/^3. Shelley, M. J., & Tao, L. (2001). Efficient and accurate time-stepping schemes for integrate-and-fire neuronal networks. Journal of Computational Neuroscience, 11(2), 111-119.$/;"	v
TempCheckFire	include/neuron.h	/^	double TempCheckFire(double voltage, double t, double dt);$/;"	p	class:Neuron	access:private	signature:(double voltage, double t, double dt)
TempCheckFire	src/neuron.cpp	/^double Neuron::TempCheckFire(double voltage, double t, double dt) {$/;"	f	class:Neuron	signature:(double voltage, double t, double dt)
TemporallyUpdateNeuronalState	include/neuron.h	/^	double TemporallyUpdateNeuronalState(double t, double dt, vector<double> & inPE, vector<double> & inPI);$/;"	p	class:Neuron	access:public	signature:(double t, double dt, vector<double> & inPE, vector<double> & inPI)
TemporallyUpdateNeuronalState	src/neuron.cpp	/^double Neuron::TemporallyUpdateNeuronalState(double t, double dt, vector<double> & inPE, vector<double> & inPI) {$/;"	f	class:Neuron	signature:(double t, double dt, vector<double> & inPE, vector<double> & inPI)
Tf	figures/dt/direct/mi_05.png	/^THßNí√A/;"	v
Transpose	include/vecmanip.hpp	/^template <class T> bool Transpose(vector<vector<T> >& data, vector<vector<T> >& newdata) {$/;"	f	signature:(vector<vector<T> >& data, vector<vector<T> >& newdata)
Trim	src/get-config.cpp	/^void Trim(string & str) {$/;"	f	signature:(string & str)
Truncate	include/spike.h	/^void Truncate(vector<double>& spikes, double* range);$/;"	p	signature:(vector<double>& spikes, double* range)
Truncate	src/spike.cpp	/^void Truncate(vector<double>& spikes, double* range) {$/;"	f	signature:(vector<double>& spikes, double* range)
U	figures/mi_fig_spikeToLFP/10min/partial/20.png	/^‘®Q#∑÷/;"	v
U	figures/one-way/direct/indirected/mi_direct_10.png	/^/;"	v
UVVj	mi_01_10e-7.png	/^¢{ÓπG_~˘•Fé©∏∏8≈ƒƒh‡¡˙◊ø˛%I:r‰àÓªÔ>%&&*22Riii ÀÀ´µØÍs@∂lŸb¡Wá/;"	v
UpdateConductanceOfFiredNeuron	include/neuron.h	/^	void UpdateConductanceOfFiredNeuron(bool is_fire, bool fireMode, bool fireType, double t, double dt);$/;"	p	class:Neuron	access:private	signature:(bool is_fire, bool fireMode, bool fireType, double t, double dt)
UpdateConductanceOfFiredNeuron	src/neuron.cpp	/^void Neuron::UpdateConductanceOfFiredNeuron(bool is_fire, bool mode, bool function, double t, double dt) {$/;"	f	class:Neuron	signature:(bool is_fire, bool mode, bool function, double t, double dt)
UpdateExcitatoryConductance	include/neuron.h	/^	void UpdateExcitatoryConductance(bool mode, bool function, double t, double dt);$/;"	p	class:Neuron	access:private	signature:(bool mode, bool function, double t, double dt)
UpdateExcitatoryConductance	src/neuron.cpp	/^void Neuron::UpdateExcitatoryConductance(bool mode, bool function, double t, double dt) {$/;"	f	class:Neuron	signature:(bool mode, bool function, double t, double dt)
UpdateInhibitoryConductance	include/neuron.h	/^	void UpdateInhibitoryConductance(bool mode, bool function, double t, double dt);$/;"	p	class:Neuron	access:private	signature:(bool mode, bool function, double t, double dt)
UpdateInhibitoryConductance	src/neuron.cpp	/^void Neuron::UpdateInhibitoryConductance(bool mode, bool function, double t, double dt) {$/;"	f	class:Neuron	signature:(bool mode, bool function, double t, double dt)
UpdateNetworkState	include/network.h	/^	void UpdateNetworkState(double t, double dt);$/;"	p	class:NeuronalNetwork	access:public	signature:(double t, double dt)
UpdateNetworkState	src/network.cpp	/^void NeuronalNetwork::UpdateNetworkState(double t, double dt) {$/;"	f	class:NeuronalNetwork	signature:(double t, double dt)
UpdateNeuronalState	include/neuron.h	/^	double UpdateNeuronalState(double t, double dt);$/;"	p	class:Neuron	access:public	signature:(double t, double dt)
UpdateNeuronalState	include/neuron.h	/^	double UpdateNeuronalState(double t, double dt, vector<double> & inPE, vector<double> & inPI);$/;"	p	class:Neuron	access:public	signature:(double t, double dt, vector<double> & inPE, vector<double> & inPI)
UpdateNeuronalState	src/neuron.cpp	/^double Neuron::UpdateNeuronalState(double t, double dt) {$/;"	f	class:Neuron	signature:(double t, double dt)
UpdateNeuronalState	src/neuron.cpp	/^double Neuron::UpdateNeuronalState(double t, double dt, vector<double> & inPE, vector<double> & inPI) {$/;"	f	class:Neuron	signature:(double t, double dt, vector<double> & inPE, vector<double> & inPI)
UpdatePotential	include/neuron.h	/^	double UpdatePotential(double dt);$/;"	p	class:Neuron	access:private	signature:(double dt)
UpdatePotential	src/neuron.cpp	/^double Neuron::UpdatePotential(double dt) {$/;"	f	class:Neuron	signature:(double dt)
UpdateSystemState	include/network.h	/^void UpdateSystemState(NeuronalNetwork & pre_network, NeuronalNetwork & post_network, vector<vector<bool> > &connectivity_matrix, double t, double dt);$/;"	p	signature:(NeuronalNetwork & pre_network, NeuronalNetwork & post_network, vector<vector<bool> > &connectivity_matrix, double t, double dt)
UpdateSystemState	src/network.cpp	/^void UpdateSystemState(NeuronalNetwork & pre_network, NeuronalNetwork & post_network, vector<vector<bool> > & connectivity_matrix, double t, double dt) {$/;"	f	signature:(NeuronalNetwork & pre_network, NeuronalNetwork & post_network, vector<vector<bool> > & connectivity_matrix, double t, double dt)
V	figures/mi_fig_spikeToLFP/direct/100bins/60s.png	/^		ëÀÂ™ÛWHHà’e/;"	v
V	figures/one-way/direct/significance/mi_01_20_1k.png	/^T«éU•ä5€ò>\\999˙√Û€2335wÓ\\ıÏŸSMõ6u˙sﬁ—˙=pÛz:ÍiùH+˘-Üù;•¨	 ◊]'›xcÈñ„Õ[b7¯Ü‡"œÈŸ¨ß¸j¯iIÇÛV√ …ë,ê⁄∂5ﬂdﬂyß¥wØÙŒ;R√ÜÂø~¸Òx5≠’Tı}ÍyNﬁÍÀ6H≥Ôú-ˇ:˛zdÈ#ez#üïì•òƒò"˜ˇ( m˛∑©_ã~z1ÊEΩπ·Mçºi§Z‘i°ô3•*U$/;"	v
V	figures/two-way/partial/mi_01.png	/^/;"	v
VK	figures/one-way/direct/indirected/mi_direct_00.png	/^/;"	v
W	figures/gauss/mi_gauss_0.5_0.01.png	/^É⁄∑oüÅÄFç•9sÊò./;"	v
W	figures/mi_fig_spikeToLFP/10min/partial/20.png	/^àƒ,/;"	v
W	figures/one-way/partial/mi_partial_10_16m_spikeshift.png	/^>|ò·W/;"	v
WW	figures/one-way/direct/significance/mi_01_30_10k.png	/^6X…ö±QPq)ªY]1WW,ÎO¿F\/bƒE©* ∞4ïÑ"ÑX E%@ê/;"	v
X	figures/net/mi_net_post_01.png	/^		QHHà,X†êêÕò1CíÙá?¸°Ï±∫|›+V¨–à#‘∫uk5k÷L………∫˜ﬁ{u‡¿Å:~ó‡t@/;"	v
X	figures/triple/mi_01.png	/^/;"	v
X	mi_10.png	/^BÄ¿D/;"	v
X	reports/oct31/report.tex	/^			H(X) = \\int p(x)log(p(x)) = \\frac{1}{2}(1+log(2\\pi\\sigma_x^2))$/;"	v
XTWW	reports/Jul20/ll2.png	/^®(2¬8á·<sËS’˚GıSı‘SU}òSwOﬂüÎ‚ÍÈÍ™ßû™n∫Ô∫Î~æèfÜB!ÑBH^»u!ÑB!È°p'ÑB!§/;"	v
XU	figures/mi_fig_spikeToLFP/direct/100bins/60s.png	/^/;"	v
XeTeX	reports/Apr25/report.log	/^This is XeTeX, Version 3.14159265-2.6-0.99992 (TeX Live 2015\/Debian) (preloaded format=xelatex 2017.2.25)  1 MAY 2017 11:01$/;"	v
XeTeX	reports/Apr25/texput.log	/^This is XeTeX, Version 3.14159265-2.6-0.99992 (TeX Live 2015\/Debian) (preloaded format=xelatex 2017.2.25)  17 MAR 2017 10:30$/;"	v
XeTeX	reports/Mar16/report.log	/^This is XeTeX, Version 3.14159265-2.6-0.99992 (TeX Live 2015\/Debian) (preloaded format=xelatex 2017.2.25)  21 MAR 2017 00:58$/;"	v
XeTeX	reports/Mar16/texput.log	/^This is XeTeX, Version 3.14159265-2.6-0.99992 (TeX Live 2015\/Debian) (preloaded format=xelatex 2017.2.25)  17 MAR 2017 10:30$/;"	v
XeTeX	reports/May05/report.log	/^This is XeTeX, Version 3.14159265-2.6-0.99992 (TeX Live 2015\/Debian) (preloaded format=xelatex 2017.2.25)  9 MAY 2017 20:19$/;"	v
Xn	mi_01_10e-6.png	/^ÿXn∑[S¶L—∏q„¥n›∫ù≥h—"Í¿Åí§◊_]˚˜Ôó$Mô2E±±±˙„ˇ®1c∆®WØ^5jîZ∑n≠˝˚˜ÎÕ7ﬂTø~˝ÙÏ≥œ6∫÷Û˝‡?–O~ÚuÔﬁ]-[∂‘ó_~©_|QNßSO>˘§O◊/;"	v
Y	figures/one-way/direct/mi_direct_01.png	/^G/;"	v
Y	figures/one-way/partial/mi_partial_10_16m_spikeshift.png	/^>|ò·W/;"	v
Y	ks2_80.png	/^`!Ù“¸›ºÒÌ~ﬁ_˝k÷/;"	v
Y	reports/Jul20/fig5.png	/^‹YÓÆßÃ‡÷@3+00;ô21.ªNë)  /;"	v
Y	reports/Jul20/report0731_KC.pdf	/^˛˙lÓrò2‹4T6&ÉY¨ ,ìY+÷e¯îìAÆ˚`Á"ÎljF›@.C”z¶Ûπ8˙<BÃC_◊ÿA≠xàQÇâ—u[∏4#Ë\/PPû$/;"	v
Y	reports/Jul20/rl0.png	/^˛¸Á?w€y&œ£†o\/≈≤ ÜVúkj◊îe/;"	v
Y	reports/oct31/report.tex	/^		Calculate the E(X), E(Y), $\\sigma_x$ and $\\sigma_y$.$/;"	v
Z	I.png	/^=|∑/;"	v
Z	figures/mi_fig_spikeToLFP/10min/full/10.png	/^›'4>TÃ>6[8.sò—r]K±˛¬zëîë$rrrƒ’Ë´bÈÈ•¢õO7a0œ@`DıÂ’≈òø∆àù◊wä'©ODñ2K¸yÛO—{ko°Ûµé0Y`"Fˇ5Zú/;"	v
Z	figures/mi_fig_spikeToLFP/direct/4bins/10s.png	/^Z,'µha¨Ñ/;"	v
Z	figures/one-way/direct/indirected/sta_si_00.png	/^2/;"	v
Z	figures/one-way/partial/mi_10.png	/^/;"	v
Z	figures/voltage_1.5kHz.png	/^7Z˙’°à=Vk+€6Ä, ñ¥Äõ9Åî,‚È]cj‰b!‘2–ˆ1©(;¯	qc/;"	v
Z6	figures/one-way/direct/significance/mi_01_40_10k.png	/^à$Mºa¢æﬂ˜ΩNú;·ÚÛÔ?π_m∂U@˝/;"	v
ZB	reports/Jul20/report0731_KC.pdf	/^˛˙lÓrò2‹4T6&ÉY¨ ,ìY+÷e¯îìAÆ˚`Á"ÎljF›@.C”z¶Ûπ8˙<BÃC_◊ÿA≠xàQÇâ—u[∏4#Ë\/PPû$/;"	v
_	figures/mi_fig_spikeToLFP/direct/80bins/10s.png	/^P*/;"	v
_	figures/one-way/direct/significance/mi_01_30_100k.png	/^dÜ233}∆”””ïîîTÆ6˙†˙†˙†˙†è`Ïc‡¿ÅäééVJJJπm®èiö¶”E¿íùù≠òòeeeq›t/;"	v
_	figures/one-way/partial/mi_partial_10_16m_spikeshift.png	/^/;"	v
_	reports/Mar07/Reports.pptx	/^t`£ÖN¬ï1Í!:]A≈u$€ìÀ∫‚∆6Î%Q<˝Õó@ÿtzER)31Mép1ˇ9_ó&¯ºµá;%ña±◊LïÑE’ƒ7«…`T˘`ƒv“Ù«‘PÍGA\\©≤Hπ±˝d#≤GkôÏ◊Ÿ»vå^Jø±éÃ–Ùü`˜√ûÄ∫» ∏Âµ˘Œ+;ä(eà™A€∏vlÙt¶TôÁE$/;"	v
_	spike_cum_2.png	/^7ì_µüÈ—øø=Á„À\/•∫uù©Õ-ú'&2Å”òÑœcÖ	ôò»ƒD&°»√N&+W⁄Ã íﬁ}W$/;"	v
_GET_CONFIG_H_	include/get-config.h	10;"	d
_IFNET_CONNECTIVITY_MATRIX_H_	include/connectivity_matrix.h	9;"	d
_IFNET_LFP_H_	include/lfp.h	8;"	d
_IFNET_MI_H_	include/mi_adaptive.h	8;"	d
_IFNET_MI_UNIFORM_H_	include/mi_uniform.h	8;"	d
_IFNET_NETWORK_H_	include/network.h	8;"	d
_IFNET_SPIKE_H_	include/spike.h	2;"	d
_IFNET_STATIONARY_H_	include/stationary.h	2;"	d
_IFNET_SURRAGATE_TEST_H_	include/surrogate.h	3;"	d
_IFNET_VECMANIP_H_	include/vecmanip.h	2;"	d
_IO_H_	include/io.h	8;"	d
_MULTI_NETWORK_SIMULATION_SINGLEIF_H_	include/neuron.h	8;"	d
activities	doc/thesis-proposal.md	/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$/;"	v
activities	tags	/^ECoG	doc\/thesis-proposal.md	\/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$\/;"	v$/;"	v
activities	tags	/^activities	doc\/thesis-proposal.md	\/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$\/;"	v$/;"	v
activities	tags	/^magnetoencephalography	doc\/thesis-proposal.md	\/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$\/;"	p	file:	signature:(MEG)$/;"	v
activities	tags	/^techniques	doc\/thesis-proposal.md	\/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$\/;"	v$/;"	v
alpha$	reports/oct31/report.tex	/^	where $\\epsilon_n$ and $\\eta_n$ are independent random variables with normal distribution, and $\\alpha$, $\\beta$ and $\\xi_{xy}$ are the self interaction strength and cross interaction strength between \\{X\\} and \\{Y\\}, respectively. $f(X)$ is a functional mapping, which could be either linear or nonlinear.$/;"	v
analysis	doc/thesis-proposal.md	/^Combining with experimental data set, test the method of TDMI analysis, and compare it with those based on simulating data;$/;"	v
analysis	reports/Apr25/report.tex	/^	% 		\\item The title illustrates the index of target neuron, the time range of its data adapted in TDMI analysis, and the detailed parameter applied in TDMI calculation;$/;"	v
analysis	reports/Mar16/report.tex	/^			\\item The title illustrates the index of target neuron, the time range of its data adapted in TDMI analysis, and the detailed parameter applied in TDMI calculation;$/;"	v
analysis	reports/oct31/report.tex	/^		In order to reduce the difficulty of analysis, I decided to start with two neuron system raster than one to multi neuronal system. By increasing the length of simulation period ten times, we can roughly simulate cases which is equivilant to one to ten neurons interaction neglecting spatial distribution of neurons.$/;"	v
analysis	tags	/^data	doc\/thesis-proposal.md	\/^Combining with experimental data set, test the method of TDMI analysis, and compare it with those based on simulating data;$\/;"	v$/;"	v
answer	doc/research-log.md	/^It appears that they cannot generate the same answer;$/;"	v
as	reports/oct31/report.tex	/^		By substituting them into the expression of mutual information, we can obtain the expression of mutual information in the bivariate Gaussian distributed case as,$/;"	v
away	reports/oct31/report.tex	/^			In Figure \\ref{fig:lfp_auto}, the mean and standard deviation of signal reach their stationary state, respectively. Therefore, I take data in the first 40 milliseconds away, and calculate its autocovariance. The length of autocorrelation is around 20 milliseconds.$/;"	v
b	reports/Apr25/texput.log	/^ 0i,0n,0p,28b,6s stack positions out of 5000i,500n,10000p,200000b,80000s$/;"	v
b	reports/Mar16/texput.log	/^ 0i,0n,0p,28b,6s stack positions out of 5000i,500n,10000p,200000b,80000s$/;"	v
b	reports/oct31/report.log	/^ 42i,8n,40p,395b,495s stack positions out of 5000i,500n,10000p,200000b,80000s$/;"	v
bL	figures/one-way/direct/mi_100_0001.png	/^ 3/;"	v
backwards	reports/Apr25/report.tex	/^			\\item Spiking signals generatd by one of those two network, which called 'loop 1' or pre-network, can transmit to the other network, which I called it 'loop 2' or post-network; and the spiking information flow cannot transmit backwards;$/;"	v
backwards	reports/Mar16/report.tex	/^			\\item Spiking signals generatd by one of those two network, which called 'loop 1' or pre-network, can transmit to the other network, which I called it 'loop 2' or post-network; and the spiking information flow cannot transmit backwards;$/;"	v
bidirected	doc/research-log.md	/^- [x] different types of connection; one way and bidirected;$/;"	v
bin2int	test/entropy_binary.cpp	/^void bin2int(vector<bool>& bdata, vector<int>& idata, int k) {$/;"	f	signature:(vector<bool>& bdata, vector<int>& idata, int k)
bin_num_1	pys/pck_test.py	/^bin_num_1 = 2$/;"	v
c	doc/research-log.md	/^Finished lfp in c++;$/;"	v
c	figures/dt/direct/mi_05.png	/^ÖBº|˘≤Õs≠]ªV¡a√·™§"«¨WØ^bó.]lû'22≤Z5BØ»q+Í‹πsbpp∞ÿ≤eK1''GÜw‡^7n,vÔﬁ›Æ¸∑ﬂ~AW≠Z%CTû%==]¨WØû)¶ßßÀé[{˛˘Á≈òòõ¸è?˛∏ÿ¥iS£r_ç7v¯}¯›wﬂâÇ àÎ◊Øó)2˜6yÚdQ´’ä©©©6Â˝Î_E≠V+fdd»ôgb/;"	v
c	figures/dt/partial/mi_0125.png	/^!ëHpË–°∫cJ•UUUZ›∑˛(«°CáêííÇ'NËØp""""≤z (33/;"	v
c	figures/robust/full/mi_0015.png	/^/;"	v
c	figures/snr.png	/^7lP¿ëx¡C8ˆ(Hàr[ áΩŒàU—ßZñª\/˚†◊˘@•åÚ¥Æ™Ä≥ò_∫UÄc‡{ÛÂ≥ÛáâÆqÖIÔm|u±VeºÓ /;"	v
c	ks2_80.png	/^¯˙˙ÚƒOpÒ‚EÆ^Ωz›˜ÑÜÜfñ?Ä-Z`∑€9tËœ‘≠[ã≈í˘}PPPñSº€∑oß[∑nÑÜÜ‚ÎÎÀΩ˜ﬁ@lllÆ~O˘ì·G/;"	v
calculation	reports/Apr25/report.tex	/^	% 		\\item The title illustrates the index of target neuron, the time range of its data adapted in TDMI analysis, and the detailed parameter applied in TDMI calculation;$/;"	v
calculation	reports/Mar16/report.tex	/^			\\item The title illustrates the index of target neuron, the time range of its data adapted in TDMI analysis, and the detailed parameter applied in TDMI calculation;$/;"	v
cases	doc/research-log.md	/^	3. for neural networks, the results diverges at some cases;$/;"	v
cases	doc/research-log.md	/^There is a huge difference between histogram between these two cases;$/;"	v
cases	reports/Apr25/report.tex	/^		ANALYSIS: Based on this comparsion, we can observe weak MI signals in \\#5 neuron and \\#43 neuron cases, while find nothing in \\#45 neuron case. Since all these three neurons are connected with identical neuron in loop-1, we make an assumption that such a difference results from different dynamical states that neurons have.$/;"	v
cc1	reports/Jul20/sp1.png	/^|wºHÏ(Dí≈¬ùàÃBiu=¯Ë0>9òè#zcÁ∑!¿√AÏXD&’‹*”÷vêØ€ÒÙùËÈÑUˇÕÑ^ }?D"b·ND¢;zÓ2ÓyÁ+∏åW¢BÒÊÏ·∞∑Qàã»‰3Ómˆ∏KªÿuµW·°[˚‡bµiÖb«!í$Ó$]“~£´æ¸≠/;"	v
cdf2d	pys/ks2.py	/^def cdf2d(H, xedges, yedges, orient = (False, False)):$/;"	p	file:	signature:(H, xedges, yedges, orient = (False, False))
cdf2d	pys/pck_test.py	/^def cdf2d(H, xedges, yedges, orient = (False, False)):$/;"	p	file:	signature:(H, xedges, yedges, orient = (False, False))
checked	doc/research-log.md	/^*Data has been generated, their raster plots are ready to be checked;*$/;"	v
checked	tags	/^checked	doc\/research-log.md	\/^*Data has been generated, their raster plots are ready to be checked;*$\/;"	v$/;"	v
clustering_coefficient_	include/connectivity_matrix.h	/^	vector<double> clustering_coefficient_; \/\/ clustering coefficient of each neuron;$/;"	m	class:ConnectivityMatrix	access:private
clusters	reports/Apr25/report.tex	/^	% In the simulating system, \\#20 neuron is excitatory and \\#47 neuron is inhibitory. Under the driving of feedforward inputs with same average rate, which is 1500 Hz, their average firing rate from 1s to 10s is 14 Hz and 12 Hz respectively. However, comparing the TDMI signal which they interact with their directly connected neuron clusters, TDMI in excitatory cases do indicate the neuronal interactions and the direction of information flow, while in inhibitory cases it fails.$/;"	v
clusters	reports/Mar16/report.tex	/^	In the simulating system, \\#20 neuron is excitatory and \\#47 neuron is inhibitory. Under the driving of feedforward inputs with same average rate, which is 1500 Hz, their average firing rate from 1s to 10s is 14 Hz and 12 Hz respectively. However, comparing the TDMI signal which they interact with their directly connected neuron clusters, TDMI in excitatory cases do indicate the neuronal interactions and the direction of information flow, while in inhibitory cases it fails.$/;"	v
codes	doc/research-log.md	/^	1. as for numerical convergence, all cases obey 4th order numerical convergence, including single neuron case and neural networks, for both old and new codes;$/;"	v
codes	tags	/^networks	doc\/research-log.md	\/^	1. as for numerical convergence, all cases obey 4th order numerical convergence, including single neuron case and neural networks, for both old and new codes;$\/;"	v$/;"	v
comp	src/lfp.cpp	/^bool comp(const int x, const int y) {$/;"	f	signature:(const int x, const int y)
compPoisson	src/neuron.cpp	/^bool compPoisson(const Spike & x, const Spike & y) {$/;"	f	signature:(const Spike & x, const Spike & y)
comparsion	reports/Apr25/report.tex	/^		ANALYSIS: Based on this comparsion, we can observe weak MI signals in \\#5 neuron and \\#43 neuron cases, while find nothing in \\#45 neuron case. Since all these three neurons are connected with identical neuron in loop-1, we make an assumption that such a difference results from different dynamical states that neurons have.$/;"	v
compiler	makefile	1;"	d	file:
condition	reports/Apr25/report.tex	/^	% 		\\item The blue line indicates the TDMI of original spike train and local field potential, and the green line indicates that of randomly swapped spike train and local field potential under the same testing condition;$/;"	v
condition	reports/Mar16/report.tex	/^			\\item The blue line indicates the TDMI of original spike train and local field potential, and the green line indicates that of randomly swapped spike train and local field potential under the same testing condition;$/;"	v
conductance	reports/Apr25/report.tex	/^			\\item In the following results, I choose neuronal data, including membrane potential and different component of membrane conductance, from 1000 to 10000 ms to generate local field potential, which can prevent the disturbance from the transition process of network dynamics at the first one second.$/;"	v
conductance	reports/Mar16/report.tex	/^			\\item In the following results, I choose neuronal data, including membrane potential and different component of membrane conductance, from 1000 to 10000 ms to generate local field potential, which can prevent the disturbance from the transition process of network dynamics at the first one second.$/;"	v
connecting_density_	include/connectivity_matrix.h	/^	int connecting_density_; \/\/ number of connection on one side of each neuron;$/;"	m	class:ConnectivityMatrix	access:private
connecting_density_	include/network.h	/^	int connecting_density_;$/;"	m	class:NeuronalNetwork	access:private
connectivity	doc/research-log.md	/^1. 100 neuron; 80% excitatory; 10% interloop connectivity; no rewiring; (neuron type seed 1, 2; Poisson seed, 5, 6, interloop seed 100);$/;"	v
connectivity	tags	/^connectivity	doc\/research-log.md	\/^1. 100 neuron; 80% excitatory; 10% interloop connectivity; no rewiring; (neuron type seed 1, 2; Poisson seed, 5, 6, interloop seed 100);$\/;"	v$/;"	v
connectivity	tags	/^seed	doc\/research-log.md	\/^1. 100 neuron; 80% excitatory; 10% interloop connectivity; no rewiring; (neuron type seed 1, 2; Poisson seed, 5, 6, interloop seed 100);$\/;"	v$/;"	v
connectivity_matrix_	include/network.h	/^	ConnectivityMatrix connectivity_matrix_;$/;"	m	class:NeuronalNetwork	access:private
convergence	doc/research-log.md	/^	1. as for numerical convergence, all cases obey 4th order numerical convergence, including single neuron case and neural networks, for both old and new codes;$/;"	v
convergence	doc/research-log.md	/^They both obey fourth order convergence, while they respond differently for same input;$/;"	v
convergence	tags	/^networks	doc\/research-log.md	\/^	1. as for numerical convergence, all cases obey 4th order numerical convergence, including single neuron case and neural networks, for both old and new codes;$\/;"	v$/;"	v
correlation	doc/research-log.md	/^	> Test different dynamical region: different pattern of inputs as well as different portion between feedforward and interneuron correlation;$/;"	v
d	figures/nn0050/n2i_0050.png	/^/;"	v
d	figures/robust/partial/mi_0015.png	/^EGGõ?ænΩıVMö4…\/Ô%™è/;"	v
d	mi_01_10e-6.png	/^ÿXn∑[S¶L—∏q„¥n›∫ù≥h—"Í¿Åí§◊_]˚˜Ôó$Mô2E±±±˙„ˇ®1c∆®WØ^5jîZ∑n≠˝˚˜ÎÕ7ﬂTø~˝ÙÏ≥œ6∫÷Û˝‡?–O~ÚuÔﬁ]-[∂‘ó_~©_|QNßSO>˘§O◊/;"	v
d	mi_10.png	/^/;"	v
d	obj/main_net.o	/^ELF/;"	v
dO	linear_10_length.png	/^R¥ıeqÈØ*“JóVPQAD‘˙R∞ZêæuAE© *°V£HXë≈ ÎdO&ô,≥˛˛ò%â!dÊú3sÆãK3ô9ÛÑ‰ŒÛ<ﬂÔ#X≠V+àààà»k(ƒ/;"	v
data	doc/progress-log.md	/^- Week 1: Accomplish the thesis proposal; Read Papers to understand the electrophysiological mechanism of local field potential in different experimental setups; Define the first version of biophysical model (including its related network structure) and applied it to simulating neuronal data;$/;"	v
data	doc/thesis-proposal.md	/^- Week 1: Accomplish the thesis proposal; Read Papers to understand the electrophysiological mechanism of local field potential in different experimental setups; Define the first version of biophysical model (including its related network structure) and applied it to simulating neuronal data;$/;"	v
data	doc/thesis-proposal.md	/^Combining with experimental data set, test the method of TDMI analysis, and compare it with those based on simulating data;$/;"	v
data	reports/Apr25/report.tex	/^			\\item In the following results, I choose neuronal data, including membrane potential and different component of membrane conductance, from 1000 to 10000 ms to generate local field potential, which can prevent the disturbance from the transition process of network dynamics at the first one second.$/;"	v
data	reports/Mar16/report.tex	/^			\\item In the following results, I choose neuronal data, including membrane potential and different component of membrane conductance, from 1000 to 10000 ms to generate local field potential, which can prevent the disturbance from the transition process of network dynamics at the first one second.$/;"	v
data	tags	/^data	doc\/progress-log.md	\/^- Week 1: Accomplish the thesis proposal; Read Papers to understand the electrophysiological mechanism of local field potential in different experimental setups; Define the first version of biophysical model (including its related network structure) and applied it to simulating neuronal data;$\/;"	v$/;"	v
data	tags	/^data	doc\/thesis-proposal.md	\/^- Week 1: Accomplish the thesis proposal; Read Papers to understand the electrophysiological mechanism of local field potential in different experimental setups; Define the first version of biophysical model (including its related network structure) and applied it to simulating neuronal data;$\/;"	v$/;"	v
data	tags	/^data	doc\/thesis-proposal.md	\/^Combining with experimental data set, test the method of TDMI analysis, and compare it with those based on simulating data;$\/;"	v$/;"	v
defense	doc/progress-log.md	/^- Week 16 (Jun 7): Final thesis defense;$/;"	v
defense	doc/thesis-proposal.md	/^- Week 16 (Jun 7): Final thesis defense;$/;"	v
defense	tags	/^defense	doc\/thesis-proposal.md	\/^- Week 16 (Jun 7): Final thesis defense;$\/;"	v$/;"	v
domain	doc/thesis-proposal.md	/^In information theory, mutual information(MI) is used to quantify the relationship between two sets of data. In principle, the value of MI is invariant under homeomorphic transformation, and comparing with cross-correlation, it has a better performance dealing with data under nonlinear mapping. And in neural information analysis, it is a great tool for identify neuron-neuron correlation based on neuronal signal recording. And somehow, it would be a good tool to investigate the dynamic of single neuron and its related local field potential, which would be covered in this work. In addition, by adding time-delays onto MI analysis, we can observe the change MI in time domain, which usually called time-delay mutual information(TDMI). In this case, we can observe the direction of information flow in different area in neural network. Thus, we can somehow reveal the network structure based on available experimental. And this is the key purpose of this project.$/;"	v
domain	tags	/^potential	doc\/thesis-proposal.md	\/^In information theory, mutual information(MI) is used to quantify the relationship between two sets of data. In principle, the value of MI is invariant under homeomorphic transformation, and comparing with cross-correlation, it has a better performance dealing with data under nonlinear mapping. And in neural information analysis, it is a great tool for identify neuron-neuron correlation based on neuronal signal recording. And somehow, it would be a good tool to investigate the dynamic of single neuron and its related local field potential, which would be covered in this work. In addition, by adding time-delays onto MI analysis, we can observe the change MI in time domain, which usually called time-delay mutual information(TDMI). In this case, we can observe the direction of information flow in different area in neural network. Thus, we can somehow reveal the network structure based on available experimental. And this is the key purpose of this project.$\/;"	v$/;"	v
driven_type_	include/neuron.h	/^	bool driven_type_; \/\/ True for external Poisson driven, false for internal Poisson driven;$/;"	m	class:Neuron	access:private
drr	mi_01_10e-6.png	/^X„drr◊=±≤6l∞ ˙ıµeÛfÿ∫ı/;"	v
dt	doc/Aug01.md	/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$/;"	v
dt	tags	/^dt	doc\/Aug01.md	\/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$\/;"	v$/;"	v
dt	tags	/^sequence	doc\/Aug01.md	\/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$\/;"	v$/;"	v
dt	tags	/^variable	doc\/Aug01.md	\/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$\/;"	v$/;"	v
dz	reports/Jul20/report0731_KC.pdf	/^•Í%[$/;"	v
e	figures/dt/full/mi_0125.png	/^/;"	v
e	figures/mi_fig_spikeToLFP/10min/direct/2.png	/^&@ÿôÃÔè€âÑÑêefÓù‰˘8á3Âﬁ;˜æ3ıêºÚ˘º?õ€Ìv/;"	v
e	figures/net/mi_net_cross_00.png	/^/;"	v
e	figures/one-way/direct/indirected/mi_sv_direct_00.png	/^/;"	v
e	figures/one-way/direct/significance/mi_01_10_10k.png	/^/;"	v
e	figures/one-way/direct/significance/mi_01_40_1k.png	/^/;"	v
e	ks2_80.png	/^¯˙˙ÚƒOpÒ‚EÆ^Ωz›˜ÑÜÜfñ?Ä-Z`∑€9tËœ‘≠[ã≈í˘}PPPñSº€∑oß[∑nÑÜÜ‚ÎÎÀΩ˜ﬁ@lllÆ~O˘ì·G/;"	v
eY	figures/gauss/mi_gauss_0.5_0.01.png	/^/;"	v
edges1	pys/ks2.py	/^    H1, edges1, edges2 = np.histogram2d(X[0], X[1], bins = [bin_num_1, bin_num_2], range = [[min1, max1], [min2, max2]], normed = True)$/;"	v
edges1	pys/ks2.py	/^    H2, edges1, edges2 = np.histogram2d(Y[0], Y[1], bins = [bin_num_1, bin_num_2], range = [[min1, max1], [min2, max2]], normed = True)$/;"	v
edges1	pys/pck_test.py	/^    H1, edges1, edges2 = np.histogram2d(X[0], X[1], bins = [bin_num_1, bin_num_2], range = [[min1, max1], [min2, max2]], normed = True)$/;"	v
edges1	pys/pck_test.py	/^    H2, edges1, edges2 = np.histogram2d(Y[0], Y[1], bins = [bin_num_1, bin_num_2], range = [[min1, max1], [min2, max2]], normed = True)$/;"	v
edges2	pys/ks2.py	/^    H1, edges1, edges2 = np.histogram2d(X[0], X[1], bins = [bin_num_1, bin_num_2], range = [[min1, max1], [min2, max2]], normed = True)$/;"	v
edges2	pys/ks2.py	/^    H2, edges1, edges2 = np.histogram2d(Y[0], Y[1], bins = [bin_num_1, bin_num_2], range = [[min1, max1], [min2, max2]], normed = True)$/;"	v
edges2	pys/pck_test.py	/^    H1, edges1, edges2 = np.histogram2d(X[0], X[1], bins = [bin_num_1, bin_num_2], range = [[min1, max1], [min2, max2]], normed = True)$/;"	v
edges2	pys/pck_test.py	/^    H2, edges1, edges2 = np.histogram2d(Y[0], Y[1], bins = [bin_num_1, bin_num_2], range = [[min1, max1], [min2, max2]], normed = True)$/;"	v
ef	figures/mi_fig_spikeToLFP/10min/direct/2.png	/^&@ÿôÃÔè€âÑÑêefÓù‰˘8á3Âﬁ;˜æ3ıêºÚ˘º?õ€Ìv/;"	v
effect	doc/research-log.md	/^    - calculate the clustering coefficient and the mean path of the neuorns in their own network as well as across networks; **The basic found is that in the current simulation test, neurons contribute to the local field potential have no self clustered effect, which means that each neuron locate in its own neuron cluster in post network**$/;"	v
effect	tags	/^test	doc\/research-log.md	\/^    - calculate the clustering coefficient and the mean path of the neuorns in their own network as well as across networks; **The basic found is that in the current simulation test, neurons contribute to the local field potential have no self clustered effect, which means that each neuron locate in its own neuron cluster in post network**$\/;"	v$/;"	v
electroencephalography	doc/thesis-proposal.md	/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$/;"	p	file:	signature:(EEG)
electroencephalography	tags	/^ECoG	doc\/thesis-proposal.md	\/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$\/;"	v$/;"	p	file:	signature:(EEG)
electroencephalography	tags	/^activities	doc\/thesis-proposal.md	\/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$\/;"	v$/;"	p	file:	signature:(EEG)
electroencephalography	tags	/^magnetoencephalography	doc\/thesis-proposal.md	\/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$\/;"	p	file:	signature:(MEG)$/;"	p	file:	signature:(EEG)
electroencephalography	tags	/^techniques	doc\/thesis-proposal.md	\/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$\/;"	v$/;"	p	file:	signature:(EEG)
excitatory	doc/research-log.md	/^	1. 100 neuron simulation with identical input and network structure: pure excitatory driven; 80% neuron are excitatory; 10% connecting probability between two loop;$/;"	v
excitatory	reports/Mar16/report.tex	/^			\\item 80\\% of neurons are excitatory, and 20\\% of them are inhibitory; both kinds of neurons are random located in networks;$/;"	v
excitatory	tags	/^excitatory	doc\/research-log.md	\/^	1. 100 neuron simulation with identical input and network structure: pure excitatory driven; 80% neuron are excitatory; 10% connecting probability between two loop;$\/;"	v$/;"	v
excitatory_conductance_	include/neuron.h	/^	double excitatory_conductance_; \/\/ Stored excitatory conductivity;$/;"	m	class:Neuron	access:private
excitatory_conductance_1_	include/neuron.h	/^	double excitatory_conductance_1_; \/\/ temporal storage of excitatory conductance;$/;"	m	class:Neuron	access:private
excitatory_conductance_2_	include/neuron.h	/^	double excitatory_conductance_2_;$/;"	m	class:Neuron	access:private
excitatory_conductance_3_	include/neuron.h	/^	double excitatory_conductance_3_;$/;"	m	class:Neuron	access:private
excitatory_poisson_rate_	include/neuron.h	/^	double excitatory_poisson_rate_;$/;"	m	class:Neuron	access:private
excitatory_reversal_potential_	include/neuron.h	/^	double excitatory_reversal_potential_;$/;"	m	class:Neuron	access:private
external_excitatory_inputs_	include/network.h	/^	vector<vector<double> > external_excitatory_inputs_; \/\/ temp storage of external Poisson input;$/;"	m	class:NeuronalNetwork	access:private
external_inhibitory_inputs_	include/network.h	/^	vector<vector<double> > external_inhibitory_inputs_;$/;"	m	class:NeuronalNetwork	access:private
f	figures/gauss/20.png	/^êöÚÚÚºr‹a√Üi¬Ñ	ö;wÆé?ÆﬁΩ{+++KáVff¶{ø¥¥4egg´®®H›ªwóT ÒÒÒö:u™ﬁˇ}EFFjÂ ï™™™“‚≈ã›c{˜Ó≠Iì&)++KgŒú—≠∑ﬁ™‚‚b˝˛˜øWxx∏~¯aØº7/;"	v
f	figures/gauss/mi_gauss_0.5_0.5_0.9_10_logy.png	/^Æè9R∑›võ¥ˇ~U¨X±P¶‰‰d-_æ\\›ªw\/t}‰»ëö3géfÃò°;Ôº≥–c≥fÕRnnn±≈	fP@/;"	v
f	figures/mi_fig_spikeToLFP/direct/100bins/20s.png	/^Øô1cÜ6lXÍXRRíííí\\Æ/;"	v
feedforward_excitatory_intensity_	include/neuron.h	/^	double feedforward_excitatory_intensity_;$/;"	m	class:Neuron	access:private
feedforward_inhibitory_intensity_	include/neuron.h	/^	double feedforward_inhibitory_intensity_;$/;"	m	class:Neuron	access:private
finished	doc/research-log.md	/^old version finished;$/;"	v
first	doc/research-log.md	/^* Apply new codes first;$/;"	v
flow	reports/Apr25/report.tex	/^	% In the simulating system, \\#20 neuron is excitatory and \\#47 neuron is inhibitory. Under the driving of feedforward inputs with same average rate, which is 1500 Hz, their average firing rate from 1s to 10s is 14 Hz and 12 Hz respectively. However, comparing the TDMI signal which they interact with their directly connected neuron clusters, TDMI in excitatory cases do indicate the neuronal interactions and the direction of information flow, while in inhibitory cases it fails.$/;"	v
flow	reports/Mar16/report.tex	/^	In the simulating system, \\#20 neuron is excitatory and \\#47 neuron is inhibitory. Under the driving of feedforward inputs with same average rate, which is 1500 Hz, their average firing rate from 1s to 10s is 14 Hz and 12 Hz respectively. However, comparing the TDMI signal which they interact with their directly connected neuron clusters, TDMI in excitatory cases do indicate the neuronal interactions and the direction of information flow, while in inhibitory cases it fails.$/;"	v
format	reports/Apr25/texput.log	/^This is XeTeX, Version 3.14159265-2.6-0.99992 (TeX Live 2015\/Debian) (preloaded format=xelatex 2017.2.25)  17 MAR 2017 10:30$/;"	v
format	reports/Mar16/texput.log	/^This is XeTeX, Version 3.14159265-2.6-0.99992 (TeX Live 2015\/Debian) (preloaded format=xelatex 2017.2.25)  17 MAR 2017 10:30$/;"	v
format	reports/oct31/report.log	/^This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017\/W32TeX) (preloaded format=pdflatex 2017.9.17)  22 JAN 2018 19:52$/;"	v
format	tags	/^!_TAG_FILE_FORMAT	2	\/extended format; --format=1 will not append ;" to lines\/$/;"	v
foundings	doc/research-log.md	/^Build Python script to verify those three foundings;$/;"	v
function	include/neuron.h	/^	bool function; \/\/ function of spike: true for excitation, false for inhibition;$/;"	m	struct:Spike	access:public
function	reports/oct31/report.tex	/^		I will mainly discussed the first order correlation between $X_n$ and $Y_{n+1}$, connected by linear function, i.e. $f(X) = X$ is a linear function, in terms of mutual information.$/;"	v
functions	doc/research-log.md	/^Build neuronal selection functions;$/;"	v
g	figures/one-way/direct/significance/mi_01_30_100k.png	/^	·#l0„›s°¯¯xÜ°ÙÙÙ≤±ÑÑ-^ºÿgøååÜQÓ˘………ö7oûœXvv∂√–ﬁΩ{}∆SSSïññÊ3ñõõ+√0îìì„3>gŒç;÷g¨††@Üa(33”g<==]IIIÂj£˙†˙†è∫◊¸√„Òî˝©/;"	v
g_m	doc/estimate_intensity.m	/^g_m = 5e-2;$/;"	v
g_m_	include/neuron.h	/^	double g_m_; \/\/ Normalized membrane conductance;$/;"	m	class:Neuron	access:private
ge	include/neuron.h	/^	double ge; \/\/ excitatory conductance;$/;"	m	struct:NeuronalState	access:public
generate	doc/research-log.md	/^	What kind of dynamical pattern that my network can generate;$/;"	v
generated	doc/research-log.md	/^*Data has been generated, their raster plots are ready to be checked;*$/;"	v
gi	include/neuron.h	/^	double gi; \/\/ inhibitory conductance;$/;"	m	struct:NeuronalState	access:public
github	doc/research-log.md	/^Upload cods to github;$/;"	v
h	figures/gauss/mi_gauss_0.5_0.01.png	/^ÉA”ExEaa°Ü™h√Ü/;"	v
h	figures/mi_fig_spikeToLFP/direct/10bins/5s.png	/^œi¬MWi„<iﬁ<ÈÂó+ø~h«°∫Á√{tÙÃQÖ5	3ÆP ]‰öV◊®y„ÊJ≥•@P#L¡∫å¨¨,©®®HÖÖÖ*,,,˘sÒh«‚≈ãÀ|],44TØø˛∫rrrîüüØuÎ÷±∂@ΩìôÈ¸L/;"	v
h	reports/Jul20/rl3.png	/^>eú∂Ã êè;˜Ú/;"	v
h3	bin/mi_bd_2bins.out	/^ELF/;"	v
i	I.png	/^=|∑/;"	v
i	figures/triple/mi_01.png	/^/;"	v
i	mi_10.png	/^Áœ∑Üg/;"	v
i	reports/Apr25/texput.log	/^ 0i,0n,0p,28b,6s stack positions out of 5000i,500n,10000p,200000b,80000s$/;"	v
i	reports/Mar16/texput.log	/^ 0i,0n,0p,28b,6s stack positions out of 5000i,500n,10000p,200000b,80000s$/;"	v
i	reports/oct31/report.log	/^ 42i,8n,40p,395b,495s stack positions out of 5000i,500n,10000p,200000b,80000s$/;"	v
identical	doc/research-log.md	/^	2. for single neuron case, results between old and new codes are identical;$/;"	v
identical	reports/Apr25/report.tex	/^			\\item The intensity of neuron-neuron interaction is identical to the intensity of feedforward inputs; And the effect of single neuron towards the change of conductance of ion channel for both excitatory and inhibitory are identical, too.$/;"	v
identical	reports/Mar16/report.tex	/^			\\item The intensity of neuron-neuron interaction is identical to the intensity of feedforward inputs; And the effect of single neuron towards the change of conductance of ion channel for both excitatory and inhibitory are identical, too.$/;"	v
identical	tags	/^identical	doc\/research-log.md	\/^	2. for single neuron case, results between old and new codes are identical;$\/;"	v$/;"	v
inconsistancy	doc/research-log.md	/^	> Test and compare old code and new code again to find the fact which leads to their inconsistancy; [DONE]$/;"	v
index	include/lfp.h	/^	int index;$/;"	m	struct:neuron_type	access:public
index	include/network.h	/^	int index;	\/\/ The sequence order of spikes within single time interval;$/;"	m	struct:SpikeElement	access:public
index	include/neuron.h	/^	int index; \/\/ index of neuron in loop lattice;$/;"	m	struct:NeuronalState	access:public
index_	include/neuron.h	/^	int index_; \/\/ index of neuron in loop lattice;$/;"	m	class:Neuron	access:private
inhibitory	doc/research-log.md	/^	4. #65 neurons connected with 10 neurons: 6 are excitatory, 4 are inhibitory;$/;"	v
inhibitory	reports/Mar16/report.tex	/^			\\item 80\\% of neurons are excitatory, and 20\\% of them are inhibitory; both kinds of neurons are random located in networks;$/;"	v
inhibitory	tags	/^inhibitory	doc\/research-log.md	\/^	4. #65 neurons connected with 10 neurons: 6 are excitatory, 4 are inhibitory;$\/;"	v$/;"	v
inhibitory_conductance_	include/neuron.h	/^	double inhibitory_conductance_; \/\/ Stored inhibitory conductivity;$/;"	m	class:Neuron	access:private
inhibitory_conductance_1_	include/neuron.h	/^	double inhibitory_conductance_1_; \/\/ temporal storage of inhibitory conductance;$/;"	m	class:Neuron	access:private
inhibitory_conductance_2_	include/neuron.h	/^	double inhibitory_conductance_2_;$/;"	m	class:Neuron	access:private
inhibitory_conductance_3_	include/neuron.h	/^	double inhibitory_conductance_3_;$/;"	m	class:Neuron	access:private
inhibitory_poisson_rate_	include/neuron.h	/^	double inhibitory_poisson_rate_;$/;"	m	class:Neuron	access:private
inhibitory_reversal_potential_	include/neuron.h	/^	double inhibitory_reversal_potential_;$/;"	m	class:Neuron	access:private
input	doc/research-log.md	/^*NOTE: test old code with stronger input, test new code with less input;*$/;"	v
input	doc/research-log.md	/^They both obey fourth order convergence, while they respond differently for same input;$/;"	v
input	tags	/^input	doc\/research-log.md	\/^*NOTE: test old code with stronger input, test new code with less input;*$\/;"	v$/;"	v
input	tags	/^input	doc\/research-log.md	\/^They both obey fourth order convergence, while they respond differently for same input;$\/;"	v$/;"	v
interaction_delay_	include/network.h	/^	double interaction_delay_;$/;"	m	class:NeuronalNetwork	access:private
interneuronal_synaptic_intensity_	include/neuron.h	/^	double interneuronal_synaptic_intensity_;$/;"	m	class:Neuron	access:private
is	reports/Apr25/report.tex	/^			\\item Neuronal connecting density is 3, which means that each neuron directly connects with 6 other neurons within its own loop;$/;"	v
j	figures/one-way/direct/indirected/sta_sv_00.png	/^î§€nì∆ç3F:Í‘1∑Fo‡pHNßtÈí±$1Ä¬¨&Möò]P$ /;"	v
j	figures/two-way/partial/mi_01.png	/^/;"	v
j	ks2_80.png	/^`!Ù“¸›ºÒÌ~ﬁ_˝k÷/;"	v
j	ks2_80.png	/^¯˙˙ÚƒOpÒ‚EÆ^Ωz›˜ÑÜÜfñ?Ä-Z`∑€9tËœ‘≠[ã≈í˘}PPPñSº€∑oß[∑nÑÜÜ‚ÎÎÀΩ˜ﬁ@lllÆ~O˘ì·G/;"	v
j	mi_10.png	/^Áœ∑Üg/;"	v
jkku	figures/one-way/partial/mi_partial_10_16m_currentshift.png	/^ÈÕ7•?ˇŸΩ=CNá/;"	v
k	figures/gauss/mi_gauss_0.5_0.5.png	/^æ÷`æ÷`&⁄Â[é/;"	v
k	figures/i0075/full/fig.png	/^/;"	v
k	figures/mi_fig_spikeToLFP/10min/direct/500.png	/^ØŸÌvEDDË·√æ)0/;"	v
k	figures/mi_fig_spikeToLFP/10min/full/200.png	/^/;"	v
k	figures/mi_fig_spikeToLFP/direct/100bins/60s.png	/^/;"	v
k	figures/mi_fig_spikeToLFP/direct/2bins/2min.png	/^¬$ …¸˛òN$dOfÓ2Û|ú√πrÔ‹;ÔÃóo·5Ôœ‚x</;"	v
k	reports/Mar16/Report_week4.pdf	/^ˇc4´r2R-°˚»©∆i§Q5yQä%;©Àlû9ÉqS5U–æéPQÓ†µ¬Ÿ¿¶{≤,jœ`±g^}OLúïTU6:xöΩˆ\/L[}J(>˘]‘ƒ∏ÇNkı=$/;"	v
ks	figures/triple/mi_10.png	/^ ⁄∞§èâ(z9ÍúÚ˝˜ﬂ+="Ø¯s*‚„„ëôô	/;"	v
l	figures/dt/direct/mi_00625.png	/^Æ∏d¶πÎ◊R5/;"	v
l	figures/s_minfo_15.png	/^f»ÏŸ≥m˜pµi”ÜØø˛∫ƒÒKñ,!""ooo"""X∂lô›ÛãÖ	&ÜØØ\/ù;wfﬂæ}vcö4ib€ªˆ‚„ôgûq˙g©T~¯¸œ—[·Ø$/;"	v
l	reports/Jul20/rl0.png	/^YeÏNvíÍmÇëññ&`≤p~r±Æû»N˝w2êdÔi	w"i #áE…'jÛDõA•nlSfçaÉQ?>›(-˚Èﬂ+5˚PG8˛Âk„/;"	v
larger	doc/research-log.md	/^	a. for smaller occupancy, the magnitude of MI becomes larger;$/;"	v
latest_excitatory_poisson_time_	include/neuron.h	/^	double latest_excitatory_poisson_time_; \/\/ Used to store the last Poisson time point generated by Poisson generator for excitatory spikes;$/;"	m	class:Neuron	access:private
latest_inhibitory_poisson_time_	include/neuron.h	/^	double latest_inhibitory_poisson_time_; \/\/ Used to store the last Poisson time point generated by Poisson generator for inhibitory spikes;$/;"	m	class:Neuron	access:private
level	doc/research-log.md	/^5. For LFP generated by second order connected neurons(71 neurons) of #65 neurons, the MI signal lies on the noise level; for its excitatory portion (56 neurons), things go similarly; for its inhibitory neurons(15 neurons), there is a non significant peak.$/;"	v
level	tags	/^level	doc\/research-log.md	\/^5. For LFP generated by second order connected neurons(71 neurons) of #65 neurons, the MI signal lies on the noise level; for its excitatory portion (56 neurons), things go similarly; for its inhibitory neurons(15 neurons), there is a non significant peak.$\/;"	v$/;"	v
lfp	doc/research-log.md	/^Go to Matlab to check the histogram of lfp;$/;"	v
loop	doc/research-log.md	/^	1. 100 neuron simulation with identical input and network structure: pure excitatory driven; 80% neuron are excitatory; 10% connecting probability between two loop;$/;"	v
loop	doc/research-log.md	/^6. For inbibitory neuron, in loop 1, TDMI cannot indicate the relationship between spikes and LFP;$/;"	v
loop	reports/Apr25/report.tex	/^			\\item Each neuron in loop 1 has 10\\% probability connecting with every single neuron in loop 2;$/;"	v
loop	reports/Apr25/report.tex	/^			\\item Neuronal connecting density is 3, which means that each neuron directly connects with 6 other neurons within its own loop;$/;"	v
loop	reports/Apr25/report.tex	/^	% 		\\item The text box in figure shows the propertis of target neuron in loop 1 and the number of neurons contributes to LFP as well as their types in loop 2;$/;"	v
loop	reports/Mar16/report.tex	/^			\\item Each neuron in loop 1 has 10\\% probability connecting with every single neuron in loop 2;$/;"	v
loop	reports/Mar16/report.tex	/^			\\item The text box in figure shows the propertis of target neuron in loop 1 and the number of neurons contributes to LFP as well as their types in loop 2;$/;"	v
loop	tags	/^excitatory	doc\/research-log.md	\/^	1. 100 neuron simulation with identical input and network structure: pure excitatory driven; 80% neuron are excitatory; 10% connecting probability between two loop;$\/;"	v$/;"	v
loop	tags	/^loop	doc\/research-log.md	\/^6. For inbibitory neuron, in loop 1, TDMI cannot indicate the relationship between spikes and LFP;$\/;"	v$/;"	v
m	figures/robust/partial/mi_0015.png	/^EGGõ?ænΩıVMö4…\/Ô%™è/;"	v
m	figures/triple/mi_01.png	/^ÿ •ã¥z#YQZD@-bŸ.ê-AíÅ$Û˚cúH»BñôsÊÃºûèGGŒÃ9Áì)èÜw>üÔ9ÜÀÂr	/;"	v
mQ	reports/Mar07/Q&A.pptx	/^ë|Èt!9‰rLΩå®ﬂ∞'π™Îô~2†ô0≈÷(H[s¢=D˙[:b4»(uH¥à©L'∂e—bÍâò†K9U!ÉúZùWàáù{Òh«ïØ^ı©ˇMh˘w°–uV”}–;GûÁº¶âoßY∆DπèÈS7t}N!⁄3yCÊÙ£aåüFrÚ3õ/;"	v
magnetoencephalography	doc/thesis-proposal.md	/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$/;"	p	file:	signature:(MEG)
magnetoencephalography	tags	/^ECoG	doc\/thesis-proposal.md	\/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$\/;"	v$/;"	p	file:	signature:(MEG)
magnetoencephalography	tags	/^activities	doc\/thesis-proposal.md	\/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$\/;"	v$/;"	p	file:	signature:(MEG)
magnetoencephalography	tags	/^magnetoencephalography	doc\/thesis-proposal.md	\/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$\/;"	p	file:	signature:(MEG)$/;"	p	file:	signature:(MEG)
magnetoencephalography	tags	/^techniques	doc\/thesis-proposal.md	\/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$\/;"	v$/;"	p	file:	signature:(MEG)
main	src/hist.cpp	/^int main(int argc, const char* argv[]) {$/;"	f	signature:(int argc, const char* argv[])
main	src/main_lfp.cpp	/^int main(int argc, const char* argv[]) {$/;"	f	signature:(int argc, const char* argv[])
main	src/main_mat.cpp	/^int main(int argc, const char* argv[]) {$/;"	f	signature:(int argc, const char* argv[])
main	src/main_mi.cpp	/^int main(int argc, const char* argv[]) {$/;"	f	signature:(int argc, const char* argv[])
main	src/main_mi_bb.cpp	/^int main(int argc, const char* argv[]) {$/;"	f	signature:(int argc, const char* argv[])
main	src/main_mi_bd.cpp	/^int main(int argc, const char* argv[]) {$/;"	f	signature:(int argc, const char* argv[])
main	src/main_mi_bd_2bins.cpp	/^int main(int argc, const char* argv[]) {$/;"	f	signature:(int argc, const char* argv[])
main	src/main_mi_bk.cpp	/^int main(int argc, const char* argv[]) {$/;"	f	signature:(int argc, const char* argv[])
main	src/main_mi_dd.cpp	/^int main(int argc, const char* argv[]) {$/;"	f	signature:(int argc, const char* argv[])
main	src/main_mi_dd_LFP.cpp	/^int main(int argc, const char* argv[]) {$/;"	f	signature:(int argc, const char* argv[])
main	src/main_net.cpp	/^int main(int argc, const char* argv[]) {$/;"	f	signature:(int argc, const char* argv[])
main	src/main_nets.cpp	/^int main(int argc, const char* argv[]) {$/;"	f	signature:(int argc, const char* argv[])
main	src/main_neuron.cpp	/^int main(int argc, const char* argv[]) {$/;"	f	signature:(int argc, const char* argv[])
main	src/main_potential.cpp	/^int main(int argc, const char* argv[]) {$/;"	f	signature:(int argc, const char* argv[])
main	src/main_spike.cpp	/^int main(int argc, const char* argv[]) {$/;"	f	signature:(int argc, const char* argv[])
main	src/main_spike2d.cpp	/^int main(int argc, const char* argv[]) {$/;"	f	signature:(int argc, const char* argv[])
main	src/main_transpose.cpp	/^int main(int argc, const char* argv[]) {$/;"	f	signature:(int argc, const char* argv[])
main	src/sta.cpp	/^int main(int argc, const char* argv[]) {$/;"	f	signature:(int argc, const char* argv[])
main	src/tunning.cpp	/^int main(int argc, const char* argv[]) {$/;"	f	signature:(int argc, const char* argv[])
main	src/vector1d.cpp	/^int main(int argc, const char* argv[]) {$/;"	f	signature:(int argc, const char* argv[])
main	test/entropy_binary.cpp	/^int main() {$/;"	f	signature:()
main	test/file_io_test.cpp	/^int main() {$/;"	f	signature:()
main	test/gaussian_mi.cpp	/^int main(int argc, const char* argv[]) {$/;"	f	signature:(int argc, const char* argv[])
main	test/get-config_test.cpp	/^int main() {$/;"	f	signature:()
main	test/group_test.cpp	/^int main() {$/;"	f	signature:()
main	test/lfp_test.cpp	/^int main() {$/;"	f	signature:()
main	test/mi_test.cpp	/^int main() {$/;"	f	signature:()
main	test/neuron_test.cpp	/^int main() {$/;"	f	signature:()
main	test/pcc-gaussian.cpp	/^int main(int argc, const char* argv[]) {$/;"	f	signature:(int argc, const char* argv[])
main	test/sstream_test.cpp	/^int main() {$/;"	f	signature:()
main	test/vecmanip_test.cpp	/^int main() {$/;"	f	signature:()
mapping	reports/oct31/report.tex	/^	where $\\epsilon_n$ and $\\eta_n$ are independent random variables with normal distribution, and $\\alpha$, $\\beta$ and $\\xi_{xy}$ are the self interaction strength and cross interaction strength between \\{X\\} and \\{Y\\}, respectively. $f(X)$ is a functional mapping, which could be either linear or nonlinear.$/;"	v
matrix_	include/connectivity_matrix.h	/^	vector<vector<int> > matrix_; \/\/ binary connectivity matrix; posible value is 1 or 0;$/;"	m	class:ConnectivityMatrix	access:private
mediate_mode_matrix_	include/connectivity_matrix.h	/^	vector<vector<int> > mediate_mode_matrix_; \/\/ indices of mediate neurons between the pole of neuron pairs;$/;"	m	class:ConnectivityMatrix	access:private
membrane_potential_	include/neuron.h	/^	double membrane_potential_; \/\/ membrane potential;$/;"	m	struct:NeuronalState	access:public
membrane_potential_	include/neuron.h	/^	double membrane_potential_;$/;"	m	class:Neuron	access:private
membrane_potential_temp_	include/neuron.h	/^	double membrane_potential_temp_;$/;"	m	class:Neuron	access:private
ml	figures/robust/partial/mi_0015.png	/^EGGõ?ænΩıVMö4…\/Ô%™è/;"	v
mode	include/neuron.h	/^	bool mode; \/\/ mode of spike: true for feedforward spike, false for neuronal input spike;$/;"	m	struct:Spike	access:public
mu_x$	reports/oct31/report.tex	/^		When $n >> 1$, we can substitute E(XY), $\\mu_x$, $\\mu_y$, $\\sigma_x$ and $\\sigma_y$ into $\\rho$. For $\\alpha = \\beta$,$/;"	v
mu_y$	reports/oct31/report.tex	/^		When $n >> 1$, we can substitute E(XY), $\\mu_x$, $\\mu_y$, $\\sigma_x$ and $\\sigma_y$ into $\\rho$. For $\\alpha = \\beta$,$/;"	v
myrandom	src/main_mi_dd.cpp	/^int myrandom(int i) {return rand()%i;}$/;"	f	signature:(int i)
myrandom	src/main_spike.cpp	/^int myrandom(int i) {return rand()%i;}$/;"	f	signature:(int i)
n	figures/gauss/mi_gauss_0.5_0.5_0.9_50_long_logy.png	/^¢Çxê†¶f∫jﬁxPke¶f∞hfìn=j≥~≠‘neó•µeeÊnˆ3è¨©÷2-œ\\◊J2)P«\\µC‘Ú»HLÅﬂﬂ¨^03üÔÃºûèèYæÛeÊÕ,èú˜|?á£∏∏∏X/;"	v
n	figures/one-way/direct/significance/mi_01_20_10k.png	/^9rD/;"	v
n	figures/sv_30_10min_0-1.png	/^\/º÷S˛º/;"	v
n	reports/Apr25/texput.log	/^ 0i,0n,0p,28b,6s stack positions out of 5000i,500n,10000p,200000b,80000s$/;"	v
n	reports/Mar16/texput.log	/^ 0i,0n,0p,28b,6s stack positions out of 5000i,500n,10000p,200000b,80000s$/;"	v
n	reports/oct31/report.log	/^ 42i,8n,40p,395b,495s stack positions out of 5000i,500n,10000p,200000b,80000s$/;"	v
nM	mi_01_10e-6.png	/^,D/;"	v
network	reports/Apr25/report.tex	/^			\\item Spiking signals generatd by one of those two network, which called 'loop 1' or pre-network, can transmit to the other network, which I called it 'loop 2' or post-network; and the spiking information flow cannot transmit backwards;$/;"	v
network	reports/Mar16/report.tex	/^			\\item Spiking signals generatd by one of those two network, which called 'loop 1' or pre-network, can transmit to the other network, which I called it 'loop 2' or post-network; and the spiking information flow cannot transmit backwards;$/;"	v
networks	doc/research-log.md	/^	1. as for numerical convergence, all cases obey 4th order numerical convergence, including single neuron case and neural networks, for both old and new codes;$/;"	v
networks	reports/Mar16/report.tex	/^			\\item 80\\% of neurons are excitatory, and 20\\% of them are inhibitory; both kinds of neurons are random located in networks;$/;"	v
networks	tags	/^networks	doc\/research-log.md	\/^	1. as for numerical convergence, all cases obey 4th order numerical convergence, including single neuron case and neural networks, for both old and new codes;$\/;"	v$/;"	v
neuron	doc/research-log.md	/^4. Based on previous configure, the magnitude of MI of spikes and LFP generated by inhibitory neurons are similar to those of spikes and LFP generated by excitatory neuron;$/;"	v
neuron	reports/Apr25/report.tex	/^	% 		\\item The title illustrates the index of target neuron, the time range of its data adapted in TDMI analysis, and the detailed parameter applied in TDMI calculation;$/;"	v
neuron	reports/Mar16/report.tex	/^			\\item Second order LFP: local field potential generated by neurons connected with first order connected neurons of target neuron; a neuron cannot be first order neuron and second order neuron at the same time;$/;"	v
neuron	reports/Mar16/report.tex	/^			\\item The title illustrates the index of target neuron, the time range of its data adapted in TDMI analysis, and the detailed parameter applied in TDMI calculation;$/;"	v
neuron	reports/oct31/report.tex	/^			As for spike train of presynaptic neuron, I take the time step as 0.5 milliseconds, which means that the element in spike train series is "1" if there is a spiking events within 0.5 ms time window, and is "0" otherwise. From Figure \\ref{fig:spike_auto}, I find that the auto correlation length of spike train is almost zero.$/;"	v
neuron	tags	/^neuron	doc\/research-log.md	\/^4. Based on previous configure, the magnitude of MI of spikes and LFP generated by inhibitory neurons are similar to those of spikes and LFP generated by excitatory neuron;$\/;"	v$/;"	v
neuron_number_	include/connectivity_matrix.h	/^	int neuron_number_;$/;"	m	class:ConnectivityMatrix	access:private
neuron_number_	include/network.h	/^	int neuron_number_;	\/\/ number of the neurons in the group;$/;"	m	class:NeuronalNetwork	access:private
neuron_type	include/lfp.h	/^struct neuron_type{$/;"	s
neuron_type::index	include/lfp.h	/^	int index;$/;"	m	struct:neuron_type	access:public
neuron_type::type	include/lfp.h	/^	bool type;$/;"	m	struct:neuron_type	access:public
neurons	doc/research-log.md	/^	> Test the behavior of inhibitory neuronal group: including different pairs of neurons, different network structures;$/;"	v
neurons	doc/research-log.md	/^3. Based on previous configure, test LFP generated by excitatory neurons;$/;"	v
neurons	doc/research-log.md	/^5. For LFP generated by second order connected neurons(71 neurons) of #65 neurons, the MI signal lies on the noise level; for its excitatory portion (56 neurons), things go similarly; for its inhibitory neurons(15 neurons), there is a non significant peak.$/;"	v
neurons	doc/research-log.md	/^> for LFP generated by excitatory neurons, the time delay is approximately 0.03ms. Meanwhile, the MI would maintain it peak value for a short period for 0.16 ms;  $/;"	v
neurons	doc/thesis-proposal.md	/^1.1.2 Neuronal network model is arranged in the form of 'small-world' network. Starting from a one dimensional lattice loop, with certain rewiring operation between neurons, networks with certain small-worldness are achieved, which fits the experimental finding about neuronal networks in cortex.$/;"	v
neurons	reports/Apr25/report.tex	/^			\\item Each network contains 100 neurons;$/;"	v
neurons	reports/Apr25/report.tex	/^			\\item Each network has a regular structure, which means each of its neuron connects with 6 nearest neurons;$/;"	v
neurons	reports/Mar16/report.tex	/^			\\item Each network contains 100 neurons;$/;"	v
neurons	reports/Mar16/report.tex	/^			\\item Each network has a regular structure, which means each of its neuron connects with 6 nearest neurons;$/;"	v
neurons	reports/Mar16/report.tex	/^			\\item Spike trains from excitatory and inhibitory neurons have different performance on the TDMI signal towards their first order connected neurons; $/;"	v
neurons	tags	/^level	doc\/research-log.md	\/^5. For LFP generated by second order connected neurons(71 neurons) of #65 neurons, the MI signal lies on the noise level; for its excitatory portion (56 neurons), things go similarly; for its inhibitory neurons(15 neurons), there is a non significant peak.$\/;"	v$/;"	v
neurons	tags	/^neurons	doc\/thesis-proposal.md	\/^1.1.2 Neuronal network model is arranged in the form of 'small-world' network. Starting from a one dimensional lattice loop, with certain rewiring operation between neurons, networks with certain small-worldness are achieved, which fits the experimental finding about neuronal networks in cortex.$\/;"	v$/;"	v
neurons_	include/network.h	/^	Neuron *neurons_;$/;"	m	class:NeuronalNetwork	access:private
num_rand	pys/ks2.py	/^num_rand = 2$/;"	v
o	figures/gauss/20.png	/^/;"	v
o	figures/i0005/direct/fig.png	/^÷ˇ¯G˝ˆ€oó›&Â1∂=zË¿Å9r§,ÀRè=\\œOú8—ÌuûŒõõõ´˚Ôø_/;"	v
o	figures/mi_fig_spikeToLFP/10min/direct/200.png	/^h≥Ÿd≥Ÿ™\\7r‰Hmÿ∞A,–¸˘ÛUVV¶>}˙hÈ“•ö2eäo/;"	v
o	figures/mi_fig_spikeToLFP/direct/10bins/60s.png	/^/;"	v
o	figures/net/mi_net_post_01.png	/^/;"	v
o	figures/nn0145/n2sb.png	/^/;"	v
o	figures/one-way/direct/mi_direct_01.png	/^DBUë¶˛§"ä†à‚≤Ç,\/6.ä.≈Fã†Ç∞ÆäB(∫XPAÅ\/“DF]ñ¢RCK!9ø?∆SHô9g&yøÆãkñÁ¥œI…ÕÛyŒ1L”4/;"	v
o	figures/robust/partial/mi_0015.png	/^	ë‚‚ /;"	v
o	ks2_80.png	/^¯˙˙ÚƒOpÒ‚EÆ^Ωz›˜ÑÜÜfñ?Ä-Z`∑€9tËœ‘≠[ã≈í˘}PPPñSº€∑oß[∑nÑÜÜ‚ÎÎÀΩ˜ﬁ@lllÆ~O˘ì·G/;"	v
occupancy	doc/research-log.md	/^	c. In my future test, i would choose 50 as the standard expected occupancy;$/;"	v
occupancy	tags	/^occupancy	doc\/research-log.md	\/^	c. In my future test, i would choose 50 as the standard expected occupancy;$\/;"	v$/;"	v
p	figures/mi_fig_spikeToLFP/10min/partial/20.png	/^GGG¥oﬂ			ÂÊïº®EãX¥hQô∂™ÓKBØÆ&}ìúúå^Ωz°m€∂¯‚ã\/pÁŒ,_æ©©©8tËê»…)<<≠[∑.”fll,QÕÇΩ{˜bÚ‰…ppp¿÷≠[—∑o_?~ú◊ÕWì&MÇááGô6;;;â“h¶¨¨,Ñáá£U´VpuuE\\\\\\Ö«óÙÙttÔﬁ¶¶¶X¥hrss±|˘r\\ºxâââ–÷÷ñ }√V›æ/;"	v
p	reports/Apr25/texput.log	/^ 0i,0n,0p,28b,6s stack positions out of 5000i,500n,10000p,200000b,80000s$/;"	v
p	reports/Mar16/texput.log	/^ 0i,0n,0p,28b,6s stack positions out of 5000i,500n,10000p,200000b,80000s$/;"	v
p	reports/oct31/report.log	/^ 42i,8n,40p,395b,495s stack positions out of 5000i,500n,10000p,200000b,80000s$/;"	v
part	doc/research-log.md	/^Tomorrow, first go and check this part;$/;"	v
path	pys/autotest.py	/^path = sys.argv[1]$/;"	v
path_matrix_	include/connectivity_matrix.h	/^	vector<vector<int> > path_matrix_; \/\/ least path between each neuronal pair;$/;"	m	class:ConnectivityMatrix	access:private
pattern	reports/Apr25/report.tex	/^	% 	\\item Try to run test on networks with different network structures, to see whether there is any different TDMI pattern;$/;"	v
pattern	reports/Mar16/report.tex	/^		\\item Try to run test on networks with different network structures, to see whether there is any different TDMI pattern;$/;"	v
pdfTeX	reports/oct31/report.log	/^This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017\/W32TeX) (preloaded format=pdflatex 2017.9.17)  22 JAN 2018 19:52$/;"	v
period	doc/Aug01.md	/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$/;"	v
period	tags	/^dt	doc\/Aug01.md	\/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$\/;"	v$/;"	v
period	tags	/^sequence	doc\/Aug01.md	\/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$\/;"	v$/;"	v
period	tags	/^variable	doc\/Aug01.md	\/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$\/;"	v$/;"	v
pool	doc/progress-log.md	/^- Week 4: Add auto-control script in python for simulation program, find properties of TDMI figure according to different composition of neuronal current sources and verify them with larger simulation testing pool;$/;"	v
populations	doc/thesis-proposal.md	/^1. Gerstner, W., & Kistler, W. M. (2002). Spiking neuron models: Single neurons, populations, plasticity. Cambridge university press.$/;"	v
position	doc/research-log.md	/^Start to find RA position;$/;"	v
potential	doc/research-log.md	/^	> Test and verify the physical meaning of the time delay between spike and local field potential;$/;"	v
potential	doc/research-log.md	/^	Test and verify the physical meaning of the time delay between spike and local field potential;$/;"	v
potential	doc/thesis-proposal.md	/^In information theory, mutual information(MI) is used to quantify the relationship between two sets of data. In principle, the value of MI is invariant under homeomorphic transformation, and comparing with cross-correlation, it has a better performance dealing with data under nonlinear mapping. And in neural information analysis, it is a great tool for identify neuron-neuron correlation based on neuronal signal recording. And somehow, it would be a good tool to investigate the dynamic of single neuron and its related local field potential, which would be covered in this work. In addition, by adding time-delays onto MI analysis, we can observe the change MI in time domain, which usually called time-delay mutual information(TDMI). In this case, we can observe the direction of information flow in different area in neural network. Thus, we can somehow reveal the network structure based on available experimental. And this is the key purpose of this project.$/;"	v
potential	reports/Apr25/report.tex	/^			\\item In the following results, I choose neuronal data, including membrane potential and different component of membrane conductance, from 1000 to 10000 ms to generate local field potential, which can prevent the disturbance from the transition process of network dynamics at the first one second.$/;"	v
potential	reports/Apr25/report.tex	/^			\\item Neurons are driven by feedforward excitatory spiking signal generated by Poisson process with 1.5 \\emph{kHz} mean driving rate; Roughly speaking, a neuron receives 30 spikes from feedforward Poisson process and its membrane potential, as a result, would increase from resting potential to firing threshold.$/;"	v
potential	reports/Apr25/report.tex	/^	% 		\\item The blue line indicates the TDMI of original spike train and local field potential, and the green line indicates that of randomly swapped spike train and local field potential under the same testing condition;$/;"	v
potential	reports/Mar16/report.tex	/^			\\item In the following results, I choose neuronal data, including membrane potential and different component of membrane conductance, from 1000 to 10000 ms to generate local field potential, which can prevent the disturbance from the transition process of network dynamics at the first one second.$/;"	v
potential	reports/Mar16/report.tex	/^			\\item Neurons are driven by feedforward excitatory spiking signal generated by Poisson process with 1500 Hz driving rate; Roughly speaking, a neuron receives 30 spikes from feedforward Poisson process and its membrane potential, as a result, would increase from resting potential to firing threshold.$/;"	v
potential	reports/Mar16/report.tex	/^			\\item The blue line indicates the TDMI of original spike train and local field potential, and the green line indicates that of randomly swapped spike train and local field potential under the same testing condition;$/;"	v
potential	tags	/^potential	doc\/thesis-proposal.md	\/^In information theory, mutual information(MI) is used to quantify the relationship between two sets of data. In principle, the value of MI is invariant under homeomorphic transformation, and comparing with cross-correlation, it has a better performance dealing with data under nonlinear mapping. And in neural information analysis, it is a great tool for identify neuron-neuron correlation based on neuronal signal recording. And somehow, it would be a good tool to investigate the dynamic of single neuron and its related local field potential, which would be covered in this work. In addition, by adding time-delays onto MI analysis, we can observe the change MI in time domain, which usually called time-delay mutual information(TDMI). In this case, we can observe the direction of information flow in different area in neural network. Thus, we can somehow reveal the network structure based on available experimental. And this is the key purpose of this project.$\/;"	v$/;"	v
ppt	doc/research-log.md	/^- summarize the results got since last time met with Douglas, make a ppt; [not yet]$/;"	v
processes	doc/research-log.md	/^3. different component, different dynamic processes;$/;"	v
program	doc/research-log.md	/^No problem in single neuron program;$/;"	v
program	doc/research-log.md	/^Something wrong at neural network program;$/;"	v
program	doc/research-log.md	/^checking the correctness of new program;$/;"	v
project	doc/thesis-proposal.md	/^In this project, integrate-and-fire neuron model would be applied as the basis of modeling. Mechanism of interneuron communication and computation based on different sparse network structure would be discussed as well as other network dynamics. The details of model in simulation would be modified according to actual experimental needs.$/;"	v
pyramidal_synaptic_intensity_	include/neuron.h	/^	double pyramidal_synaptic_intensity_;$/;"	m	class:Neuron	access:private
q	figures/mi_fig_spikeToLFP/direct/005.png	/^/;"	v
q1	reports/Jul20/rl1.png	/^*™/;"	v
r8	mi_01_10e-6.png	/^ÿXn∑[S¶L—∏q„¥n›∫ù≥h—"Í¿Åí§◊_]˚˜Ôó$Mô2E±±±˙„ˇ®1c∆®WØ^5jîZ∑n≠˝˚˜ÎÕ7ﬂTø~˝ÙÏ≥œ6∫÷Û˝‡?–O~ÚuÔﬁ]-[∂‘ó_~©_|QNßSO>˘§O◊/;"	v
rD	spike_cum_1.png	/^Ù………Qó.]ØyÛÊ)??_O>˘§ˆÏŸ£è>˙HQQQÅæÀñ-”∏q„4h– Mõ6MÔΩ˜û&Mö§ÇÇ•••˙ïññ™ˇ˛⁄Ω{∑“““îêê†Áû{N›∫uSVVñZ¥hËªk◊.ıÏŸSm€∂’¢EãtË–!=˘‰ì˙Ù”Oµq„F«˛Ãò1CÈÈÈ;v¨:uÍ§ÃÃL/;"	v
range	obj/main_lfp.o	/^/;"	v
rate	reports/Mar16/report.tex	/^			\\item Neurons are driven by feedforward excitatory spiking signal generated by Poisson process with 1500 Hz driving rate; Roughly speaking, a neuron receives 30 spikes from feedforward Poisson process and its membrane potential, as a result, would increase from resting potential to firing threshold.$/;"	v
remaining_refractory_period_	include/neuron.h	/^	double remaining_refractory_period_; \/\/ if negative, remaining refractory period equals to zero;$/;"	m	class:Neuron	access:private
remaining_refractory_period_temp_	include/neuron.h	/^	double remaining_refractory_period_temp_; \/\/ if negative, temporal remaining refractory period equals to zero;$/;"	m	class:Neuron	access:private
remaining_refractory_time	include/neuron.h	/^	double remaining_refractory_time;$/;"	m	struct:NeuronalState	access:public
resting_potential_	include/neuron.h	/^	double resting_potential_;$/;"	m	class:Neuron	access:private
result	doc/research-log.md	/^- Construct a path dependent network program; run and check the result; [not yet]$/;"	v
result	reports/Apr25/report.tex	/^			\\item Neurons are driven by feedforward excitatory spiking signal generated by Poisson process with 1.5 \\emph{kHz} mean driving rate; Roughly speaking, a neuron receives 30 spikes from feedforward Poisson process and its membrane potential, as a result, would increase from resting potential to firing threshold.$/;"	v
result	reports/Apr25/report.tex	/^	% The magitude of MI signal depends on the number of neurons in neuron cluster of LFP. Here is a hypothesis. Since each neuron in the cluster of LFP contains information from pre-network neuron and its neighborhood in post-network. Neurons have more connections with their neighbors rather than cross network connections. When the number of LFP cluster is small, the current signal of neuron is dominant by local network dynamics which is not correlated across neurons in cluster. When the number goes up, those non-correlated signal is averaged. However, their cross-network signals originate from the same neuron in pre-network. The effect of these parts would accumulate, and as a result, MI signal would increase.$/;"	v
result	reports/Mar16/report.tex	/^			\\item Neurons are driven by feedforward excitatory spiking signal generated by Poisson process with 1500 Hz driving rate; Roughly speaking, a neuron receives 30 spikes from feedforward Poisson process and its membrane potential, as a result, would increase from resting potential to firing threshold.$/;"	v
result	reports/Mar16/report.tex	/^	The magitude of MI signal depends on the number of neurons in neuron cluster of LFP. Here is a hypothesis. Since each neuron in the cluster of LFP contains information from pre-network neuron and its neighborhood in post-network. Neurons have more connections with their neighbors rather than cross network connections. When the number of LFP cluster is small, the current signal of neuron is dominant by local network dynamics which is not correlated across neurons in cluster. When the number goes up, those non-correlated signal is averaged. However, their cross-network signals originate from the same neuron in pre-network. The effect of these parts would accumulate, and as a result, MI signal would increase.$/;"	v
result	tags	/^result	doc\/research-log.md	\/^- Construct a path dependent network program; run and check the result; [not yet]$\/;"	v$/;"	v
results	reports/Apr25/report.tex	/^			\\item In the following results, I choose neuronal data, including membrane potential and different component of membrane conductance, from 1000 to 10000 ms to generate local field potential, which can prevent the disturbance from the transition process of network dynamics at the first one second.$/;"	v
results	reports/Mar16/report.tex	/^			\\item In the following results, I choose neuronal data, including membrane potential and different component of membrane conductance, from 1000 to 10000 ms to generate local field potential, which can prevent the disturbance from the transition process of network dynamics at the first one second.$/;"	v
rewiring	doc/research-log.md	/^1. 100 neuron; 80% excitatory; 10% interloop connectivity; no rewiring; (neuron type seed 1, 2; Poisson seed, 5, 6, interloop seed 100);$/;"	v
rewiring	tags	/^connectivity	doc\/research-log.md	\/^1. 100 neuron; 80% excitatory; 10% interloop connectivity; no rewiring; (neuron type seed 1, 2; Poisson seed, 5, 6, interloop seed 100);$\/;"	v$/;"	v
rewiring	tags	/^seed	doc\/research-log.md	\/^1. 100 neuron; 80% excitatory; 10% interloop connectivity; no rewiring; (neuron type seed 1, 2; Poisson seed, 5, 6, interloop seed 100);$\/;"	v$/;"	v
rho$	reports/oct31/report.tex	/^		Then, we need to calculate the correlating coefficient $\\rho$,$/;"	v
rtt	figures/s_minfo_15.png	/^Y≥f/;"	v
s	figures/mi_fig_spikeToLFP/10min/full/400.png	/^Åö`M„B&V8jãYŸ6¶beÍ4ˆ-À≤˘ñ’5π‘‘◊_V6∂Z„í’ÿBãñVéπ¥iìRZi&6ñ•¶‡9*"p~‹sPbásÓÂ|\\◊=‹Áæœ˝F∫^º?ãÀÁÛ˘/;"	v
s	figures/mi_fig_spikeToLFP/10min/partial/20.png	/^*wlŸ≤e:}˙¥:§Áü^◊^{≠>˝ÙSıË—£˛ü/;"	v
s	figures/mi_fig_spikeToLFP/direct/100bins/30s.png	/^IYYY˙‡Éîûû^£{/;"	v
s	figures/neuronal_dimension_analysis/IPSP_s.png	/^ø9¬N9èÀÏ«π2ˇEHπbwy""R/;"	v
s	figures/triple/mi_20.png	/^ÖB:˚Ï≥{ù€∏q£6n‹®ßü~Züˇ¸ÁS∫_/;"	v
s	figures/two-way/full/mi_10.png	/^/;"	v
s	mi.png	/^/;"	v
s	reports/Apr25/report.tex	/^			\\item simulation time range is [0, 10] s; timing step = 1\/32 ms$/;"	v
s	reports/Jul20/fig4.png	/^πππ∏xÒ"<à?˝ÈOàååÑ^Ø«û={∞tÈRlŸ≤YYYRÉàBØ◊˚MÏÍız‘‘‘x›«ôû9s&/;"	v
science	doc/thesis-proposal.md	/^As a fresh member in brain science, computational neuroscience applies information theory and computational tools to help understand neural mechanism and brain functions better. Meanwhile, close relationship between computational neuroscience and experimental neuroscience allows people to develop more computational technology and theories to analyze the vast pool of available neurobiology data and together to build a view of how brain works in a whole-brain level.$/;"	v
seed	doc/research-log.md	/^1. 100 neuron; 80% excitatory; 10% interloop connectivity; no rewiring; (neuron type seed 1, 2; Poisson seed, 5, 6, interloop seed 100);$/;"	v
seed	tags	/^connectivity	doc\/research-log.md	\/^1. 100 neuron; 80% excitatory; 10% interloop connectivity; no rewiring; (neuron type seed 1, 2; Poisson seed, 5, 6, interloop seed 100);$\/;"	v$/;"	v
seed	tags	/^seed	doc\/research-log.md	\/^1. 100 neuron; 80% excitatory; 10% interloop connectivity; no rewiring; (neuron type seed 1, 2; Poisson seed, 5, 6, interloop seed 100);$\/;"	v$/;"	v
seeds	doc/research-log.md	/^it migth lead from different random seeds;$/;"	v
sequence	doc/Aug01.md	/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$/;"	v
sequence	tags	/^dt	doc\/Aug01.md	\/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$\/;"	v$/;"	v
sequence	tags	/^sequence	doc\/Aug01.md	\/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$\/;"	v$/;"	v
sequence	tags	/^variable	doc\/Aug01.md	\/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$\/;"	v$/;"	v
setups	doc/progress-log.md	/^- Week 1: Accomplish the thesis proposal; Read Papers to understand the electrophysiological mechanism of local field potential in different experimental setups; Define the first version of biophysical model (including its related network structure) and applied it to simulating neuronal data;$/;"	v
setups	doc/thesis-proposal.md	/^- Week 1: Accomplish the thesis proposal; Read Papers to understand the electrophysiological mechanism of local field potential in different experimental setups; Define the first version of biophysical model (including its related network structure) and applied it to simulating neuronal data;$/;"	v
setups	tags	/^data	doc\/progress-log.md	\/^- Week 1: Accomplish the thesis proposal; Read Papers to understand the electrophysiological mechanism of local field potential in different experimental setups; Define the first version of biophysical model (including its related network structure) and applied it to simulating neuronal data;$\/;"	v$/;"	v
setups	tags	/^data	doc\/thesis-proposal.md	\/^- Week 1: Accomplish the thesis proposal; Read Papers to understand the electrophysiological mechanism of local field potential in different experimental setups; Define the first version of biophysical model (including its related network structure) and applied it to simulating neuronal data;$\/;"	v$/;"	v
sf	figures/dt/full/mi_05.png	/^–®Q£<\\%/;"	v
sf	figures/robust/full/mi_0005.png	/^–®Q£<\\%/;"	v
signals	doc/research-log.md	/^My suspection is that bugs appears at the process of the generation of Poisson feedforward signals;$/;"	v
similarly	doc/research-log.md	/^5. For LFP generated by second order connected neurons(71 neurons) of #65 neurons, the MI signal lies on the noise level; for its excitatory portion (56 neurons), things go similarly; for its inhibitory neurons(15 neurons), there is a non significant peak.$/;"	v
similarly	tags	/^level	doc\/research-log.md	\/^5. For LFP generated by second order connected neurons(71 neurons) of #65 neurons, the MI signal lies on the noise level; for its excitatory portion (56 neurons), things go similarly; for its inhibitory neurons(15 neurons), there is a non significant peak.$\/;"	v$/;"	v
simulation	doc/research-log.md	/^* Write configuration file for two network system simulation;[Done]$/;"	v
speaking	reports/Apr25/report.tex	/^			\\item Neurons are driven by feedforward excitatory spiking signal generated by Poisson process with 1.5 \\emph{kHz} mean driving rate; Roughly speaking, a neuron receives 30 spikes from feedforward Poisson process and its membrane potential, as a result, would increase from resting potential to firing threshold.$/;"	v
speaking	reports/Mar16/report.tex	/^			\\item Neurons are driven by feedforward excitatory spiking signal generated by Poisson process with 1500 Hz driving rate; Roughly speaking, a neuron receives 30 spikes from feedforward Poisson process and its membrane potential, as a result, would increase from resting potential to firing threshold.$/;"	v
spike_train_	include/neuron.h	/^	vector<double> spike_train_; \/\/ Exact time nodes that neuron fires.$/;"	m	class:Neuron	access:private
state	reports/oct31/report.tex	/^			In Figure \\ref{fig:lfp_auto}, the mean and standard deviation of signal reach their stationary state, respectively. Therefore, I take data in the first 40 milliseconds away, and calculate its autocovariance. The length of autocorrelation is around 20 milliseconds.$/;"	v
step	doc/progress-log.md	/^- Week 5-8: Test LFP model based on simulating data, and modified it step by step;$/;"	v
step	doc/thesis-proposal.md	/^- Week 2-8: Test LFP model based on simulating data, and modified it step by step;$/;"	v
step	reports/Apr25/report.tex	/^			\\item simulation time range is [0, 10] s; timing step = 1\/32 ms$/;"	v
step	tags	/^step	doc\/progress-log.md	\/^- Week 5-8: Test LFP model based on simulating data, and modified it step by step;$\/;"	v$/;"	v
steps	reports/oct31/report.tex	/^			After running test under different timing steps, I decided to choose 0.5 ms as the proper step. If smaller steps are taken, '1' elements is far too less than '0'. In this way, the signal peak of mutual information would be barried into noise level.$/;"	v
structure	reports/Apr25/report.tex	/^			\\item Each network has a regular structure, which means each of its neuron connects with 6 nearest neurons;$/;"	v
structure	reports/Mar16/report.tex	/^			\\item Each network has a regular structure, which means each of its neuron connects with 6 nearest neurons;$/;"	v
structures	doc/research-log.md	/^	> Test the behavior of inhibitory neuronal group: including different pairs of neurons, different network structures;$/;"	v
structures	reports/Apr25/report.tex	/^	% 	\\item Try to run test on networks with different network structures, to see whether there is any different TDMI pattern;$/;"	v
structures	reports/Mar16/report.tex	/^		\\item Try to run test on networks with different network structures, to see whether there is any different TDMI pattern;$/;"	v
structures	tags	/^neurons	doc\/research-log.md	\/^	> Test the behavior of inhibitory neuronal group: including different pairs of neurons, different network structures;$\/;"	v$/;"	v
synaptic_driven_	include/neuron.h	/^	vector<Spike> synaptic_driven_;  \/\/ Synaptic input received by neuron, including feedforward and interneuronal spikes;$/;"	m	class:Neuron	access:private
system	reports/Apr25/report.tex	/^	% In the simulating system, \\#20 neuron is excitatory and \\#47 neuron is inhibitory. Under the driving of feedforward inputs with same average rate, which is 1500 Hz, their average firing rate from 1s to 10s is 14 Hz and 12 Hz respectively. However, comparing the TDMI signal which they interact with their directly connected neuron clusters, TDMI in excitatory cases do indicate the neuronal interactions and the direction of information flow, while in inhibitory cases it fails.$/;"	v
system	reports/Mar16/report.tex	/^	In the simulating system, \\#20 neuron is excitatory and \\#47 neuron is inhibitory. Under the driving of feedforward inputs with same average rate, which is 1500 Hz, their average firing rate from 1s to 10s is 14 Hz and 12 Hz respectively. However, comparing the TDMI signal which they interact with their directly connected neuron clusters, TDMI in excitatory cases do indicate the neuronal interactions and the direction of information flow, while in inhibitory cases it fails.$/;"	v
t	figures/robust/partial/mi_0075.png	/^/;"	v
t	include/network.h	/^	double t;	\/\/ exact spiking time;$/;"	m	struct:SpikeElement	access:public
t	include/neuron.h	/^	double t; \/\/ Exact spiking time;$/;"	m	struct:Spike	access:public
t	mi_10.png	/^Áœ∑Üg/;"	v
t	reports/Jul20/rl2.png	/^JZƒniQD—Ä\\Üõ!Ñ@∏‰ûπùÛ˚cÊú9gÊÃd&ô…ÃôÛyø^ædfŒÃ|Áí9œyŒÛ}æ&QEQR3'z/;"	v
tau_	include/neuron.h	/^	double tau_; \/\/ Refractory Period.$/;"	m	class:Neuron	access:private
tau_e_	include/neuron.h	/^	double tau_e_; \/\/ Synaptic constant for excitatory synapses;$/;"	m	class:Neuron	access:private
tau_i_	include/neuron.h	/^	double tau_i_; \/\/ Synaptic constant for inhibitory synapses;$/;"	m	class:Neuron	access:private
td	bin/raster.out	/^ELF/;"	v
techniques	doc/thesis-proposal.md	/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$/;"	v
techniques	tags	/^ECoG	doc\/thesis-proposal.md	\/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$\/;"	v$/;"	v
techniques	tags	/^activities	doc\/thesis-proposal.md	\/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$\/;"	v$/;"	v
techniques	tags	/^magnetoencephalography	doc\/thesis-proposal.md	\/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$\/;"	p	file:	signature:(MEG)$/;"	v
techniques	tags	/^techniques	doc\/thesis-proposal.md	\/^In brain data recording, there are several techniques, including electroencephalography(EEG), magnetoencephalography(MEG), electrocorticography(ECoG) and local field potential(LFP). All those methods collect information attributed by extracellular fields and currents and intracellular activities, such as synaptic activities, fast action potentials and intrinsic currents and resonances. Among those, LFP is recorded by small-sized electrodes in the brain. The data combines mainly the low frequency brain rhythm which generate from neurons within approximately 50-350 micrometer from the electrode and slow ionic events from within 0.5-3 mm from the electrode. The potential to achieve high spatial resolution for brain recording becomes a reason to apply this method. On the other hand, compared with superficial layer sampling of EEG, MEG and ECoG, LFP have abilities to record deeper located events in cortex. As a result, its electrophysiological origins are complicated which contains various of components and it would be modeled and discussed in this project in detail.$\/;"	v$/;"	v
test	doc/research-log.md	/^    - calculate the clustering coefficient and the mean path of the neuorns in their own network as well as across networks; **The basic found is that in the current simulation test, neurons contribute to the local field potential have no self clustered effect, which means that each neuron locate in its own neuron cluster in post network**$/;"	v
test	tags	/^test	doc\/research-log.md	\/^    - calculate the clustering coefficient and the mean path of the neuorns in their own network as well as across networks; **The basic found is that in the current simulation test, neurons contribute to the local field potential have no self clustered effect, which means that each neuron locate in its own neuron cluster in post network**$\/;"	v$/;"	v
test_flag	pys/gauss_sign_mi.py	16;"	d	file:
tested	doc/research-log.md	/^the efficiency of this program need to be tested;$/;"	v
threshold_potential_	include/neuron.h	/^	double threshold_potential_;$/;"	m	class:Neuron	access:private
time	reports/Apr25/report.tex	/^			\\item Two-degree LFP: local field potential generated by neurons connected with first order connected neurons of target neuron; a neuron cannot be first order neuron and second order neuron at the same time;$/;"	v
time	reports/Mar16/report.tex	/^			\\item Second order LFP: local field potential generated by neurons connected with first order connected neurons of target neuron; a neuron cannot be first order neuron and second order neuron at the same time;$/;"	v
tp	figures/mi_fig_spikeToLFP/10min/partial/20.png	/^àƒ,/;"	v
train	doc/Aug01.md	/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$/;"	v
train	tags	/^dt	doc\/Aug01.md	\/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$\/;"	v$/;"	v
train	tags	/^sequence	doc\/Aug01.md	\/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$\/;"	v$/;"	v
train	tags	/^variable	doc\/Aug01.md	\/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$\/;"	v$/;"	v
transformation	doc/thesis-proposal.md	/^In information theory, mutual information(MI) is used to quantify the relationship between two sets of data. In principle, the value of MI is invariant under homeomorphic transformation, and comparing with cross-correlation, it has a better performance dealing with data under nonlinear mapping. And in neural information analysis, it is a great tool for identify neuron-neuron correlation based on neuronal signal recording. And somehow, it would be a good tool to investigate the dynamic of single neuron and its related local field potential, which would be covered in this work. In addition, by adding time-delays onto MI analysis, we can observe the change MI in time domain, which usually called time-delay mutual information(TDMI). In this case, we can observe the direction of information flow in different area in neural network. Thus, we can somehow reveal the network structure based on available experimental. And this is the key purpose of this project.$/;"	v
transformation	tags	/^potential	doc\/thesis-proposal.md	\/^In information theory, mutual information(MI) is used to quantify the relationship between two sets of data. In principle, the value of MI is invariant under homeomorphic transformation, and comparing with cross-correlation, it has a better performance dealing with data under nonlinear mapping. And in neural information analysis, it is a great tool for identify neuron-neuron correlation based on neuronal signal recording. And somehow, it would be a good tool to investigate the dynamic of single neuron and its related local field potential, which would be covered in this work. In addition, by adding time-delays onto MI analysis, we can observe the change MI in time domain, which usually called time-delay mutual information(TDMI). In this case, we can observe the direction of information flow in different area in neural network. Thus, we can somehow reveal the network structure based on available experimental. And this is the key purpose of this project.$\/;"	v$/;"	v
trial	pys/twoneuron.py	12;"	d	file:
type	include/lfp.h	/^	bool type;$/;"	m	struct:neuron_type	access:public
type	include/network.h	/^	bool type;	\/\/ The type of neuron that fired;$/;"	m	struct:SpikeElement	access:public
type	include/neuron.h	/^	bool type; \/\/ neuronal type: true for excitatory, false for inhibitory;$/;"	m	struct:NeuronalState	access:public
type_	include/neuron.h	/^	bool type_; \/\/ neuronal type: true for excitatory, false for inhibitory;$/;"	m	class:Neuron	access:private
u	figures/mi_fig_spikeToLFP/direct/50bins/60s.png	/^≠_ø>‡ı/;"	v
u	figures/mi_fig_spikeToLFP/direct/80bins/10s.png	/^´V≠“√?¨§§\$/;"	v
u	linear.png	/^Î÷≠≥Îy9IñeYÌ"lu¯atÎ÷/;"	v
u	mi_10.png	/^ñ/;"	v
u	reports/Mar16/report.synctex.gz	/^s«MÌk~µ4e9ÅÖBíkªfsG_MbdTæI´ Ö>Í`Óx1OéŸ«ç∆‹qS˚WıDsáÑ„Â%ØtÊI{–¶)Öπ„¶ˆ5øZö¢úƒB!…’¢ãπ£Ø&)2:ﬂÖ§UÂÇøºèzò;^Ãìc6≈q£1w‹‘˛u=—¡‹!·xy—+ïπC“¥)GJaÓ∏©}ÕØñf˚ëOsáÑ„Â%ØtÊI{–¶)çπ„¶ˆ5øZöjµn3w‡©ãπÅ%sG˘oÖπcí≠∞oB%±Ç>eÒP¸DMaÓ®‚!0wÃñv&:P}∂N5™∫™Ï5Ü}+]:µÀ‹Q⁄"_Jw4∏›∂´b°≈ï2wÏÉŒçdÃTVÕ–>Ê¨õ1w†ê1w†ê1wÃsç2wÃã)eÓòªî2wÄê3w†ê1wÿ 0w†ê1w†ÎåπÖåπÖåπÑúπÖåπÑsÜDgÓF∂¿‹¡Q™\\Có”üV¢÷iÌD`ıPcTsÿgÓ®¨IÀ¿>sG≥Å◊EÒcíÆmTµ\\LXÖZ„`gÆ›[Ñ…M∞ÉΩ√"πüAUà?≠ø‡∞@›∆zkÓ∆n≥<È:CáÌ¡•W2π	˘«—N¶d/;"	v
uC	figures/one-way/direct/significance/mi_baseline_ifnet_bins.png	/^/;"	v
v	figures/mi_fig_spikeToLFP/10min/partial/20.png	/^‘®Q#∑÷/;"	v
v	figures/robust/partial/mi_0075.png	/^/;"	v
vI2	figures/robust/partial/mi_0015.png	/^EGGõ?ænΩıVMö4…\/Ô%™è/;"	v
vW	figures/neuronal_dimension_analysis/IPSP_s.png	/^Cß…–·#p\/D~gâ˜´‘N^OüÈõxk·R“vW)"""6Q/;"	v
value	doc/Aug01.md	/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$/;"	v
value	tags	/^dt	doc\/Aug01.md	\/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$\/;"	v$/;"	v
value	tags	/^sequence	doc\/Aug01.md	\/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$\/;"	v$/;"	v
value	tags	/^variable	doc\/Aug01.md	\/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$\/;"	v$/;"	v
variable	doc/Aug01.md	/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$/;"	v
variable	makefile	4;"	d	file:
variable	tags	/^dt	doc\/Aug01.md	\/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$\/;"	v$/;"	v
variable	tags	/^sequence	doc\/Aug01.md	\/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$\/;"	v$/;"	v
variable	tags	/^variable	doc\/Aug01.md	\/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$\/;"	v$/;"	v
w	figures/dt/full/mi_00625.png	/^/;"	v
w	figures/mi_fig_spikeToLFP/10min/full/400.png	/^å¥∆“ìËº˛PwÓ0K˛_…æ6#Éw;V}ŸRRòEa¸¯Ïc«,>™≥+‚Oø?©Ïí≤4ˆ‰X*∑¥úŒ2ìΩç´4qØÄhØÄ"§Ù»ë˘˚@'&≤`µ¡≥˝	"‰I£™)ì&±¿ﬁù˜YÆÒÄpÌÇK$úÑÃöeπÀÕ‡¡,•ﬁ◊pGÆõ]Ûòö•dd0˜yìmn¶Mc;8~~ÍH^¥ôtzyÂàÒxüû ,)£4≠mnîYA∆ûKU˛©"w1>e$/;"	v
w	figures/mi_fig_spikeToLFP/10min/partial/20.png	/^¥k◊.m‹∏Qˇ˙◊ø4zÙhµlŸRÉÆÛµ˝¸¸*Ï§%IŸŸŸuænMπB‹Ò„«=˛^®?⁄V#%%E≈≈≈*..VQQëäääJ˛∑kµ#11±Ã«.!!!JHHPzz∫ÚÛÛµwÔ^¬/;"	v
w	figures/one-way/direct/significance/mi_01_20_1k.png	/^T«éU•ä5€ò>\\999˙√Û€2335wÓ\\ıÏŸSMõ6u˙sﬁ—˙=pÛz:ÍiùH+˘-Üù;•¨	 ◊]'›xcÈñ„Õ[b7¯Ü‡"œÈŸ¨ß¸j¯iIÇÛV√ …ë,ê⁄∂5ﬂdﬂyß¥wØÙŒ;R√ÜÂø~¸Òx5≠’Tı}ÍyNﬁÍÀ6H≥Ôú-ˇ:˛zdÈ#ez#üïì•òƒò"˜ˇ( m˛∑©_ã~z1ÊEΩπ·Mçºi§Z‘i°ô3•*U$/;"	v
w	figures/robust/direct/mi_0075.png	/^Ze7–F)mïV°6‚É,JQZTp©¢Ï*∆Öá/;"	v
wR	figures/voltage_1.5kHz.png	/^Xƒí/;"	v
wx	figures/one-way/direct/indirected/mi_sg_direct_00.png	/^/;"	v
x	bin/lcc.out	/^èˇˇHâEòÚEòHÉƒh[]√UHâÂSHÅÏò/;"	v
x	figures/gauss/20.png	/^◊“	/;"	v
x	figures/mi_fig_spikeToLFP/direct/10bins/30s.png	/^x=/;"	v
x	figures/mi_fig_spikeToLFP/direct/50bins/25s.png	/^ñdL√⁄π”‹/;"	v
x	figures/two-way/partial/mi_01.png	/^úﬂWá@@œπx='ØÎ\\◊ı·‹Œ-oæÀ«ÂızΩ/;"	v
y	doc/Aug01.md	/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$/;"	v
y	figures/sv_30_10min_0-1.png	/^/;"	v
y	reports/Jul20/pp3.png	/^≤¢†Sªÿ&·>y`‚⁄£;Óô&î™3ÓŒÑ\/=…têãí(‹√bbT&;«}(EMY	ñ‘ï„¬˜>	/;"	v
y	reports/Jul20/sp1.png	/^ôü>'v"…êÙ…©l˜Ò€nªÕDI»î∏·àÙl;RàÁwû@Äª>~x˙ˆt;ëŸπ\\◊/;"	v
y	tags	/^dt	doc\/Aug01.md	\/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$\/;"	v$/;"	v
y	tags	/^sequence	doc\/Aug01.md	\/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$\/;"	v$/;"	v
y	tags	/^variable	doc\/Aug01.md	\/^where x, representing spike train, is binary sequence, and y represents the LFP. $Cov$ is the notation of covariance and $\\\\sigma$ stands for the standard deviation. For each elements in x, '0' indicates no spiking events happens within time period, dt, which is chosen as a specific value, and otherwise there is a spike. Meanwhile, each elements in y stands for the mean value of continues variable, y, within time period dt.$\/;"	v$/;"	v
yB	figures/one-way/direct/significance/Figure_1.png	/^ó˙Bó`ª¸√g:°∞yB=2ÙÁêt–@&Ä?π∏pP¬D;	§6®T*éºº<°K"""z°≤—ø^/;"	v
ysEEE5	mi_01_2bins.png	/^îññf ı/;"	v
yxSu	figures/gauss/mi_gauss_0.1_0.1_0.5.png	/^/;"	v
z	figures/mi_fig_spikeToLFP/10min/direct/2.png	/^ ﬂˇΩŸ%/;"	v
z	figures/nn0145/n2i3200.png	/^ñB‘®LùÍ˙kπäﬁ†G‚˝Ça>πÂz"Oógw…Wõàw~/;"	v
z	reports/oct31/Recent numerical results related to neuronal network simulation.pdf	/^∞õ¢µËı1˜¸£8s«¡6áÁºü«g7uıÛ¶MõJKKwÌ⁄é´´´;tË∞fÕöÙŸ	&‹zÎ≠©„;ÔºsÃò1u-f1bƒú9sj,~˝Î_ü:ujÉ?t80¬ó˝u◊]óÔ]ÏE?Îg˝¨üı≥~÷œÒîöH˛cvSW??ˇ¸ÛΩ{˜N_8p‡¢Eã“Gé˘√ßéÁÕõWYYY◊b⁄ä+⁄∂mªn›∫Ã≈/;"	v
~_	figures/mi_fig_spikeToLFP/direct/30bins/5s.png	/^§'jÔÄÂ4t®¥r•Ò·b3ˇ™Êr’}/;"	v
~	figures/gauss/mi_gauss_baseline_trials.png	/^∂÷⁄ÍØãk˚µv˚ZÌ◊ä⁄∫vq´≠µ•uØ∂jk•Pàl¬d	˚HÄê‰Æ3s~ƒ3ÃÃ=3ôõ{\/	‹Á˝zÂï‹Áûô˚|ŒsÊ‰‹ôÛú#1∆Ç Ç àåAÓhÇ Ç à”$/;"	v
~æ	reports/Jul20/report0731_KC.pdf	/^%ÇÑb2Îå¬‘ûÈÃö!å_q¿¬dÆÂƒ“Jÿ}˙Õ›u+3ôΩ∆ò6v˘Å∂?n¶Ÿáx£b2âÜX∫Ì€£ÉLÜ÷‡_«>y˘a˙öœ[Få?ÿ÷®)JÑ… `¨]T,A#§ÆÿFw±uü\/&≥Ê@aΩÄøLÜ÷e~æŸÆ:=ÁG—(]44 YüQ¸àüV¬Óì‡›V!~H(&≥ÊÄŒdfo8ÚÏÄ%¨Â2fÈ~zs‹ÚB>ubB¿ﬂπ|ód2œ›íLf˜	›’N√o∑‘m‡ç∑8ì………©T©RπrÂö5kñüb~ü2eJÖ$/;"	v
~¿	reports/Jul20/rr1.png	/^*®(¢"2tdËËt≥˚Ç€p® €‹PÍOUÊ¿©t≤ÅË,ä îã†(-Z@äÂMÂﬁÙñ4∑ﬂiNì&È5ósN^œ«É9Á|íæ€¶Ì;üº?Ôè¬b±X@DDDDD¢‰Ô/;"	v
~¿	reports/Jul20/rr2.png	/^*®(¢"2tdËËt≥˚Ç€p® €‹PÍOUÊ¿©t≤ÅË,ä îã†(-Z@äÂMÂﬁÙñ4∑ﬂiNì&È5ósN^œ«É9Á|íæ€¶Ì;üº?Ôè¬b±X@DDDDD¢‰Ô/;"	v
~˙i	reports/Jul20/ll2.png	/^É‰Ñè}ÏcY≠øa√Ü~ÍIv∞nÚ•\/Ïáõ|ÈK∂˝»ˆ˚AÂ’W_5Æø˛zÎ˘∫uÎåO˙”ûÎ8p¿ò4iíÁkÛÁœ7~˘À_˙ÓÁ›wﬂ5.ΩÙ“å˙ƒÔºﬁë\/˝0å¸È˚·&_˙2–ﬂy≈3ÓÑ2»ò5kZZZ∞gœ/;"	v
~¸	mi_01_10e-6.png	/^Ø˙c·sœ=ß◊_]∑ﬁz´~¸„Î√?‘+Øº¢ù;wj«éjZÒ?Ô4t.£gœûö5kñ^{Ì5Ì‹πS˜ﬂøZ¥h!IÍ—£áfÕö•‹‹\\mÿ∞A„«èW˚ˆÌ%©Úµ6sÊÃ—ú9sØ°Cá*!!A;wÓ‘¸˘ÛµfÕm⁄¥IÕõ7oÿø0òä/;"	v
